

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 22 14:53:28 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197                           
   198                           	psect	stringtext
   199  0400                     __pstringtext:
   200  0400                     stringtab:
   201  0400                     __stringtab:
   202                           
   203                           ;	String table - string pointers are 2 bytes each
   204  0400  1BFF               	btfsc	btemp+1,7
   205  0401  2C0A               	ljmp	stringcode
   206  0402  1383               	bcf	3,7
   207  0403  187F               	btfsc	btemp+1,0
   208  0404  1783               	bsf	3,7
   209  0405  0800               	movf	0,w
   210  0406  0A84               	incf	4,f
   211  0407  1903               	skipnz
   212  0408  0AFF               	incf	btemp+1,f
   213  0409  0008               	return
   214  040A                     stringcode:
   215  040A  087F               	movf	btemp+1,w
   216  040B  397F               	andlw	127
   217  040C  008A               	movwf	10
   218  040D  0804               	movf	4,w
   219  040E  0A84               	incf	4,f
   220  040F  1903               	skipnz
   221  0410  0AFF               	incf	btemp+1,f
   222  0411  0082               	movwf	2
   223  0412                     __stringbase:
   224  0412                     __end_of__stringtab:
   225  0412                     _dpowers:
   226  0412  3401               	retlw	1
   227  0413  3400               	retlw	0
   228  0414  340A               	retlw	10
   229  0415  3400               	retlw	0
   230  0416  3464               	retlw	100
   231  0417  3400               	retlw	0
   232  0418  34E8               	retlw	232
   233  0419  3403               	retlw	3
   234  041A  3410               	retlw	16
   235  041B  3427               	retlw	39
   236  041C                     __end_of_dpowers:
   237  041C                     STR_2:
   238  041C  340A               	retlw	10
   239  041D  343C               	retlw	60	;'<'
   240  041E  3450               	retlw	80	;'P'
   241  041F  3461               	retlw	97	;'a'
   242  0420  3472               	retlw	114	;'r'
   243  0421  3461               	retlw	97	;'a'
   244  0422  346D               	retlw	109	;'m'
   245  0423  3465               	retlw	101	;'e'
   246  0424  3474               	retlw	116	;'t'
   247  0425  3465               	retlw	101	;'e'
   248  0426  3472               	retlw	114	;'r'
   249  0427  3473               	retlw	115	;'s'
   250  0428  343E               	retlw	62	;'>'
   251  0429  340A               	retlw	10
   252  042A  3409               	retlw	9
   253  042B  343C               	retlw	60	;'<'
   254  042C  346C               	retlw	108	;'l'
   255  042D  346F               	retlw	111	;'o'
   256  042E  3477               	retlw	119	;'w'
   257  042F  345F               	retlw	95	;'_'
   258  0430  346C               	retlw	108	;'l'
   259  0431  3469               	retlw	105	;'i'
   260  0432  3467               	retlw	103	;'g'
   261  0433  3468               	retlw	104	;'h'
   262  0434  3474               	retlw	116	;'t'
   263  0435  343E               	retlw	62	;'>'
   264  0436  3425               	retlw	37	;'%'
   265  0437  3464               	retlw	100	;'d'
   266  0438  343C               	retlw	60	;'<'
   267  0439  342F               	retlw	47	;'/'
   268  043A  346C               	retlw	108	;'l'
   269  043B  346F               	retlw	111	;'o'
   270  043C  3477               	retlw	119	;'w'
   271  043D  345F               	retlw	95	;'_'
   272  043E  346C               	retlw	108	;'l'
   273  043F  3469               	retlw	105	;'i'
   274  0440  3467               	retlw	103	;'g'
   275  0441  3468               	retlw	104	;'h'
   276  0442  3474               	retlw	116	;'t'
   277  0443  343E               	retlw	62	;'>'
   278  0444  340A               	retlw	10
   279  0445  3409               	retlw	9
   280  0446  343C               	retlw	60	;'<'
   281  0447  346C               	retlw	108	;'l'
   282  0448  3475               	retlw	117	;'u'
   283  0449  3478               	retlw	120	;'x'
   284  044A  345F               	retlw	95	;'_'
   285  044B  3463               	retlw	99	;'c'
   286  044C  3466               	retlw	102	;'f'
   287  044D  3467               	retlw	103	;'g'
   288  044E  343E               	retlw	62	;'>'
   289  044F  3425               	retlw	37	;'%'
   290  0450  3464               	retlw	100	;'d'
   291  0451  343C               	retlw	60	;'<'
   292  0452  342F               	retlw	47	;'/'
   293  0453  346C               	retlw	108	;'l'
   294  0454  3475               	retlw	117	;'u'
   295  0455  3478               	retlw	120	;'x'
   296  0456  345F               	retlw	95	;'_'
   297  0457  3463               	retlw	99	;'c'
   298  0458  3466               	retlw	102	;'f'
   299  0459  3467               	retlw	103	;'g'
   300  045A  343E               	retlw	62	;'>'
   301  045B  340A               	retlw	10
   302  045C  343C               	retlw	60	;'<'
   303  045D  342F               	retlw	47	;'/'
   304  045E  3450               	retlw	80	;'P'
   305  045F  3461               	retlw	97	;'a'
   306  0460  3472               	retlw	114	;'r'
   307  0461  3461               	retlw	97	;'a'
   308  0462  346D               	retlw	109	;'m'
   309  0463  3465               	retlw	101	;'e'
   310  0464  3474               	retlw	116	;'t'
   311  0465  3465               	retlw	101	;'e'
   312  0466  3472               	retlw	114	;'r'
   313  0467  3473               	retlw	115	;'s'
   314  0468  343E               	retlw	62	;'>'
   315  0469  340A               	retlw	10
   316  046A  3400               	retlw	0
   317  046B                     STR_1:
   318  046B  340A               	retlw	10
   319  046C  343C               	retlw	60	;'<'
   320  046D  346C               	retlw	108	;'l'
   321  046E  3464               	retlw	100	;'d'
   322  046F  3472               	retlw	114	;'r'
   323  0470  345F               	retlw	95	;'_'
   324  0471  3476               	retlw	118	;'v'
   325  0472  3461               	retlw	97	;'a'
   326  0473  346C               	retlw	108	;'l'
   327  0474  3475               	retlw	117	;'u'
   328  0475  3465               	retlw	101	;'e'
   329  0476  343E               	retlw	62	;'>'
   330  0477  340A               	retlw	10
   331  0478  3409               	retlw	9
   332  0479  343C               	retlw	60	;'<'
   333  047A  346C               	retlw	108	;'l'
   334  047B  3464               	retlw	100	;'d'
   335  047C  3472               	retlw	114	;'r'
   336  047D  345F               	retlw	95	;'_'
   337  047E  3431               	retlw	49	;'1'
   338  047F  343E               	retlw	62	;'>'
   339  0480  3425               	retlw	37	;'%'
   340  0481  3464               	retlw	100	;'d'
   341  0482  343C               	retlw	60	;'<'
   342  0483  342F               	retlw	47	;'/'
   343  0484  346C               	retlw	108	;'l'
   344  0485  3464               	retlw	100	;'d'
   345  0486  3472               	retlw	114	;'r'
   346  0487  345F               	retlw	95	;'_'
   347  0488  3431               	retlw	49	;'1'
   348  0489  343E               	retlw	62	;'>'
   349  048A  340A               	retlw	10
   350  048B  3409               	retlw	9
   351  048C  343C               	retlw	60	;'<'
   352  048D  346C               	retlw	108	;'l'
   353  048E  3464               	retlw	100	;'d'
   354  048F  3472               	retlw	114	;'r'
   355  0490  345F               	retlw	95	;'_'
   356  0491  3432               	retlw	50	;'2'
   357  0492  343E               	retlw	62	;'>'
   358  0493  3425               	retlw	37	;'%'
   359  0494  3464               	retlw	100	;'d'
   360  0495  343C               	retlw	60	;'<'
   361  0496  342F               	retlw	47	;'/'
   362  0497  346C               	retlw	108	;'l'
   363  0498  3464               	retlw	100	;'d'
   364  0499  3472               	retlw	114	;'r'
   365  049A  345F               	retlw	95	;'_'
   366  049B  3432               	retlw	50	;'2'
   367  049C  343E               	retlw	62	;'>'
   368  049D  340A               	retlw	10
   369  049E  343C               	retlw	60	;'<'
   370  049F  342F               	retlw	47	;'/'
   371  04A0  346C               	retlw	108	;'l'
   372  04A1  3464               	retlw	100	;'d'
   373  04A2  3472               	retlw	114	;'r'
   374  04A3  345F               	retlw	95	;'_'
   375  04A4  3476               	retlw	118	;'v'
   376  04A5  3461               	retlw	97	;'a'
   377  04A6  346C               	retlw	108	;'l'
   378  04A7  3475               	retlw	117	;'u'
   379  04A8  3465               	retlw	101	;'e'
   380  04A9  343E               	retlw	62	;'>'
   381  04AA  340A               	retlw	10
   382  04AB  3400               	retlw	0
   383  04AC                     STR_6:
   384  04AC  340A               	retlw	10
   385  04AD  343C               	retlw	60	;'<'
   386  04AE  3469               	retlw	105	;'i'
   387  04AF  346E               	retlw	110	;'n'
   388  04B0  3466               	retlw	102	;'f'
   389  04B1  346F               	retlw	111	;'o'
   390  04B2  343E               	retlw	62	;'>'
   391  04B3  340A               	retlw	10
   392  04B4  3409               	retlw	9
   393  04B5  343C               	retlw	60	;'<'
   394  04B6  3473               	retlw	115	;'s'
   395  04B7  3474               	retlw	116	;'t'
   396  04B8  3461               	retlw	97	;'a'
   397  04B9  3474               	retlw	116	;'t'
   398  04BA  3465               	retlw	101	;'e'
   399  04BB  343E               	retlw	62	;'>'
   400  04BC  343C               	retlw	60	;'<'
   401  04BD  344D               	retlw	77	;'M'
   402  04BE  346F               	retlw	111	;'o'
   403  04BF  3474               	retlw	116	;'t'
   404  04C0  3469               	retlw	105	;'i'
   405  04C1  346F               	retlw	111	;'o'
   406  04C2  346E               	retlw	110	;'n'
   407  04C3  3420               	retlw	32	;' '
   408  04C4  3474               	retlw	116	;'t'
   409  04C5  346F               	retlw	111	;'o'
   410  04C6  3420               	retlw	32	;' '
   411  04C7  3474               	retlw	116	;'t'
   412  04C8  3468               	retlw	104	;'h'
   413  04C9  3465               	retlw	101	;'e'
   414  04CA  3420               	retlw	32	;' '
   415  04CB  3472               	retlw	114	;'r'
   416  04CC  3469               	retlw	105	;'i'
   417  04CD  3467               	retlw	103	;'g'
   418  04CE  3468               	retlw	104	;'h'
   419  04CF  3474               	retlw	116	;'t'
   420  04D0  343E               	retlw	62	;'>'
   421  04D1  343C               	retlw	60	;'<'
   422  04D2  345C               	retlw	92	;'\'
   423  04D3  3473               	retlw	115	;'s'
   424  04D4  3474               	retlw	116	;'t'
   425  04D5  3461               	retlw	97	;'a'
   426  04D6  3474               	retlw	116	;'t'
   427  04D7  3465               	retlw	101	;'e'
   428  04D8  343E               	retlw	62	;'>'
   429  04D9  340A               	retlw	10
   430  04DA  343C               	retlw	60	;'<'
   431  04DB  345C               	retlw	92	;'\'
   432  04DC  3469               	retlw	105	;'i'
   433  04DD  346E               	retlw	110	;'n'
   434  04DE  3466               	retlw	102	;'f'
   435  04DF  346F               	retlw	111	;'o'
   436  04E0  343E               	retlw	62	;'>'
   437  04E1  3400               	retlw	0
   438  04E2                     STR_5:
   439  04E2  340A               	retlw	10
   440  04E3  343C               	retlw	60	;'<'
   441  04E4  3469               	retlw	105	;'i'
   442  04E5  346E               	retlw	110	;'n'
   443  04E6  3466               	retlw	102	;'f'
   444  04E7  346F               	retlw	111	;'o'
   445  04E8  343E               	retlw	62	;'>'
   446  04E9  340A               	retlw	10
   447  04EA  3409               	retlw	9
   448  04EB  343C               	retlw	60	;'<'
   449  04EC  3473               	retlw	115	;'s'
   450  04ED  3474               	retlw	116	;'t'
   451  04EE  3461               	retlw	97	;'a'
   452  04EF  3474               	retlw	116	;'t'
   453  04F0  3465               	retlw	101	;'e'
   454  04F1  343E               	retlw	62	;'>'
   455  04F2  343C               	retlw	60	;'<'
   456  04F3  344D               	retlw	77	;'M'
   457  04F4  346F               	retlw	111	;'o'
   458  04F5  3474               	retlw	116	;'t'
   459  04F6  3469               	retlw	105	;'i'
   460  04F7  346F               	retlw	111	;'o'
   461  04F8  346E               	retlw	110	;'n'
   462  04F9  3420               	retlw	32	;' '
   463  04FA  3474               	retlw	116	;'t'
   464  04FB  346F               	retlw	111	;'o'
   465  04FC  3420               	retlw	32	;' '
   466  04FD  3474               	retlw	116	;'t'
   467  04FE  3468               	retlw	104	;'h'
   468  04FF  3465               	retlw	101	;'e'
   469  0500  3420               	retlw	32	;' '
   470  0501  346C               	retlw	108	;'l'
   471  0502  3465               	retlw	101	;'e'
   472  0503  3466               	retlw	102	;'f'
   473  0504  3474               	retlw	116	;'t'
   474  0505  343E               	retlw	62	;'>'
   475  0506  343C               	retlw	60	;'<'
   476  0507  345C               	retlw	92	;'\'
   477  0508  3473               	retlw	115	;'s'
   478  0509  3474               	retlw	116	;'t'
   479  050A  3461               	retlw	97	;'a'
   480  050B  3474               	retlw	116	;'t'
   481  050C  3465               	retlw	101	;'e'
   482  050D  343E               	retlw	62	;'>'
   483  050E  340A               	retlw	10
   484  050F  343C               	retlw	60	;'<'
   485  0510  345C               	retlw	92	;'\'
   486  0511  3469               	retlw	105	;'i'
   487  0512  346E               	retlw	110	;'n'
   488  0513  3466               	retlw	102	;'f'
   489  0514  346F               	retlw	111	;'o'
   490  0515  343E               	retlw	62	;'>'
   491  0516  3400               	retlw	0
   492  0517                     STR_4:
   493  0517  340A               	retlw	10
   494  0518  343C               	retlw	60	;'<'
   495  0519  3469               	retlw	105	;'i'
   496  051A  346E               	retlw	110	;'n'
   497  051B  3466               	retlw	102	;'f'
   498  051C  346F               	retlw	111	;'o'
   499  051D  343E               	retlw	62	;'>'
   500  051E  340A               	retlw	10
   501  051F  3409               	retlw	9
   502  0520  343C               	retlw	60	;'<'
   503  0521  3473               	retlw	115	;'s'
   504  0522  3474               	retlw	116	;'t'
   505  0523  3461               	retlw	97	;'a'
   506  0524  3474               	retlw	116	;'t'
   507  0525  3465               	retlw	101	;'e'
   508  0526  343E               	retlw	62	;'>'
   509  0527  343C               	retlw	60	;'<'
   510  0528  344D               	retlw	77	;'M'
   511  0529  346F               	retlw	111	;'o'
   512  052A  3474               	retlw	116	;'t'
   513  052B  346F               	retlw	111	;'o'
   514  052C  3472               	retlw	114	;'r'
   515  052D  3420               	retlw	32	;' '
   516  052E  3468               	retlw	104	;'h'
   517  052F  3461               	retlw	97	;'a'
   518  0530  3473               	retlw	115	;'s'
   519  0531  3420               	retlw	32	;' '
   520  0532  3473               	retlw	115	;'s'
   521  0533  3474               	retlw	116	;'t'
   522  0534  346F               	retlw	111	;'o'
   523  0535  3470               	retlw	112	;'p'
   524  0536  3470               	retlw	112	;'p'
   525  0537  3465               	retlw	101	;'e'
   526  0538  3464               	retlw	100	;'d'
   527  0539  343E               	retlw	62	;'>'
   528  053A  343C               	retlw	60	;'<'
   529  053B  345C               	retlw	92	;'\'
   530  053C  3473               	retlw	115	;'s'
   531  053D  3474               	retlw	116	;'t'
   532  053E  3461               	retlw	97	;'a'
   533  053F  3474               	retlw	116	;'t'
   534  0540  3465               	retlw	101	;'e'
   535  0541  343E               	retlw	62	;'>'
   536  0542  340A               	retlw	10
   537  0543  343C               	retlw	60	;'<'
   538  0544  345C               	retlw	92	;'\'
   539  0545  3469               	retlw	105	;'i'
   540  0546  346E               	retlw	110	;'n'
   541  0547  3466               	retlw	102	;'f'
   542  0548  346F               	retlw	111	;'o'
   543  0549  343E               	retlw	62	;'>'
   544  054A  3400               	retlw	0
   545  054B                     STR_8:
   546  054B  340A               	retlw	10
   547  054C  343C               	retlw	60	;'<'
   548  054D  3469               	retlw	105	;'i'
   549  054E  346E               	retlw	110	;'n'
   550  054F  3466               	retlw	102	;'f'
   551  0550  346F               	retlw	111	;'o'
   552  0551  343E               	retlw	62	;'>'
   553  0552  340A               	retlw	10
   554  0553  3409               	retlw	9
   555  0554  343C               	retlw	60	;'<'
   556  0555  3473               	retlw	115	;'s'
   557  0556  3474               	retlw	116	;'t'
   558  0557  3461               	retlw	97	;'a'
   559  0558  3474               	retlw	116	;'t'
   560  0559  3465               	retlw	101	;'e'
   561  055A  343E               	retlw	62	;'>'
   562  055B  343C               	retlw	60	;'<'
   563  055C  344D               	retlw	77	;'M'
   564  055D  346F               	retlw	111	;'o'
   565  055E  3474               	retlw	116	;'t'
   566  055F  346F               	retlw	111	;'o'
   567  0560  3472               	retlw	114	;'r'
   568  0561  3420               	retlw	32	;' '
   569  0562  346F               	retlw	111	;'o'
   570  0563  3476               	retlw	118	;'v'
   571  0564  3465               	retlw	101	;'e'
   572  0565  3472               	retlw	114	;'r'
   573  0566  342D               	retlw	45	;'-'
   574  0567  3468               	retlw	104	;'h'
   575  0568  3465               	retlw	101	;'e'
   576  0569  3461               	retlw	97	;'a'
   577  056A  3474               	retlw	116	;'t'
   578  056B  3465               	retlw	101	;'e'
   579  056C  3464               	retlw	100	;'d'
   580  056D  343E               	retlw	62	;'>'
   581  056E  343C               	retlw	60	;'<'
   582  056F  345C               	retlw	92	;'\'
   583  0570  3473               	retlw	115	;'s'
   584  0571  3474               	retlw	116	;'t'
   585  0572  3461               	retlw	97	;'a'
   586  0573  3474               	retlw	116	;'t'
   587  0574  3465               	retlw	101	;'e'
   588  0575  343E               	retlw	62	;'>'
   589  0576  340A               	retlw	10
   590  0577  343C               	retlw	60	;'<'
   591  0578  345C               	retlw	92	;'\'
   592  0579  3469               	retlw	105	;'i'
   593  057A  346E               	retlw	110	;'n'
   594  057B  3466               	retlw	102	;'f'
   595  057C  346F               	retlw	111	;'o'
   596  057D  343E               	retlw	62	;'>'
   597  057E  3400               	retlw	0
   598  057F                     STR_9:
   599  057F  340A               	retlw	10
   600  0580  343C               	retlw	60	;'<'
   601  0581  3469               	retlw	105	;'i'
   602  0582  346E               	retlw	110	;'n'
   603  0583  3466               	retlw	102	;'f'
   604  0584  346F               	retlw	111	;'o'
   605  0585  343E               	retlw	62	;'>'
   606  0586  340A               	retlw	10
   607  0587  3409               	retlw	9
   608  0588  343C               	retlw	60	;'<'
   609  0589  3473               	retlw	115	;'s'
   610  058A  3474               	retlw	116	;'t'
   611  058B  3461               	retlw	97	;'a'
   612  058C  3474               	retlw	116	;'t'
   613  058D  3465               	retlw	101	;'e'
   614  058E  343E               	retlw	62	;'>'
   615  058F  343C               	retlw	60	;'<'
   616  0590  344C               	retlw	76	;'L'
   617  0591  3469               	retlw	105	;'i'
   618  0592  3467               	retlw	103	;'g'
   619  0593  3468               	retlw	104	;'h'
   620  0594  3474               	retlw	116	;'t'
   621  0595  3420               	retlw	32	;' '
   622  0596  3469               	retlw	105	;'i'
   623  0597  3473               	retlw	115	;'s'
   624  0598  3420               	retlw	32	;' '
   625  0599  3474               	retlw	116	;'t'
   626  059A  346F               	retlw	111	;'o'
   627  059B  346F               	retlw	111	;'o'
   628  059C  3420               	retlw	32	;' '
   629  059D  346C               	retlw	108	;'l'
   630  059E  346F               	retlw	111	;'o'
   631  059F  3477               	retlw	119	;'w'
   632  05A0  343E               	retlw	62	;'>'
   633  05A1  343C               	retlw	60	;'<'
   634  05A2  345C               	retlw	92	;'\'
   635  05A3  3473               	retlw	115	;'s'
   636  05A4  3474               	retlw	116	;'t'
   637  05A5  3461               	retlw	97	;'a'
   638  05A6  3474               	retlw	116	;'t'
   639  05A7  3465               	retlw	101	;'e'
   640  05A8  343E               	retlw	62	;'>'
   641  05A9  340A               	retlw	10
   642  05AA  343C               	retlw	60	;'<'
   643  05AB  345C               	retlw	92	;'\'
   644  05AC  3469               	retlw	105	;'i'
   645  05AD  346E               	retlw	110	;'n'
   646  05AE  3466               	retlw	102	;'f'
   647  05AF  346F               	retlw	111	;'o'
   648  05B0  343E               	retlw	62	;'>'
   649  05B1  3400               	retlw	0
   650  05B2                     STR_7:
   651  05B2  340A               	retlw	10
   652  05B3  343C               	retlw	60	;'<'
   653  05B4  3469               	retlw	105	;'i'
   654  05B5  346E               	retlw	110	;'n'
   655  05B6  3466               	retlw	102	;'f'
   656  05B7  346F               	retlw	111	;'o'
   657  05B8  343E               	retlw	62	;'>'
   658  05B9  340A               	retlw	10
   659  05BA  3409               	retlw	9
   660  05BB  343C               	retlw	60	;'<'
   661  05BC  3473               	retlw	115	;'s'
   662  05BD  3474               	retlw	116	;'t'
   663  05BE  3461               	retlw	97	;'a'
   664  05BF  3474               	retlw	116	;'t'
   665  05C0  3465               	retlw	101	;'e'
   666  05C1  343E               	retlw	62	;'>'
   667  05C2  343C               	retlw	60	;'<'
   668  05C3  3453               	retlw	83	;'S'
   669  05C4  3474               	retlw	116	;'t'
   670  05C5  3461               	retlw	97	;'a'
   671  05C6  346E               	retlw	110	;'n'
   672  05C7  3464               	retlw	100	;'d'
   673  05C8  3442               	retlw	66	;'B'
   674  05C9  3479               	retlw	121	;'y'
   675  05CA  343E               	retlw	62	;'>'
   676  05CB  343C               	retlw	60	;'<'
   677  05CC  345C               	retlw	92	;'\'
   678  05CD  3473               	retlw	115	;'s'
   679  05CE  3474               	retlw	116	;'t'
   680  05CF  3461               	retlw	97	;'a'
   681  05D0  3474               	retlw	116	;'t'
   682  05D1  3465               	retlw	101	;'e'
   683  05D2  343E               	retlw	62	;'>'
   684  05D3  340A               	retlw	10
   685  05D4  343C               	retlw	60	;'<'
   686  05D5  345C               	retlw	92	;'\'
   687  05D6  3469               	retlw	105	;'i'
   688  05D7  346E               	retlw	110	;'n'
   689  05D8  3466               	retlw	102	;'f'
   690  05D9  346F               	retlw	111	;'o'
   691  05DA  343E               	retlw	62	;'>'
   692  05DB  3400               	retlw	0
   693  05DC                     STR_3:
   694  05DC  340A               	retlw	10
   695  05DD  343C               	retlw	60	;'<'
   696  05DE  3469               	retlw	105	;'i'
   697  05DF  346E               	retlw	110	;'n'
   698  05E0  3466               	retlw	102	;'f'
   699  05E1  346F               	retlw	111	;'o'
   700  05E2  343E               	retlw	62	;'>'
   701  05E3  340A               	retlw	10
   702  05E4  3409               	retlw	9
   703  05E5  343C               	retlw	60	;'<'
   704  05E6  3473               	retlw	115	;'s'
   705  05E7  3474               	retlw	116	;'t'
   706  05E8  3461               	retlw	97	;'a'
   707  05E9  3474               	retlw	116	;'t'
   708  05EA  3465               	retlw	101	;'e'
   709  05EB  343E               	retlw	62	;'>'
   710  05EC  343C               	retlw	60	;'<'
   711  05ED  3465               	retlw	101	;'e'
   712  05EE  3472               	retlw	114	;'r'
   713  05EF  3472               	retlw	114	;'r'
   714  05F0  346F               	retlw	111	;'o'
   715  05F1  3472               	retlw	114	;'r'
   716  05F2  343E               	retlw	62	;'>'
   717  05F3  343C               	retlw	60	;'<'
   718  05F4  345C               	retlw	92	;'\'
   719  05F5  3473               	retlw	115	;'s'
   720  05F6  3474               	retlw	116	;'t'
   721  05F7  3461               	retlw	97	;'a'
   722  05F8  3474               	retlw	116	;'t'
   723  05F9  3465               	retlw	101	;'e'
   724  05FA  343E               	retlw	62	;'>'
   725  05FB  340A               	retlw	10
   726  05FC  343C               	retlw	60	;'<'
   727  05FD  345C               	retlw	92	;'\'
   728  05FE  3469               	retlw	105	;'i'
   729  05FF  346E               	retlw	110	;'n'
   730  0600  3466               	retlw	102	;'f'
   731  0601  346F               	retlw	111	;'o'
   732  0602  343E               	retlw	62	;'>'
   733  0603  3400               	retlw	0
   734  0604                     STR_10:
   735  0604  340A               	retlw	10
   736  0605  343C               	retlw	60	;'<'
   737  0606  3441               	retlw	65	;'A'
   738  0607  3443               	retlw	67	;'C'
   739  0608  344B               	retlw	75	;'K'
   740  0609  343E               	retlw	62	;'>'
   741  060A  340A               	retlw	10
   742  060B  3409               	retlw	9
   743  060C  343C               	retlw	60	;'<'
   744  060D  3443               	retlw	67	;'C'
   745  060E  343E               	retlw	62	;'>'
   746  060F  3425               	retlw	37	;'%'
   747  0610  3463               	retlw	99	;'c'
   748  0611  343C               	retlw	60	;'<'
   749  0612  342F               	retlw	47	;'/'
   750  0613  3443               	retlw	67	;'C'
   751  0614  343E               	retlw	62	;'>'
   752  0615  340A               	retlw	10
   753  0616  343C               	retlw	60	;'<'
   754  0617  342F               	retlw	47	;'/'
   755  0618  3441               	retlw	65	;'A'
   756  0619  3443               	retlw	67	;'C'
   757  061A  344B               	retlw	75	;'K'
   758  061B  343E               	retlw	62	;'>'
   759  061C  3400               	retlw	0
   760                           
   761                           	psect	nvBANK0
   762  003F                     __pnvBANK0:
   763  003F                     _low_light_value:
   764  003F                     	ds	2
   765  0041                     _lux_value_cfg:
   766  0041                     	ds	2
   767  0043                     _monitoring:
   768  0043                     	ds	2
   769  0045                     _motion:
   770  0045                     	ds	1
   771  0005                     _PORTAbits	set	5
   772  0006                     _PORTBbits	set	6
   773  000B                     _INTCONbits	set	11
   774  0007                     _PORTCbits	set	7
   775  001A                     _RCREG	set	26
   776  0019                     _TXREG	set	25
   777  000C                     _PIR1bits	set	12
   778  001E                     _ADRESH	set	30
   779  001F                     _ADCON0bits	set	31
   780  0018                     _RCSTAbits	set	24
   781  0018                     _RCSTA	set	24
   782  0085                     _TRISAbits	set	133
   783  0086                     _TRISB	set	134
   784  0081                     _OPTION_REGbits	set	129
   785  0081                     _OPTION_REG	set	129
   786  0087                     _TRISCbits	set	135
   787  009E                     _ADRESL	set	158
   788  009F                     _ADCON1bits	set	159
   789  0098                     _TXSTAbits	set	152
   790  0099                     _SPBRG	set	153
   791  0098                     _TXSTA	set	152
   792                           
   793                           	psect	cinit
   794  000F                     start_initialization:	
   795                           ; #config settings
   796                           
   797  000F                     __initialization:
   798                           
   799                           ; Clear objects allocated to BANK0
   800  000F  1283               	bcf	3,5	;RP0=0, select bank0
   801  0010  1303               	bcf	3,6	;RP1=0, select bank0
   802  0011  01C6               	clrf	__pbssBANK0& (0+127)
   803  0012  01C7               	clrf	(__pbssBANK0+1)& (0+127)
   804  0013  01C8               	clrf	(__pbssBANK0+2)& (0+127)
   805  0014  01C9               	clrf	(__pbssBANK0+3)& (0+127)
   806                           
   807                           ; Clear objects allocated to BANK2
   808  0015  1283               	bcf	3,5	;RP0=0, select bank2
   809  0016  1703               	bsf	3,6	;RP1=1, select bank2
   810  0017  01DE               	clrf	__pbssBANK2& (0+127)
   811  0018  01DF               	clrf	(__pbssBANK2+1)& (0+127)
   812  0019  01E0               	clrf	(__pbssBANK2+2)& (0+127)
   813  001A  01E1               	clrf	(__pbssBANK2+3)& (0+127)
   814  001B  01E2               	clrf	(__pbssBANK2+4)& (0+127)
   815  001C  01E3               	clrf	(__pbssBANK2+5)& (0+127)
   816  001D                     end_of_initialization:	
   817                           ;End of C runtime variable initialization code
   818                           
   819  001D                     __end_of__initialization:
   820  001D  0183               	clrf	3
   821  001E  120A  118A  2821   	ljmp	_main	;jump to C main() function
   822                           
   823                           	psect	bssBANK0
   824  0046                     __pbssBANK0:
   825  0046                     _alarm:
   826  0046                     	ds	2
   827  0048                     _standby:
   828  0048                     	ds	2
   829                           
   830                           	psect	bssBANK2
   831  015E                     __pbssBANK2:
   832  015E                     _count:
   833  015E                     	ds	2
   834  0160                     _timer:
   835  0160                     	ds	2
   836  0162                     _standbyINT:
   837  0162                     	ds	2
   838                           
   839                           	psect	cstackBANK3
   840  0190                     __pcstackBANK3:
   841  0190                     sendParameters_message@c:
   842                           
   843                           ; 90 bytes @ 0x0
   844  0190                     	ds	90
   845  01EA                     sendParameters_message@i:
   846                           
   847                           ; 2 bytes @ 0x5A
   848  01EA                     	ds	2
   849                           
   850                           	psect	cstackBANK2
   851  0110                     __pcstackBANK2:
   852  0110                     main@buffer:
   853                           
   854                           ; 70 bytes @ 0x0
   855  0110                     	ds	70
   856  0156                     main@i:
   857                           
   858                           ; 2 bytes @ 0x46
   859  0156                     	ds	2
   860  0158                     main@value:
   861                           
   862                           ; 4 bytes @ 0x48
   863  0158                     	ds	4
   864  015C                     main@command:
   865                           
   866                           ; 2 bytes @ 0x4C
   867  015C                     	ds	2
   868                           
   869                           	psect	cstackBANK1
   870  00A0                     __pcstackBANK1:
   871  00A0                     sendInfo@c:
   872  00A0                     printACK@frase:	
   873                           ; 60 bytes @ 0x0
   874                           
   875  00A0                     sendMessage@c:	
   876                           ; 65 bytes @ 0x0
   877                           
   878                           
   879                           ; 70 bytes @ 0x0
   880  00A0                     	ds	60
   881  00DC                     sendInfo@info:
   882                           
   883                           ; 1 bytes @ 0x3C
   884  00DC                     	ds	1
   885  00DD                     sendInfo@i:
   886                           
   887                           ; 2 bytes @ 0x3D
   888  00DD                     	ds	4
   889  00E1                     printACK@i:
   890                           
   891                           ; 2 bytes @ 0x41
   892  00E1                     	ds	5
   893  00E6                     sendMessage@i:
   894                           
   895                           ; 2 bytes @ 0x46
   896  00E6                     	ds	2
   897                           
   898                           	psect	cstackCOMMON
   899  0070                     __pcstackCOMMON:
   900  0070                     ?_setADC:
   901  0070                     ?_setADCRes:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0070                     ?_sendUART:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0070                     ?_receiveUART:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0070                     ?_sendInfo:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  0070                     ?_standby_toggle:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  0070                     ?_setupTimer:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0070                     ?_interruptServiceRoutine:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0070                     ??_interruptServiceRoutine:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0070                     ?_checkLeds:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0070                     ?_main:	
   929                           ; 1 bytes @ 0x0
   930                           
   931                           
   932                           ; 2 bytes @ 0x0
   933  0070                     	ds	2
   934  0072                     ?_delay:
   935  0072                     ??_setADC:	
   936                           ; 1 bytes @ 0x2
   937                           
   938  0072                     ??_setADCRes:	
   939                           ; 1 bytes @ 0x2
   940                           
   941  0072                     ??_sendUART:	
   942                           ; 1 bytes @ 0x2
   943                           
   944  0072                     ??_receiveUART:	
   945                           ; 1 bytes @ 0x2
   946                           
   947  0072                     ??_standby_toggle:	
   948                           ; 1 bytes @ 0x2
   949                           
   950  0072                     ?_turnRes:	
   951                           ; 1 bytes @ 0x2
   952                           
   953  0072                     ??_setupTimer:	
   954                           ; 1 bytes @ 0x2
   955                           
   956  0072                     ?_convertADC_0:	
   957                           ; 1 bytes @ 0x2
   958                           
   959  0072                     ?_convertADC_1:	
   960                           ; 2 bytes @ 0x2
   961                           
   962  0072                     ?_convertADC_heat:	
   963                           ; 2 bytes @ 0x2
   964                           
   965  0072                     ?_isResOn:	
   966                           ; 2 bytes @ 0x2
   967                           
   968  0072                     ?___wmul:	
   969                           ; 2 bytes @ 0x2
   970                           
   971  0072                     ?___lwdiv:	
   972                           ; 2 bytes @ 0x2
   973                           
   974  0072                     sendUART@data:	
   975                           ; 2 bytes @ 0x2
   976                           
   977  0072                     turnRes@s:	
   978                           ; 1 bytes @ 0x2
   979                           
   980  0072                     ___wmul@multiplier:	
   981                           ; 2 bytes @ 0x2
   982                           
   983  0072                     ___lwdiv@divisor:	
   984                           ; 2 bytes @ 0x2
   985                           
   986  0072                     delay@n:	
   987                           ; 2 bytes @ 0x2
   988                           
   989                           
   990                           ; 4 bytes @ 0x2
   991  0072                     	ds	1
   992  0073                     receiveUART@c:
   993                           
   994                           ; 1 bytes @ 0x3
   995  0073                     	ds	1
   996  0074                     ??_convertADC_0:
   997  0074                     ??_convertADC_1:	
   998                           ; 1 bytes @ 0x4
   999                           
  1000  0074                     ??_convertADC_heat:	
  1001                           ; 1 bytes @ 0x4
  1002                           
  1003  0074                     ??_turnRes:	
  1004                           ; 1 bytes @ 0x4
  1005                           
  1006  0074                     ??_isResOn:	
  1007                           ; 1 bytes @ 0x4
  1008                           
  1009  0074                     ?_abs:	
  1010                           ; 1 bytes @ 0x4
  1011                           
  1012  0074                     ?_heatAlarm:	
  1013                           ; 2 bytes @ 0x4
  1014                           
  1015  0074                     heatAlarm@max_temp:	
  1016                           ; 2 bytes @ 0x4
  1017                           
  1018  0074                     ___wmul@multiplicand:	
  1019                           ; 2 bytes @ 0x4
  1020                           
  1021  0074                     ___lwdiv@dividend:	
  1022                           ; 2 bytes @ 0x4
  1023                           
  1024  0074                     abs@a:	
  1025                           ; 2 bytes @ 0x4
  1026                           
  1027                           
  1028                           ; 2 bytes @ 0x4
  1029  0074                     	ds	2
  1030  0076                     ??_abs:
  1031  0076                     ??_delay:	
  1032                           ; 1 bytes @ 0x6
  1033                           
  1034  0076                     ??_heatAlarm:	
  1035                           ; 1 bytes @ 0x6
  1036                           
  1037  0076                     ??___wmul:	
  1038                           ; 1 bytes @ 0x6
  1039                           
  1040  0076                     ??___lwdiv:	
  1041                           ; 1 bytes @ 0x6
  1042                           
  1043  0076                     ___wmul@product:	
  1044                           ; 1 bytes @ 0x6
  1045                           
  1046                           
  1047                           ; 2 bytes @ 0x6
  1048  0076                     	ds	1
  1049  0077                     ___lwdiv@quotient:
  1050                           
  1051                           ; 2 bytes @ 0x7
  1052  0077                     	ds	2
  1053  0079                     ___lwdiv@counter:
  1054                           
  1055                           ; 1 bytes @ 0x9
  1056  0079                     	ds	1
  1057  007A                     ??___lwmod:
  1058  007A                     delay@i:	
  1059                           ; 1 bytes @ 0xA
  1060                           
  1061                           
  1062                           ; 2 bytes @ 0xA
  1063  007A                     	ds	1
  1064  007B                     ___lwmod@counter:
  1065                           
  1066                           ; 1 bytes @ 0xB
  1067  007B                     	ds	1
  1068  007C                     ??_sendMessage:
  1069  007C                     ??_sendParameters_message:	
  1070                           ; 1 bytes @ 0xC
  1071                           
  1072  007C                     ??_printACK:	
  1073                           ; 1 bytes @ 0xC
  1074                           
  1075                           
  1076                           	psect	cstackBANK0
  1077  0020                     __pcstackBANK0:	
  1078                           ; 1 bytes @ 0xC
  1079                           
  1080  0020                     ?___lwmod:
  1081  0020                     ___lwmod@divisor:	
  1082                           ; 2 bytes @ 0x0
  1083                           
  1084                           
  1085                           ; 2 bytes @ 0x0
  1086  0020                     	ds	2
  1087  0022                     ___lwmod@dividend:
  1088                           
  1089                           ; 2 bytes @ 0x2
  1090  0022                     	ds	2
  1091  0024                     ?_sprintf:
  1092  0024                     sprintf@sp:	
  1093                           ; 2 bytes @ 0x4
  1094                           
  1095                           
  1096                           ; 2 bytes @ 0x4
  1097  0024                     	ds	2
  1098  0026                     sprintf@f:
  1099                           
  1100                           ; 2 bytes @ 0x6
  1101  0026                     	ds	6
  1102  002C                     ??_sprintf:
  1103                           
  1104                           ; 1 bytes @ 0xC
  1105  002C                     	ds	4
  1106  0030                     sprintf@flag:
  1107                           
  1108                           ; 1 bytes @ 0x10
  1109  0030                     	ds	1
  1110  0031                     sprintf@prec:
  1111                           
  1112                           ; 1 bytes @ 0x11
  1113  0031                     	ds	1
  1114  0032                     sprintf@ap:
  1115                           
  1116                           ; 1 bytes @ 0x12
  1117  0032                     	ds	1
  1118  0033                     sprintf@val:
  1119                           
  1120                           ; 2 bytes @ 0x13
  1121  0033                     	ds	2
  1122  0035                     sprintf@c:
  1123                           
  1124                           ; 1 bytes @ 0x15
  1125  0035                     	ds	1
  1126  0036                     ?_sendMessage:
  1127  0036                     ?_sendParameters_message:	
  1128                           ; 1 bytes @ 0x16
  1129                           
  1130  0036                     ??_sendInfo:	
  1131                           ; 1 bytes @ 0x16
  1132                           
  1133  0036                     ?_printACK:	
  1134                           ; 1 bytes @ 0x16
  1135                           
  1136  0036                     sendMessage@ldr1:	
  1137                           ; 1 bytes @ 0x16
  1138                           
  1139  0036                     sendParameters_message@low_light:	
  1140                           ; 2 bytes @ 0x16
  1141                           
  1142  0036                     printACK@value:	
  1143                           ; 2 bytes @ 0x16
  1144                           
  1145                           
  1146                           ; 2 bytes @ 0x16
  1147  0036                     	ds	2
  1148  0038                     ??_checkLeds:
  1149  0038                     sendMessage@ldr2:	
  1150                           ; 1 bytes @ 0x18
  1151                           
  1152  0038                     sendParameters_message@lux_cfg:	
  1153                           ; 2 bytes @ 0x18
  1154                           
  1155                           
  1156                           ; 2 bytes @ 0x18
  1157  0038                     	ds	3
  1158  003B                     checkLeds@lux_value:
  1159                           
  1160                           ; 2 bytes @ 0x1B
  1161  003B                     	ds	2
  1162  003D                     ??_main:
  1163                           
  1164                           ; 1 bytes @ 0x1D
  1165  003D                     	ds	2
  1166                           
  1167                           	psect	maintext
  1168  0021                     __pmaintext:	
  1169 ;;
  1170 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1171 ;;
  1172 ;; *************** function _main *****************
  1173 ;; Defined at:
  1174 ;;		line 432 in file "../../Lab2/AQC1.X/main.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  buffer         70    0[BANK2 ] unsigned char [70]
  1179 ;;  value           4   72[BANK2 ] unsigned int [2]
  1180 ;;  command         2   76[BANK2 ] int 
  1181 ;;  i               2   70[BANK2 ] int 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  2  217[None  ] int 
  1184 ;; Registers used:
  1185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : B00/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1191 ;;      Params:         0       0       0       0       0
  1192 ;;      Locals:         0       0       0       0      78
  1193 ;;      Temps:          0       2       0       0       0
  1194 ;;      Totals:         0       2       0       0      78
  1195 ;;Total ram usage:       80 bytes
  1196 ;; Hardware stack levels required when called: 5
  1197 ;; This function calls:
  1198 ;;		___wmul
  1199 ;;		_checkLeds
  1200 ;;		_convertADC_0
  1201 ;;		_convertADC_1
  1202 ;;		_delay
  1203 ;;		_isResOn
  1204 ;;		_printACK
  1205 ;;		_receiveUART
  1206 ;;		_sendInfo
  1207 ;;		_sendMessage
  1208 ;;		_sendParameters_message
  1209 ;;		_setADC
  1210 ;;		_setupTimer
  1211 ;;		_standby_toggle
  1212 ;;		_turnRes
  1213 ;; This function is called by:
  1214 ;;		Startup code after reset
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           
  1219                           ;psect for function _main
  1220  0021                     _main:
  1221  0021                     l1957:	
  1222                           ;incstack = 0
  1223                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1224                           
  1225                           
  1226                           ;../../Lab2/AQC1.X/main.c: 434:  count = 0;
  1227  0021  1283               	bcf	3,5	;RP0=0, select bank2
  1228  0022  1703               	bsf	3,6	;RP1=1, select bank2
  1229  0023  01DE               	clrf	_count^(0+256)
  1230  0024  01DF               	clrf	(_count+1)^(0+256)
  1231                           
  1232                           ;../../Lab2/AQC1.X/main.c: 435:     timer=0;
  1233  0025  01E0               	clrf	_timer^(0+256)
  1234  0026  01E1               	clrf	(_timer+1)^(0+256)
  1235                           
  1236                           ;../../Lab2/AQC1.X/main.c: 436:     alarm=0;
  1237  0027  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0028  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0029  01C6               	clrf	_alarm
  1240  002A  01C7               	clrf	_alarm+1
  1241                           
  1242                           ;../../Lab2/AQC1.X/main.c: 437:     standby = 0;
  1243  002B  01C8               	clrf	_standby
  1244  002C  01C9               	clrf	_standby+1
  1245                           
  1246                           ;../../Lab2/AQC1.X/main.c: 438:     standbyINT = 0;
  1247  002D  1283               	bcf	3,5	;RP0=0, select bank2
  1248  002E  1703               	bsf	3,6	;RP1=1, select bank2
  1249  002F  01E2               	clrf	_standbyINT^(0+256)
  1250  0030  01E3               	clrf	(_standbyINT+1)^(0+256)
  1251  0031                     l1959:
  1252                           
  1253                           ;../../Lab2/AQC1.X/main.c: 439:     monitoring = 1;
  1254  0031  3001               	movlw	1
  1255  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1256  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1257  0034  00C3               	movwf	_monitoring
  1258  0035  3000               	movlw	0
  1259  0036  00C4               	movwf	_monitoring+1
  1260  0037                     l1961:
  1261                           
  1262                           ;../../Lab2/AQC1.X/main.c: 440:     motion = 'P';
  1263  0037  3050               	movlw	80
  1264  0038  00BD               	movwf	??_main
  1265  0039  083D               	movf	??_main,w
  1266  003A  00C5               	movwf	_motion
  1267  003B                     l1963:
  1268                           
  1269                           ;../../Lab2/AQC1.X/main.c: 441:     lux_value_cfg = 100;
  1270  003B  3064               	movlw	100
  1271  003C  00C1               	movwf	_lux_value_cfg
  1272  003D  3000               	movlw	0
  1273  003E  00C2               	movwf	_lux_value_cfg+1
  1274  003F                     l1965:
  1275                           
  1276                           ;../../Lab2/AQC1.X/main.c: 442:     low_light_value = 100;
  1277  003F  3064               	movlw	100
  1278  0040  00BF               	movwf	_low_light_value
  1279  0041  3000               	movlw	0
  1280  0042  00C0               	movwf	_low_light_value+1
  1281                           
  1282                           ;../../Lab2/AQC1.X/main.c: 444:     RCSTA = 0;
  1283  0043  0198               	clrf	24	;volatile
  1284                           
  1285                           ;../../Lab2/AQC1.X/main.c: 445:     TXSTA = 0;
  1286  0044  1683               	bsf	3,5	;RP0=1, select bank1
  1287  0045  1303               	bcf	3,6	;RP1=0, select bank1
  1288  0046  0198               	clrf	24	;volatile
  1289  0047                     l1967:
  1290                           
  1291                           ;../../Lab2/AQC1.X/main.c: 446:     TXSTAbits.BRGH = 1;
  1292  0047  1518               	bsf	24,2	;volatile
  1293  0048                     l1969:
  1294                           
  1295                           ;../../Lab2/AQC1.X/main.c: 447:     SPBRG = 25;
  1296  0048  3019               	movlw	25
  1297  0049  0099               	movwf	25	;volatile
  1298  004A                     l1971:
  1299                           
  1300                           ;../../Lab2/AQC1.X/main.c: 448:     TXSTAbits.TXEN = 1;
  1301  004A  1698               	bsf	24,5	;volatile
  1302  004B                     l1973:
  1303                           
  1304                           ;../../Lab2/AQC1.X/main.c: 449:     RCSTAbits.CREN = 1;
  1305  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1306  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1307  004D  1618               	bsf	24,4	;volatile
  1308  004E                     l1975:
  1309                           
  1310                           ;../../Lab2/AQC1.X/main.c: 450:     RCSTAbits.SPEN = 1;
  1311  004E  1798               	bsf	24,7	;volatile
  1312  004F                     l1977:
  1313                           
  1314                           ;../../Lab2/AQC1.X/main.c: 452:     INTCONbits.GIE = 1;
  1315  004F  178B               	bsf	11,7	;volatile
  1316  0050                     l1979:
  1317                           
  1318                           ;../../Lab2/AQC1.X/main.c: 453:     INTCONbits.TMR0IE = 1;
  1319  0050  168B               	bsf	11,5	;volatile
  1320  0051                     l1981:
  1321                           
  1322                           ;../../Lab2/AQC1.X/main.c: 454:     INTCONbits.INTE = 1;
  1323  0051  160B               	bsf	11,4	;volatile
  1324  0052                     l1983:
  1325                           
  1326                           ;../../Lab2/AQC1.X/main.c: 455:     OPTION_REGbits.INTEDG = 1;
  1327  0052  1683               	bsf	3,5	;RP0=1, select bank1
  1328  0053  1303               	bcf	3,6	;RP1=0, select bank1
  1329  0054  1701               	bsf	1,6	;volatile
  1330  0055                     l1985:
  1331                           
  1332                           ;../../Lab2/AQC1.X/main.c: 460:     setADC();
  1333  0055  120A  158A  24BE  120A  118A  	fcall	_setADC
  1334  005A                     l1987:
  1335                           
  1336                           ;../../Lab2/AQC1.X/main.c: 461:     setupTimer();
  1337  005A  120A  118A  23F7  120A  118A  	fcall	_setupTimer
  1338  005F                     l1989:
  1339                           
  1340                           ;../../Lab2/AQC1.X/main.c: 464:     TRISB = 0b00111001;
  1341  005F  3039               	movlw	57
  1342  0060  1683               	bsf	3,5	;RP0=1, select bank1
  1343  0061  1303               	bcf	3,6	;RP1=0, select bank1
  1344  0062  0086               	movwf	6	;volatile
  1345  0063                     l1991:
  1346                           
  1347                           ;../../Lab2/AQC1.X/main.c: 465:     TRISAbits.TRISA5 = 1;
  1348  0063  1685               	bsf	5,5	;volatile
  1349  0064                     l1993:
  1350  0064                     l1995:
  1351  0064                     l1997:
  1352                           
  1353                           ;../../Lab2/AQC1.X/main.c: 471:     unsigned int value[2] ;;../../Lab2/AQC1.X/main.c: 47
      +                          2:     turnRes(0);
  1354  0064  3000               	movlw	0
  1355  0065  00F2               	movwf	turnRes@s
  1356  0066  00F3               	movwf	turnRes@s+1
  1357  0067  120A  118A  23E6  120A  118A  	fcall	_turnRes
  1358  006C                     l1999:
  1359                           
  1360                           ;../../Lab2/AQC1.X/main.c: 474:         if(PIR1bits.RCIF){
  1361  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1362  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1363  006E  1E8C               	btfss	12,5	;volatile
  1364  006F  2871               	goto	u1641
  1365  0070  2872               	goto	u1640
  1366  0071                     u1641:
  1367  0071  2A99               	goto	l2077
  1368  0072                     u1640:
  1369  0072                     l2001:
  1370                           
  1371                           ;../../Lab2/AQC1.X/main.c: 475:             i = -1;
  1372  0072  30FF               	movlw	255
  1373  0073  1283               	bcf	3,5	;RP0=0, select bank2
  1374  0074  1703               	bsf	3,6	;RP1=1, select bank2
  1375  0075  00D6               	movwf	main@i^(0+256)
  1376  0076  30FF               	movlw	255
  1377  0077  00D7               	movwf	(main@i^(0+256)+1)
  1378  0078                     l220:	
  1379                           ;../../Lab2/AQC1.X/main.c: 476:             do{
  1380                           
  1381                           
  1382                           ;../../Lab2/AQC1.X/main.c: 478:                 i++;
  1383  0078  3001               	movlw	1
  1384  0079  1283               	bcf	3,5	;RP0=0, select bank2
  1385  007A  1703               	bsf	3,6	;RP1=1, select bank2
  1386  007B  07D6               	addwf	main@i^(0+256),f
  1387  007C  1803               	skipnc
  1388  007D  0AD7               	incf	(main@i+1)^(0+256),f
  1389  007E  3000               	movlw	0
  1390  007F  07D7               	addwf	(main@i+1)^(0+256),f
  1391  0080                     l2003:
  1392                           
  1393                           ;../../Lab2/AQC1.X/main.c: 479:                 buffer[i] = receiveUART();
  1394  0080  120A  158A  24B2  120A  118A  	fcall	_receiveUART
  1395  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1396  0086  1303               	bcf	3,6	;RP1=0, select bank0
  1397  0087  00BD               	movwf	??_main
  1398  0088  1283               	bcf	3,5	;RP0=0, select bank2
  1399  0089  1703               	bsf	3,6	;RP1=1, select bank2
  1400  008A  0856               	movf	main@i^(0+256),w
  1401  008B  3E10               	addlw	(low (main@buffer| (0+256)))& (0+255)
  1402  008C  0084               	movwf	4
  1403  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1404  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1405  008F  083D               	movf	??_main,w
  1406  0090  1783               	bsf	3,7	;select IRP bank2
  1407  0091  0080               	movwf	0
  1408  0092                     l2005:
  1409                           
  1410                           ;../../Lab2/AQC1.X/main.c: 480:                 delay(5);
  1411  0092  3000               	movlw	0
  1412  0093  00F5               	movwf	delay@n+3
  1413  0094  3000               	movlw	0
  1414  0095  00F4               	movwf	delay@n+2
  1415  0096  3000               	movlw	0
  1416  0097  00F3               	movwf	delay@n+1
  1417  0098  3005               	movlw	5
  1418  0099  00F2               	movwf	delay@n
  1419  009A  120A  158A  2579  120A  118A  	fcall	_delay
  1420  009F                     l2007:
  1421                           
  1422                           ;../../Lab2/AQC1.X/main.c: 481:             }while(buffer[i] != '\n' && i<= 68 );
  1423  009F  1283               	bcf	3,5	;RP0=0, select bank2
  1424  00A0  1703               	bsf	3,6	;RP1=1, select bank2
  1425  00A1  0856               	movf	main@i^(0+256),w
  1426  00A2  3E10               	addlw	(low (main@buffer| (0+256)))& (0+255)
  1427  00A3  0084               	movwf	4
  1428  00A4  300A               	movlw	10
  1429  00A5  1783               	bsf	3,7	;select IRP bank2
  1430  00A6  0600               	xorwf	0,w
  1431  00A7  1903               	btfsc	3,2
  1432  00A8  28AA               	goto	u1651
  1433  00A9  28AB               	goto	u1650
  1434  00AA                     u1651:
  1435  00AA  28B8               	goto	l2011
  1436  00AB                     u1650:
  1437  00AB                     l2009:
  1438  00AB  0857               	movf	(main@i+1)^(0+256),w
  1439  00AC  3A80               	xorlw	128
  1440  00AD  00FF               	movwf	btemp+1
  1441  00AE  3080               	movlw	128
  1442  00AF  027F               	subwf	btemp+1,w
  1443  00B0  1D03               	skipz
  1444  00B1  28B4               	goto	u1665
  1445  00B2  3045               	movlw	69
  1446  00B3  0256               	subwf	main@i^(0+256),w
  1447  00B4                     u1665:
  1448  00B4  1C03               	skipc
  1449  00B5  28B7               	goto	u1661
  1450  00B6  28B8               	goto	u1660
  1451  00B7                     u1661:
  1452  00B7  2878               	goto	l220
  1453  00B8                     u1660:
  1454  00B8                     l2011:
  1455                           
  1456                           ;../../Lab2/AQC1.X/main.c: 482:             buffer[++i] = '\0';
  1457  00B8  3001               	movlw	1
  1458  00B9  1283               	bcf	3,5	;RP0=0, select bank2
  1459  00BA  1703               	bsf	3,6	;RP1=1, select bank2
  1460  00BB  07D6               	addwf	main@i^(0+256),f
  1461  00BC  1803               	skipnc
  1462  00BD  0AD7               	incf	(main@i+1)^(0+256),f
  1463  00BE  3000               	movlw	0
  1464  00BF  07D7               	addwf	(main@i+1)^(0+256),f
  1465  00C0  0856               	movf	main@i^(0+256),w
  1466  00C1  3E10               	addlw	(low (main@buffer| (0+256)))& (0+255)
  1467  00C2  0084               	movwf	4
  1468  00C3  1783               	bsf	3,7	;select IRP bank2
  1469  00C4  0180               	clrf	0
  1470  00C5                     l2013:
  1471                           
  1472                           ;../../Lab2/AQC1.X/main.c: 483:             delay(10);
  1473  00C5  3000               	movlw	0
  1474  00C6  00F5               	movwf	delay@n+3
  1475  00C7  3000               	movlw	0
  1476  00C8  00F4               	movwf	delay@n+2
  1477  00C9  3000               	movlw	0
  1478  00CA  00F3               	movwf	delay@n+1
  1479  00CB  300A               	movlw	10
  1480  00CC  00F2               	movwf	delay@n
  1481  00CD  120A  158A  2579  120A  118A  	fcall	_delay
  1482  00D2                     l2015:
  1483                           
  1484                           ;../../Lab2/AQC1.X/main.c: 492:             command = buffer[12];
  1485  00D2  1283               	bcf	3,5	;RP0=0, select bank2
  1486  00D3  1703               	bsf	3,6	;RP1=1, select bank2
  1487  00D4  081C               	movf	(main@buffer^(0+256)+12),w
  1488  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1489  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1490  00D7  00BD               	movwf	??_main
  1491  00D8  01BE               	clrf	??_main+1
  1492  00D9  083D               	movf	??_main,w
  1493  00DA  1283               	bcf	3,5	;RP0=0, select bank2
  1494  00DB  1703               	bsf	3,6	;RP1=1, select bank2
  1495  00DC  00DC               	movwf	main@command^(0+256)
  1496  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1497  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1498  00DF  083E               	movf	??_main+1,w
  1499  00E0  1283               	bcf	3,5	;RP0=0, select bank2
  1500  00E1  1703               	bsf	3,6	;RP1=1, select bank2
  1501  00E2  00DD               	movwf	(main@command+1)^(0+256)
  1502  00E3                     l2017:
  1503                           
  1504                           ;../../Lab2/AQC1.X/main.c: 495:             value[0] = buffer[20];
  1505  00E3  0824               	movf	(main@buffer^(0+256)+20),w
  1506  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1507  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1508  00E6  00BD               	movwf	??_main
  1509  00E7  01BE               	clrf	??_main+1
  1510  00E8  083D               	movf	??_main,w
  1511  00E9  1283               	bcf	3,5	;RP0=0, select bank2
  1512  00EA  1703               	bsf	3,6	;RP1=1, select bank2
  1513  00EB  00D8               	movwf	main@value^(0+256)
  1514  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1515  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1516  00EE  083E               	movf	??_main+1,w
  1517  00EF  1283               	bcf	3,5	;RP0=0, select bank2
  1518  00F0  1703               	bsf	3,6	;RP1=1, select bank2
  1519  00F1  00D9               	movwf	(main@value+1)^(0+256)
  1520  00F2                     l2019:
  1521                           
  1522                           ;../../Lab2/AQC1.X/main.c: 496:             value[1] = buffer[21];
  1523  00F2  0825               	movf	(main@buffer^(0+256)+21),w
  1524  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1525  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1526  00F5  00BD               	movwf	??_main
  1527  00F6  01BE               	clrf	??_main+1
  1528  00F7  083D               	movf	??_main,w
  1529  00F8  1283               	bcf	3,5	;RP0=0, select bank2
  1530  00F9  1703               	bsf	3,6	;RP1=1, select bank2
  1531  00FA  00DA               	movwf	(main@value^(0+256)+2)
  1532  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1533  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1534  00FD  083E               	movf	??_main+1,w
  1535  00FE  1283               	bcf	3,5	;RP0=0, select bank2
  1536  00FF  1703               	bsf	3,6	;RP1=1, select bank2
  1537  0100  00DB               	movwf	((main@value+1)^(0+256)+2)
  1538                           
  1539                           ;../../Lab2/AQC1.X/main.c: 499:             switch (command){
  1540  0101  2A6B               	goto	l2073
  1541  0102                     l2021:
  1542  0102  085D               	movf	(main@command+1)^(0+256),w
  1543  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1544  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0105  00B7               	movwf	printACK@value+1
  1546  0106  1283               	bcf	3,5	;RP0=0, select bank2
  1547  0107  1703               	bsf	3,6	;RP1=1, select bank2
  1548  0108  085C               	movf	main@command^(0+256),w
  1549  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1550  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1551  010B  00B6               	movwf	printACK@value
  1552  010C  120A  158A  25A4  120A  118A  	fcall	_printACK
  1553  0111  120A  158A  2507  120A  118A  	fcall	_convertADC_0
  1554  0116  0873               	movf	?_convertADC_0+1,w
  1555  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1556  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1557  0119  00B7               	movwf	sendMessage@ldr1+1
  1558  011A  0872               	movf	?_convertADC_0,w
  1559  011B  00B6               	movwf	sendMessage@ldr1
  1560  011C  120A  158A  2518  120A  118A  	fcall	_convertADC_1
  1561  0121  0873               	movf	?_convertADC_1+1,w
  1562  0122  1283               	bcf	3,5	;RP0=0, select bank0
  1563  0123  1303               	bcf	3,6	;RP1=0, select bank0
  1564  0124  00B9               	movwf	sendMessage@ldr2+1
  1565  0125  0872               	movf	?_convertADC_1,w
  1566  0126  00B8               	movwf	sendMessage@ldr2
  1567  0127  120A  158A  2659  120A  118A  	fcall	_sendMessage
  1568  012C  2A8A               	goto	l226
  1569  012D                     l2023:
  1570  012D  085D               	movf	(main@command+1)^(0+256),w
  1571  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1572  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1573  0130  00B7               	movwf	printACK@value+1
  1574  0131  1283               	bcf	3,5	;RP0=0, select bank2
  1575  0132  1703               	bsf	3,6	;RP1=1, select bank2
  1576  0133  085C               	movf	main@command^(0+256),w
  1577  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0136  00B6               	movwf	printACK@value
  1580  0137  120A  158A  25A4  120A  118A  	fcall	_printACK
  1581  013C                     l2025:
  1582  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1583  013D  1303               	bcf	3,6	;RP1=0, select bank0
  1584  013E  01C3               	clrf	_monitoring
  1585  013F  01C4               	clrf	_monitoring+1
  1586  0140  2A8A               	goto	l226
  1587  0141                     l2027:
  1588  0141  085D               	movf	(main@command+1)^(0+256),w
  1589  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1590  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1591  0144  00B7               	movwf	printACK@value+1
  1592  0145  1283               	bcf	3,5	;RP0=0, select bank2
  1593  0146  1703               	bsf	3,6	;RP1=1, select bank2
  1594  0147  085C               	movf	main@command^(0+256),w
  1595  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1597  014A  00B6               	movwf	printACK@value
  1598  014B  120A  158A  25A4  120A  118A  	fcall	_printACK
  1599  0150                     l2029:
  1600  0150  3001               	movlw	1
  1601  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1602  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1603  0153  00C3               	movwf	_monitoring
  1604  0154  3000               	movlw	0
  1605  0155  00C4               	movwf	_monitoring+1
  1606  0156  2A8A               	goto	l226
  1607  0157                     l2031:
  1608  0157  085D               	movf	(main@command+1)^(0+256),w
  1609  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1610  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1611  015A  00B7               	movwf	printACK@value+1
  1612  015B  1283               	bcf	3,5	;RP0=0, select bank2
  1613  015C  1703               	bsf	3,6	;RP1=1, select bank2
  1614  015D  085C               	movf	main@command^(0+256),w
  1615  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1616  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1617  0160  00B6               	movwf	printACK@value
  1618  0161  120A  158A  25A4  120A  118A  	fcall	_printACK
  1619  0166                     l2033:
  1620  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1621  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1622  0168  01C8               	clrf	_standby
  1623  0169  01C9               	clrf	_standby+1
  1624  016A  2A8A               	goto	l226
  1625  016B                     l2035:
  1626  016B  085D               	movf	(main@command+1)^(0+256),w
  1627  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1628  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1629  016E  00B7               	movwf	printACK@value+1
  1630  016F  1283               	bcf	3,5	;RP0=0, select bank2
  1631  0170  1703               	bsf	3,6	;RP1=1, select bank2
  1632  0171  085C               	movf	main@command^(0+256),w
  1633  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1634  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1635  0174  00B6               	movwf	printACK@value
  1636  0175  120A  158A  25A4  120A  118A  	fcall	_printACK
  1637  017A                     l2037:
  1638  017A  3001               	movlw	1
  1639  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1640  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1641  017D  00C8               	movwf	_standby
  1642  017E  3000               	movlw	0
  1643  017F  00C9               	movwf	_standby+1
  1644  0180  2A8A               	goto	l226
  1645  0181                     l2039:
  1646                           
  1647                           ;../../Lab2/AQC1.X/main.c: 507:                             printACK(command); if((value
      +                          [0] <'0' || value[0] > '9') || (value[1] < '0' || value[1] > '9') ){
  1648  0181  085D               	movf	(main@command+1)^(0+256),w
  1649  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1650  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1651  0184  00B7               	movwf	printACK@value+1
  1652  0185  1283               	bcf	3,5	;RP0=0, select bank2
  1653  0186  1703               	bsf	3,6	;RP1=1, select bank2
  1654  0187  085C               	movf	main@command^(0+256),w
  1655  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1656  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1657  018A  00B6               	movwf	printACK@value
  1658  018B  120A  158A  25A4  120A  118A  	fcall	_printACK
  1659  0190                     l2041:
  1660  0190  3000               	movlw	0
  1661  0191  1283               	bcf	3,5	;RP0=0, select bank2
  1662  0192  1703               	bsf	3,6	;RP1=1, select bank2
  1663  0193  0259               	subwf	(main@value+1)^(0+256),w
  1664  0194  3030               	movlw	48
  1665  0195  1903               	skipnz
  1666  0196  0258               	subwf	main@value^(0+256),w
  1667  0197  1C03               	skipc
  1668  0198  299A               	goto	u1671
  1669  0199  299B               	goto	u1670
  1670  019A                     u1671:
  1671  019A  29B6               	goto	l2049
  1672  019B                     u1670:
  1673  019B                     l2043:
  1674  019B  3000               	movlw	0
  1675  019C  0259               	subwf	(main@value+1)^(0+256),w
  1676  019D  303A               	movlw	58
  1677  019E  1903               	skipnz
  1678  019F  0258               	subwf	main@value^(0+256),w
  1679  01A0  1803               	skipnc
  1680  01A1  29A3               	goto	u1681
  1681  01A2  29A4               	goto	u1680
  1682  01A3                     u1681:
  1683  01A3  29B6               	goto	l2049
  1684  01A4                     u1680:
  1685  01A4                     l2045:
  1686  01A4  3000               	movlw	0
  1687  01A5  025B               	subwf	((main@value+1)^(0+256)+2),w
  1688  01A6  3030               	movlw	48
  1689  01A7  1903               	skipnz
  1690  01A8  025A               	subwf	(main@value^(0+256)+2),w
  1691  01A9  1C03               	skipc
  1692  01AA  29AC               	goto	u1691
  1693  01AB  29AD               	goto	u1690
  1694  01AC                     u1691:
  1695  01AC  29B6               	goto	l2049
  1696  01AD                     u1690:
  1697  01AD                     l2047:
  1698  01AD  3000               	movlw	0
  1699  01AE  025B               	subwf	((main@value+1)^(0+256)+2),w
  1700  01AF  303A               	movlw	58
  1701  01B0  1903               	skipnz
  1702  01B1  025A               	subwf	(main@value^(0+256)+2),w
  1703  01B2  1C03               	skipc
  1704  01B3  29B5               	goto	u1701
  1705  01B4  29B6               	goto	u1700
  1706  01B5                     u1701:
  1707  01B5  29BD               	goto	l2051
  1708  01B6                     u1700:
  1709  01B6                     l2049:
  1710                           
  1711                           ;../../Lab2/AQC1.X/main.c: 508:                                                     send
      +                          Info('e');}
  1712  01B6  3065               	movlw	101
  1713  01B7  120A  118A  232D  120A  118A  	fcall	_sendInfo
  1714  01BC  2A8A               	goto	l226
  1715  01BD                     l2051:
  1716  01BD  0859               	movf	(main@value+1)^(0+256),w
  1717  01BE  00F3               	movwf	___wmul@multiplier+1
  1718  01BF  0858               	movf	main@value^(0+256),w
  1719  01C0  00F2               	movwf	___wmul@multiplier
  1720  01C1  300A               	movlw	10
  1721  01C2  00F4               	movwf	___wmul@multiplicand
  1722  01C3  3000               	movlw	0
  1723  01C4  00F5               	movwf	___wmul@multiplicand+1
  1724  01C5  120A  118A  27D7  120A  118A  	fcall	___wmul
  1725  01CA  1283               	bcf	3,5	;RP0=0, select bank2
  1726  01CB  1703               	bsf	3,6	;RP1=1, select bank2
  1727  01CC  085A               	movf	(main@value^(0+256)+2),w
  1728  01CD  0772               	addwf	?___wmul,w
  1729  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1730  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1731  01D0  00BD               	movwf	??_main
  1732  01D1  1283               	bcf	3,5	;RP0=0, select bank2
  1733  01D2  1703               	bsf	3,6	;RP1=1, select bank2
  1734  01D3  085B               	movf	((main@value+1)^(0+256)+2),w
  1735  01D4  1803               	skipnc
  1736  01D5  0A5B               	incf	((main@value+1)^(0+256)+2),w
  1737  01D6  0773               	addwf	?___wmul+1,w
  1738  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1739  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1740  01D9  00BE               	movwf	??_main+1
  1741  01DA  083D               	movf	??_main,w
  1742  01DB  3EF0               	addlw	240
  1743  01DC  00BF               	movwf	_low_light_value
  1744  01DD  083E               	movf	??_main+1,w
  1745  01DE  1803               	skipnc
  1746  01DF  3E01               	addlw	1
  1747  01E0  3EFD               	addlw	253
  1748  01E1  00C0               	movwf	_low_light_value+1
  1749  01E2  2A8A               	goto	l226
  1750  01E3                     l2053:
  1751                           
  1752                           ;../../Lab2/AQC1.X/main.c: 511:                             printACK(command); if((value
      +                          [0] <'0' || value[0] > '9') || (value[1] < '0' || value[1] > '9') ){
  1753  01E3  085D               	movf	(main@command+1)^(0+256),w
  1754  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1755  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1756  01E6  00B7               	movwf	printACK@value+1
  1757  01E7  1283               	bcf	3,5	;RP0=0, select bank2
  1758  01E8  1703               	bsf	3,6	;RP1=1, select bank2
  1759  01E9  085C               	movf	main@command^(0+256),w
  1760  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1761  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1762  01EC  00B6               	movwf	printACK@value
  1763  01ED  120A  158A  25A4  120A  118A  	fcall	_printACK
  1764  01F2                     l2055:
  1765  01F2  3000               	movlw	0
  1766  01F3  1283               	bcf	3,5	;RP0=0, select bank2
  1767  01F4  1703               	bsf	3,6	;RP1=1, select bank2
  1768  01F5  0259               	subwf	(main@value+1)^(0+256),w
  1769  01F6  3030               	movlw	48
  1770  01F7  1903               	skipnz
  1771  01F8  0258               	subwf	main@value^(0+256),w
  1772  01F9  1C03               	skipc
  1773  01FA  29FC               	goto	u1711
  1774  01FB  29FD               	goto	u1710
  1775  01FC                     u1711:
  1776  01FC  2A18               	goto	l2063
  1777  01FD                     u1710:
  1778  01FD                     l2057:
  1779  01FD  3000               	movlw	0
  1780  01FE  0259               	subwf	(main@value+1)^(0+256),w
  1781  01FF  303A               	movlw	58
  1782  0200  1903               	skipnz
  1783  0201  0258               	subwf	main@value^(0+256),w
  1784  0202  1803               	skipnc
  1785  0203  2A05               	goto	u1721
  1786  0204  2A06               	goto	u1720
  1787  0205                     u1721:
  1788  0205  2A18               	goto	l2063
  1789  0206                     u1720:
  1790  0206                     l2059:
  1791  0206  3000               	movlw	0
  1792  0207  025B               	subwf	((main@value+1)^(0+256)+2),w
  1793  0208  3030               	movlw	48
  1794  0209  1903               	skipnz
  1795  020A  025A               	subwf	(main@value^(0+256)+2),w
  1796  020B  1C03               	skipc
  1797  020C  2A0E               	goto	u1731
  1798  020D  2A0F               	goto	u1730
  1799  020E                     u1731:
  1800  020E  2A18               	goto	l2063
  1801  020F                     u1730:
  1802  020F                     l2061:
  1803  020F  3000               	movlw	0
  1804  0210  025B               	subwf	((main@value+1)^(0+256)+2),w
  1805  0211  303A               	movlw	58
  1806  0212  1903               	skipnz
  1807  0213  025A               	subwf	(main@value^(0+256)+2),w
  1808  0214  1C03               	skipc
  1809  0215  2A17               	goto	u1741
  1810  0216  2A18               	goto	u1740
  1811  0217                     u1741:
  1812  0217  2A1F               	goto	l2065
  1813  0218                     u1740:
  1814  0218                     l2063:
  1815                           
  1816                           ;../../Lab2/AQC1.X/main.c: 512:                                                     send
      +                          Info('e');}
  1817  0218  3065               	movlw	101
  1818  0219  120A  118A  232D  120A  118A  	fcall	_sendInfo
  1819  021E  2A8A               	goto	l226
  1820  021F                     l2065:
  1821  021F  0859               	movf	(main@value+1)^(0+256),w
  1822  0220  00F3               	movwf	___wmul@multiplier+1
  1823  0221  0858               	movf	main@value^(0+256),w
  1824  0222  00F2               	movwf	___wmul@multiplier
  1825  0223  300A               	movlw	10
  1826  0224  00F4               	movwf	___wmul@multiplicand
  1827  0225  3000               	movlw	0
  1828  0226  00F5               	movwf	___wmul@multiplicand+1
  1829  0227  120A  118A  27D7  120A  118A  	fcall	___wmul
  1830  022C  1283               	bcf	3,5	;RP0=0, select bank2
  1831  022D  1703               	bsf	3,6	;RP1=1, select bank2
  1832  022E  085A               	movf	(main@value^(0+256)+2),w
  1833  022F  0772               	addwf	?___wmul,w
  1834  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1835  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1836  0232  00BD               	movwf	??_main
  1837  0233  1283               	bcf	3,5	;RP0=0, select bank2
  1838  0234  1703               	bsf	3,6	;RP1=1, select bank2
  1839  0235  085B               	movf	((main@value+1)^(0+256)+2),w
  1840  0236  1803               	skipnc
  1841  0237  0A5B               	incf	((main@value+1)^(0+256)+2),w
  1842  0238  0773               	addwf	?___wmul+1,w
  1843  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1844  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1845  023B  00BE               	movwf	??_main+1
  1846  023C  083D               	movf	??_main,w
  1847  023D  3EF0               	addlw	240
  1848  023E  00C1               	movwf	_lux_value_cfg
  1849  023F  083E               	movf	??_main+1,w
  1850  0240  1803               	skipnc
  1851  0241  3E01               	addlw	1
  1852  0242  3EFD               	addlw	253
  1853  0243  00C2               	movwf	_lux_value_cfg+1
  1854  0244  2A8A               	goto	l226
  1855  0245                     l2067:
  1856  0245  085D               	movf	(main@command+1)^(0+256),w
  1857  0246  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0247  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0248  00B7               	movwf	printACK@value+1
  1860  0249  1283               	bcf	3,5	;RP0=0, select bank2
  1861  024A  1703               	bsf	3,6	;RP1=1, select bank2
  1862  024B  085C               	movf	main@command^(0+256),w
  1863  024C  1283               	bcf	3,5	;RP0=0, select bank0
  1864  024D  1303               	bcf	3,6	;RP1=0, select bank0
  1865  024E  00B6               	movwf	printACK@value
  1866  024F  120A  158A  25A4  120A  118A  	fcall	_printACK
  1867  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1868  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1869  0256  0840               	movf	_low_light_value+1,w
  1870  0257  00B7               	movwf	sendParameters_message@low_light+1
  1871  0258  083F               	movf	_low_light_value,w
  1872  0259  00B6               	movwf	sendParameters_message@low_light
  1873  025A  0842               	movf	_lux_value_cfg+1,w
  1874  025B  00B9               	movwf	sendParameters_message@lux_cfg+1
  1875  025C  0841               	movf	_lux_value_cfg,w
  1876  025D  00B8               	movwf	sendParameters_message@lux_cfg
  1877  025E  120A  158A  269F  120A  118A  	fcall	_sendParameters_message
  1878  0263  2A8A               	goto	l226
  1879  0264                     l2069:
  1880  0264  3065               	movlw	101
  1881  0265  120A  118A  232D  120A  118A  	fcall	_sendInfo
  1882  026A  2A8A               	goto	l226
  1883  026B                     l2073:
  1884                           
  1885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1886                           ; Switch size 1, requested type "simple"
  1887                           ; Number of cases is 1, Range of values is 0 to 0
  1888                           ; switch strategies available:
  1889                           ; Name         Instructions Cycles
  1890                           ; simple_byte            4     3 (average)
  1891                           ; direct_byte           11     8 (fixed)
  1892                           ; jumptable            260     6 (fixed)
  1893                           ;	Chosen strategy is simple_byte
  1894  026B  085D               	movf	(main@command+1)^(0+256),w
  1895  026C  3A00               	xorlw	0	; case 0
  1896  026D  1903               	skipnz
  1897  026E  2A70               	goto	l2205
  1898  026F  2A64               	goto	l2069
  1899  0270                     l2205:
  1900                           
  1901                           ; Switch size 1, requested type "simple"
  1902                           ; Number of cases is 8, Range of values is 49 to 56
  1903                           ; switch strategies available:
  1904                           ; Name         Instructions Cycles
  1905                           ; simple_byte           25    13 (average)
  1906                           ; direct_byte           35    11 (fixed)
  1907                           ; jumptable            263     9 (fixed)
  1908                           ;	Chosen strategy is simple_byte
  1909  0270  085C               	movf	main@command^(0+256),w
  1910  0271  3A31               	xorlw	49	; case 49
  1911  0272  1903               	skipnz
  1912  0273  2902               	goto	l2021
  1913  0274  3A03               	xorlw	3	; case 50
  1914  0275  1903               	skipnz
  1915  0276  292D               	goto	l2023
  1916  0277  3A01               	xorlw	1	; case 51
  1917  0278  1903               	skipnz
  1918  0279  2941               	goto	l2027
  1919  027A  3A07               	xorlw	7	; case 52
  1920  027B  1903               	skipnz
  1921  027C  2957               	goto	l2031
  1922  027D  3A01               	xorlw	1	; case 53
  1923  027E  1903               	skipnz
  1924  027F  296B               	goto	l2035
  1925  0280  3A03               	xorlw	3	; case 54
  1926  0281  1903               	skipnz
  1927  0282  2981               	goto	l2039
  1928  0283  3A01               	xorlw	1	; case 55
  1929  0284  1903               	skipnz
  1930  0285  29E3               	goto	l2053
  1931  0286  3A0F               	xorlw	15	; case 56
  1932  0287  1903               	skipnz
  1933  0288  2A45               	goto	l2067
  1934  0289  2A64               	goto	l2069
  1935  028A                     l226:
  1936                           
  1937                           ;../../Lab2/AQC1.X/main.c: 518:             PIR1bits.RCIF = 0;
  1938  028A  1283               	bcf	3,5	;RP0=0, select bank0
  1939  028B  1303               	bcf	3,6	;RP1=0, select bank0
  1940  028C  128C               	bcf	12,5	;volatile
  1941  028D                     l2075:
  1942                           
  1943                           ;../../Lab2/AQC1.X/main.c: 519:             buffer[12] = buffer[20] = buffer[21] = 'e';
  1944  028D  3065               	movlw	101
  1945  028E  1283               	bcf	3,5	;RP0=0, select bank2
  1946  028F  1703               	bsf	3,6	;RP1=1, select bank2
  1947  0290  00A5               	movwf	(main@buffer^(0+256)+21)
  1948  0291  00A4               	movwf	(main@buffer^(0+256)+20)
  1949  0292  1283               	bcf	3,5	;RP0=0, select bank0
  1950  0293  1303               	bcf	3,6	;RP1=0, select bank0
  1951  0294  00BD               	movwf	??_main
  1952  0295  083D               	movf	??_main,w
  1953  0296  1283               	bcf	3,5	;RP0=0, select bank2
  1954  0297  1703               	bsf	3,6	;RP1=1, select bank2
  1955  0298  009C               	movwf	(main@buffer^(0+256)+12)
  1956  0299                     l2077:
  1957                           
  1958                           ;../../Lab2/AQC1.X/main.c: 521:         if(timer){
  1959  0299  1283               	bcf	3,5	;RP0=0, select bank2
  1960  029A  1703               	bsf	3,6	;RP1=1, select bank2
  1961  029B  0860               	movf	_timer^(0+256),w
  1962  029C  0461               	iorwf	(_timer+1)^(0+256),w
  1963  029D  1903               	btfsc	3,2
  1964  029E  2AA0               	goto	u1751
  1965  029F  2AA1               	goto	u1750
  1966  02A0                     u1751:
  1967  02A0  2ACD               	goto	l2089
  1968  02A1                     u1750:
  1969  02A1                     l2079:
  1970                           
  1971                           ;../../Lab2/AQC1.X/main.c: 522:             count++;
  1972  02A1  3001               	movlw	1
  1973  02A2  07DE               	addwf	_count^(0+256),f
  1974  02A3  1803               	skipnc
  1975  02A4  0ADF               	incf	(_count+1)^(0+256),f
  1976  02A5  3000               	movlw	0
  1977  02A6  07DF               	addwf	(_count+1)^(0+256),f
  1978  02A7                     l2081:
  1979                           
  1980                           ;../../Lab2/AQC1.X/main.c: 523:             timer = 0;
  1981  02A7  01E0               	clrf	_timer^(0+256)
  1982  02A8  01E1               	clrf	(_timer+1)^(0+256)
  1983  02A9                     l2083:
  1984                           
  1985                           ;../../Lab2/AQC1.X/main.c: 524:             if(count == 50){
  1986  02A9  3032               	movlw	50
  1987  02AA  065E               	xorwf	_count^(0+256),w
  1988  02AB  045F               	iorwf	(_count+1)^(0+256),w
  1989  02AC  1D03               	btfss	3,2
  1990  02AD  2AAF               	goto	u1761
  1991  02AE  2AB0               	goto	u1760
  1992  02AF                     u1761:
  1993  02AF  2ACD               	goto	l2089
  1994  02B0                     u1760:
  1995  02B0                     l2085:
  1996                           
  1997                           ;../../Lab2/AQC1.X/main.c: 525:                 count = 0;
  1998  02B0  01DE               	clrf	_count^(0+256)
  1999  02B1  01DF               	clrf	(_count+1)^(0+256)
  2000  02B2                     l2087:
  2001                           
  2002                           ;../../Lab2/AQC1.X/main.c: 526:                 sendMessage(convertADC_0(),convertADC_1(
      +                          ));
  2003  02B2  120A  158A  2507  120A  118A  	fcall	_convertADC_0
  2004  02B7  0873               	movf	?_convertADC_0+1,w
  2005  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2006  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2007  02BA  00B7               	movwf	sendMessage@ldr1+1
  2008  02BB  0872               	movf	?_convertADC_0,w
  2009  02BC  00B6               	movwf	sendMessage@ldr1
  2010  02BD  120A  158A  2518  120A  118A  	fcall	_convertADC_1
  2011  02C2  0873               	movf	?_convertADC_1+1,w
  2012  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2013  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  2014  02C5  00B9               	movwf	sendMessage@ldr2+1
  2015  02C6  0872               	movf	?_convertADC_1,w
  2016  02C7  00B8               	movwf	sendMessage@ldr2
  2017  02C8  120A  158A  2659  120A  118A  	fcall	_sendMessage
  2018  02CD                     l2089:
  2019                           
  2020                           ;../../Lab2/AQC1.X/main.c: 530:         if(!PORTBbits.RB3){
  2021  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2022  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2023  02CF  1986               	btfsc	6,3	;volatile
  2024  02D0  2AD2               	goto	u1771
  2025  02D1  2AD3               	goto	u1770
  2026  02D2                     u1771:
  2027  02D2  2ADC               	goto	l2095
  2028  02D3                     u1770:
  2029  02D3                     l250:	
  2030                           ;../../Lab2/AQC1.X/main.c: 534:            }
  2031                           
  2032                           
  2033                           ;../../Lab2/AQC1.X/main.c: 532:            while(!PORTBbits.RB3){
  2034  02D3  1D86               	btfss	6,3	;volatile
  2035  02D4  2AD6               	goto	u1781
  2036  02D5  2AD7               	goto	u1780
  2037  02D6                     u1781:
  2038  02D6  2AD3               	goto	l250
  2039  02D7                     u1780:
  2040  02D7                     l2093:
  2041                           
  2042                           ;../../Lab2/AQC1.X/main.c: 536:            standby_toggle();
  2043  02D7  120A  158A  24E6  120A  118A  	fcall	_standby_toggle
  2044  02DC                     l2095:
  2045                           
  2046                           ;../../Lab2/AQC1.X/main.c: 538:         if(standbyINT){
  2047  02DC  1283               	bcf	3,5	;RP0=0, select bank2
  2048  02DD  1703               	bsf	3,6	;RP1=1, select bank2
  2049  02DE  0862               	movf	_standbyINT^(0+256),w
  2050  02DF  0463               	iorwf	(_standbyINT+1)^(0+256),w
  2051  02E0  1903               	btfsc	3,2
  2052  02E1  2AE3               	goto	u1791
  2053  02E2  2AE4               	goto	u1790
  2054  02E3                     u1791:
  2055  02E3  2AED               	goto	l2101
  2056  02E4                     u1790:
  2057  02E4                     l2097:
  2058                           
  2059                           ;../../Lab2/AQC1.X/main.c: 539:             standby_toggle();
  2060  02E4  120A  158A  24E6  120A  118A  	fcall	_standby_toggle
  2061  02E9                     l2099:
  2062                           
  2063                           ;../../Lab2/AQC1.X/main.c: 540:             standbyINT = 0;
  2064  02E9  1283               	bcf	3,5	;RP0=0, select bank2
  2065  02EA  1703               	bsf	3,6	;RP1=1, select bank2
  2066  02EB  01E2               	clrf	_standbyINT^(0+256)
  2067  02EC  01E3               	clrf	(_standbyINT+1)^(0+256)
  2068  02ED                     l2101:
  2069                           
  2070                           ;../../Lab2/AQC1.X/main.c: 543:         if(!PORTBbits.RB4 || !PORTBbits.RB5 || !PORTAbit
      +                          s.RA5){
  2071  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2072  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2073  02EF  1E06               	btfss	6,4	;volatile
  2074  02F0  2AF2               	goto	u1801
  2075  02F1  2AF3               	goto	u1800
  2076  02F2                     u1801:
  2077  02F2  2AFB               	goto	l257
  2078  02F3                     u1800:
  2079  02F3                     l2103:
  2080  02F3  1E86               	btfss	6,5	;volatile
  2081  02F4  2AF6               	goto	u1811
  2082  02F5  2AF7               	goto	u1810
  2083  02F6                     u1811:
  2084  02F6  2AFB               	goto	l257
  2085  02F7                     u1810:
  2086  02F7                     l2105:
  2087  02F7  1A85               	btfsc	5,5	;volatile
  2088  02F8  2AFA               	goto	u1821
  2089  02F9  2AFB               	goto	u1820
  2090  02FA                     u1821:
  2091  02FA  2B24               	goto	l2117
  2092  02FB                     u1820:
  2093  02FB                     l257:
  2094  02FB  1E06               	btfss	6,4	;volatile
  2095  02FC  2AFE               	goto	u1831
  2096  02FD  2AFF               	goto	u1830
  2097  02FE                     u1831:
  2098  02FE  2AFB               	goto	l257
  2099  02FF                     u1830:
  2100  02FF                     l2107:
  2101  02FF  1E86               	btfss	6,5	;volatile
  2102  0300  2B02               	goto	u1841
  2103  0301  2B03               	goto	u1840
  2104  0302                     u1841:
  2105  0302  2AFB               	goto	l257
  2106  0303                     u1840:
  2107  0303                     l2109:
  2108  0303  1E85               	btfss	5,5	;volatile
  2109  0304  2B06               	goto	u1851
  2110  0305  2B07               	goto	u1850
  2111  0306                     u1851:
  2112  0306  2AFB               	goto	l257
  2113  0307                     u1850:
  2114  0307                     l2111:
  2115                           
  2116                           ;../../Lab2/AQC1.X/main.c: 547:             if(!isResOn())
  2117  0307  120A  158A  24D8  120A  118A  	fcall	_isResOn
  2118  030C  0872               	movf	?_isResOn,w
  2119  030D  0473               	iorwf	?_isResOn+1,w
  2120  030E  1D03               	btfss	3,2
  2121  030F  2B11               	goto	u1861
  2122  0310  2B12               	goto	u1860
  2123  0311                     u1861:
  2124  0311  2B1C               	goto	l2115
  2125  0312                     u1860:
  2126  0312                     l2113:
  2127                           
  2128                           ;../../Lab2/AQC1.X/main.c: 548:                 turnRes(1);
  2129  0312  3001               	movlw	1
  2130  0313  00F2               	movwf	turnRes@s
  2131  0314  3000               	movlw	0
  2132  0315  00F3               	movwf	turnRes@s+1
  2133  0316  120A  118A  23E6  120A  118A  	fcall	_turnRes
  2134  031B  2B24               	goto	l2117
  2135  031C                     l2115:
  2136                           
  2137                           ;../../Lab2/AQC1.X/main.c: 550:                 turnRes(0);
  2138  031C  3000               	movlw	0
  2139  031D  00F2               	movwf	turnRes@s
  2140  031E  00F3               	movwf	turnRes@s+1
  2141  031F  120A  118A  23E6  120A  118A  	fcall	_turnRes
  2142  0324                     l2117:
  2143                           
  2144                           ;../../Lab2/AQC1.X/main.c: 556:         checkLeds();
  2145  0324  120A  118A  261D  120A  118A  	fcall	_checkLeds
  2146  0329  286C               	goto	l1999
  2147  032A  120A  118A  280C   	ljmp	start
  2148  032D                     __end_of_main:
  2149                           
  2150                           	psect	text1
  2151  03E6                     __ptext1:	
  2152 ;; *************** function _turnRes *****************
  2153 ;; Defined at:
  2154 ;;		line 282 in file "../../Lab2/AQC1.X/main.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  s               2    2[COMMON] int 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;		None
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2168 ;;      Params:         2       0       0       0       0
  2169 ;;      Locals:         0       0       0       0       0
  2170 ;;      Temps:          0       0       0       0       0
  2171 ;;      Totals:         2       0       0       0       0
  2172 ;;Total ram usage:        2 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 1
  2175 ;; This function calls:
  2176 ;;		Nothing
  2177 ;; This function is called by:
  2178 ;;		_main
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           
  2183                           ;psect for function _turnRes
  2184  03E6                     _turnRes:
  2185  03E6                     l1785:	
  2186                           ;incstack = 0
  2187                           ; Regs used in _turnRes: [wreg+status,2+status,0]
  2188                           
  2189                           
  2190                           ;../../Lab2/AQC1.X/main.c: 283:     TRISCbits.TRISC5 = 0;
  2191  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  2192  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  2193  03E8  1287               	bcf	7,5	;volatile
  2194  03E9                     l1787:
  2195                           
  2196                           ;../../Lab2/AQC1.X/main.c: 284:     if(s)
  2197  03E9  0872               	movf	turnRes@s,w
  2198  03EA  0473               	iorwf	turnRes@s+1,w
  2199  03EB  1903               	btfsc	3,2
  2200  03EC  2BEE               	goto	u1261
  2201  03ED  2BEF               	goto	u1260
  2202  03EE                     u1261:
  2203  03EE  2BF3               	goto	l155
  2204  03EF                     u1260:
  2205  03EF                     l1789:
  2206                           
  2207                           ;../../Lab2/AQC1.X/main.c: 285:         PORTCbits.RC5 = 1;
  2208  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2209  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2210  03F1  1687               	bsf	7,5	;volatile
  2211  03F2  2BF6               	goto	l157
  2212  03F3                     l155:	
  2213                           ;../../Lab2/AQC1.X/main.c: 286:     else
  2214                           
  2215                           
  2216                           ;../../Lab2/AQC1.X/main.c: 287:         PORTCbits.RC5 = 0;
  2217  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  2218  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  2219  03F5  1287               	bcf	7,5	;volatile
  2220  03F6                     l157:
  2221  03F6  0008               	return
  2222  03F7                     __end_of_turnRes:
  2223                           
  2224                           	psect	text2
  2225  0CE6                     __ptext2:	
  2226 ;; *************** function _standby_toggle *****************
  2227 ;; Defined at:
  2228 ;;		line 265 in file "../../Lab2/AQC1.X/main.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, status,2, status,0
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2242 ;;      Params:         0       0       0       0       0
  2243 ;;      Locals:         0       0       0       0       0
  2244 ;;      Temps:          0       0       0       0       0
  2245 ;;      Totals:         0       0       0       0       0
  2246 ;;Total ram usage:        0 bytes
  2247 ;; Hardware stack levels used: 1
  2248 ;; Hardware stack levels required when called: 1
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_main
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           
  2257                           ;psect for function _standby_toggle
  2258  0CE6                     _standby_toggle:
  2259  0CE6                     l1779:	
  2260                           ;incstack = 0
  2261                           ; Regs used in _standby_toggle: [wreg+status,2+status,0]
  2262                           
  2263                           
  2264                           ;../../Lab2/AQC1.X/main.c: 266:     if(standby == 1){
  2265  0CE6  1283               	bcf	3,5	;RP0=0, select bank0
  2266  0CE7  1303               	bcf	3,6	;RP1=0, select bank0
  2267  0CE8  0348               	decf	_standby,w
  2268  0CE9  0449               	iorwf	_standby+1,w
  2269  0CEA  1D03               	btfss	3,2
  2270  0CEB  2CED               	goto	u1251
  2271  0CEC  2CEE               	goto	u1250
  2272  0CED                     u1251:
  2273  0CED  2CF1               	goto	l1783
  2274  0CEE                     u1250:
  2275  0CEE                     l1781:
  2276                           
  2277                           ;../../Lab2/AQC1.X/main.c: 267:         standby=0;
  2278  0CEE  01C8               	clrf	_standby
  2279  0CEF  01C9               	clrf	_standby+1
  2280                           
  2281                           ;../../Lab2/AQC1.X/main.c: 268:     }
  2282  0CF0  2CF5               	goto	l148
  2283  0CF1                     l1783:
  2284                           
  2285                           ;../../Lab2/AQC1.X/main.c: 270:         standby=1;
  2286  0CF1  3001               	movlw	1
  2287  0CF2  00C8               	movwf	_standby
  2288  0CF3  3000               	movlw	0
  2289  0CF4  00C9               	movwf	_standby+1
  2290  0CF5                     l148:
  2291  0CF5  0008               	return
  2292  0CF6                     __end_of_standby_toggle:
  2293                           
  2294                           	psect	text3
  2295  03F7                     __ptext3:	
  2296 ;; *************** function _setupTimer *****************
  2297 ;; Defined at:
  2298 ;;		line 303 in file "../../Lab2/AQC1.X/main.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;		None
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;		None
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2312 ;;      Params:         0       0       0       0       0
  2313 ;;      Locals:         0       0       0       0       0
  2314 ;;      Temps:          0       0       0       0       0
  2315 ;;      Totals:         0       0       0       0       0
  2316 ;;Total ram usage:        0 bytes
  2317 ;; Hardware stack levels used: 1
  2318 ;; Hardware stack levels required when called: 1
  2319 ;; This function calls:
  2320 ;;		Nothing
  2321 ;; This function is called by:
  2322 ;;		_main
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           
  2327                           ;psect for function _setupTimer
  2328  03F7                     _setupTimer:
  2329  03F7                     l1801:	
  2330                           ;incstack = 0
  2331                           ; Regs used in _setupTimer: [wreg]
  2332                           
  2333                           
  2334                           ;../../Lab2/AQC1.X/main.c: 304:     OPTION_REG=7;
  2335  03F7  3007               	movlw	7
  2336  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2337  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2338  03FA  0081               	movwf	1	;volatile
  2339  03FB                     l164:
  2340  03FB  0008               	return
  2341  03FC                     __end_of_setupTimer:
  2342                           
  2343                           	psect	text4
  2344  0E9F                     __ptext4:	
  2345 ;; *************** function _sendParameters_message *****************
  2346 ;; Defined at:
  2347 ;;		line 208 in file "../../Lab2/AQC1.X/main.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  low_light       2   22[BANK0 ] unsigned int 
  2350 ;;  lux_cfg         2   24[BANK0 ] unsigned int 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  c              90    0[BANK3 ] unsigned char [90]
  2353 ;;  i               2   90[BANK3 ] int 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2363 ;;      Params:         0       4       0       0       0
  2364 ;;      Locals:         0       0       0      92       0
  2365 ;;      Temps:          0       0       0       0       0
  2366 ;;      Totals:         0       4       0      92       0
  2367 ;;Total ram usage:       96 bytes
  2368 ;; Hardware stack levels used: 1
  2369 ;; Hardware stack levels required when called: 3
  2370 ;; This function calls:
  2371 ;;		_delay
  2372 ;;		_sendUART
  2373 ;;		_sprintf
  2374 ;; This function is called by:
  2375 ;;		_main
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           
  2380                           ;psect for function _sendParameters_message
  2381  0E9F                     _sendParameters_message:
  2382  0E9F                     l1767:	
  2383                           ;incstack = 0
  2384                           ; Regs used in _sendParameters_message: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2385                           
  2386                           
  2387                           ;../../Lab2/AQC1.X/main.c: 209:     char c[90];;../../Lab2/AQC1.X/main.c: 210:     int i
      +                           = 0;
  2388  0E9F  1683               	bsf	3,5	;RP0=1, select bank3
  2389  0EA0  1703               	bsf	3,6	;RP1=1, select bank3
  2390  0EA1  01EA               	clrf	sendParameters_message@i^(0+384)
  2391  0EA2  01EB               	clrf	(sendParameters_message@i+1)^(0+384)
  2392  0EA3                     l1769:
  2393                           
  2394                           ;../../Lab2/AQC1.X/main.c: 211:     sprintf(c,"\n<Parameters>\n\t<low_light>%d</low_ligh
      +                          t>\n\t<lux_cfg>%d</lux_cfg>\n</Parameters>\n",low_light,lux_cfg);
  2395  0EA3  3090               	movlw	(low (sendParameters_message@c| (0+256)))& (0+255)
  2396  0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  2397  0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  2398  0EA6  00A4               	movwf	sprintf@sp
  2399  0EA7  3001               	movlw	1
  2400  0EA8  00A5               	movwf	sprintf@sp+1
  2401  0EA9  301C               	movlw	low (STR_2| (0+32768))
  2402  0EAA  00A6               	movwf	sprintf@f
  2403  0EAB  3084               	movlw	high (STR_2| (0+32768))
  2404  0EAC  00A7               	movwf	sprintf@f+1
  2405  0EAD  0837               	movf	sendParameters_message@low_light+1,w
  2406  0EAE  00A9               	movwf	?_sprintf+5
  2407  0EAF  0836               	movf	sendParameters_message@low_light,w
  2408  0EB0  00A8               	movwf	?_sprintf+4
  2409  0EB1  0839               	movf	sendParameters_message@lux_cfg+1,w
  2410  0EB2  00AB               	movwf	?_sprintf+7
  2411  0EB3  0838               	movf	sendParameters_message@lux_cfg,w
  2412  0EB4  00AA               	movwf	?_sprintf+6
  2413  0EB5  120A  158A  26E5  120A  158A  	fcall	_sprintf
  2414                           
  2415                           ;../../Lab2/AQC1.X/main.c: 212:     while(c[i]){
  2416  0EBA  2ED9               	goto	l1777
  2417  0EBB                     l1771:
  2418                           
  2419                           ;../../Lab2/AQC1.X/main.c: 214:         sendUART(c[i++]);
  2420  0EBB  086A               	movf	sendParameters_message@i^(0+384),w
  2421  0EBC  3E90               	addlw	(low (sendParameters_message@c| (0+256)))& (0+255)
  2422  0EBD  0084               	movwf	4
  2423  0EBE  0800               	movf	0,w
  2424  0EBF  120A  158A  24A8  120A  158A  	fcall	_sendUART
  2425  0EC4                     l1773:
  2426  0EC4  3001               	movlw	1
  2427  0EC5  1683               	bsf	3,5	;RP0=1, select bank3
  2428  0EC6  1703               	bsf	3,6	;RP1=1, select bank3
  2429  0EC7  07EA               	addwf	sendParameters_message@i^(0+384),f
  2430  0EC8  1803               	skipnc
  2431  0EC9  0AEB               	incf	(sendParameters_message@i+1)^(0+384),f
  2432  0ECA  3000               	movlw	0
  2433  0ECB  07EB               	addwf	(sendParameters_message@i+1)^(0+384),f
  2434  0ECC                     l1775:
  2435                           
  2436                           ;../../Lab2/AQC1.X/main.c: 215:         delay(200);
  2437  0ECC  3000               	movlw	0
  2438  0ECD  00F5               	movwf	delay@n+3
  2439  0ECE  3000               	movlw	0
  2440  0ECF  00F4               	movwf	delay@n+2
  2441  0ED0  3000               	movlw	0
  2442  0ED1  00F3               	movwf	delay@n+1
  2443  0ED2  30C8               	movlw	200
  2444  0ED3  00F2               	movwf	delay@n
  2445  0ED4  120A  158A  2579  120A  158A  	fcall	_delay
  2446  0ED9                     l1777:
  2447                           
  2448                           ;../../Lab2/AQC1.X/main.c: 212:     while(c[i]){
  2449  0ED9  1683               	bsf	3,5	;RP0=1, select bank3
  2450  0EDA  1703               	bsf	3,6	;RP1=1, select bank3
  2451  0EDB  086A               	movf	sendParameters_message@i^(0+384),w
  2452  0EDC  3E90               	addlw	(low (sendParameters_message@c| (0+256)))& (0+255)
  2453  0EDD  0084               	movwf	4
  2454  0EDE  1783               	bsf	3,7	;select IRP bank3
  2455  0EDF  0800               	movf	0,w
  2456  0EE0  1D03               	btfss	3,2
  2457  0EE1  2EE3               	goto	u1241
  2458  0EE2  2EE4               	goto	u1240
  2459  0EE3                     u1241:
  2460  0EE3  2EBB               	goto	l1771
  2461  0EE4                     u1240:
  2462  0EE4                     l128:
  2463  0EE4  0008               	return
  2464  0EE5                     __end_of_sendParameters_message:
  2465                           
  2466                           	psect	text5
  2467  0E59                     __ptext5:	
  2468 ;; *************** function _sendMessage *****************
  2469 ;; Defined at:
  2470 ;;		line 196 in file "../../Lab2/AQC1.X/main.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  ldr1            2   22[BANK0 ] int 
  2473 ;;  ldr2            2   24[BANK0 ] int 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  c              70    0[BANK1 ] unsigned char [70]
  2476 ;;  i               2   70[BANK1 ] int 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2486 ;;      Params:         0       4       0       0       0
  2487 ;;      Locals:         0       0      72       0       0
  2488 ;;      Temps:          0       0       0       0       0
  2489 ;;      Totals:         0       4      72       0       0
  2490 ;;Total ram usage:       76 bytes
  2491 ;; Hardware stack levels used: 1
  2492 ;; Hardware stack levels required when called: 3
  2493 ;; This function calls:
  2494 ;;		_delay
  2495 ;;		_sendUART
  2496 ;;		_sprintf
  2497 ;; This function is called by:
  2498 ;;		_main
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           
  2503                           ;psect for function _sendMessage
  2504  0E59                     _sendMessage:
  2505  0E59                     l1755:	
  2506                           ;incstack = 0
  2507                           ; Regs used in _sendMessage: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2508                           
  2509                           
  2510                           ;../../Lab2/AQC1.X/main.c: 197:     char c[70];;../../Lab2/AQC1.X/main.c: 198:     int i
      +                           = 0;
  2511  0E59  1683               	bsf	3,5	;RP0=1, select bank1
  2512  0E5A  1303               	bcf	3,6	;RP1=0, select bank1
  2513  0E5B  01E6               	clrf	sendMessage@i^(0+128)
  2514  0E5C  01E7               	clrf	(sendMessage@i+1)^(0+128)
  2515  0E5D                     l1757:
  2516                           
  2517                           ;../../Lab2/AQC1.X/main.c: 199:     sprintf(c,"\n<ldr_value>\n\t<ldr_1>%d</ldr_1>\n\t<ld
      +                          r_2>%d</ldr_2>\n</ldr_value>\n",ldr1,ldr2);
  2518  0E5D  30A0               	movlw	(low (sendMessage@c| 0))& (0+255)
  2519  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  2520  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  2521  0E60  00A4               	movwf	sprintf@sp
  2522  0E61  3000               	movlw	0
  2523  0E62  00A5               	movwf	sprintf@sp+1
  2524  0E63  306B               	movlw	low (STR_1| (0+32768))
  2525  0E64  00A6               	movwf	sprintf@f
  2526  0E65  3084               	movlw	high (STR_1| (0+32768))
  2527  0E66  00A7               	movwf	sprintf@f+1
  2528  0E67  0837               	movf	sendMessage@ldr1+1,w
  2529  0E68  00A9               	movwf	?_sprintf+5
  2530  0E69  0836               	movf	sendMessage@ldr1,w
  2531  0E6A  00A8               	movwf	?_sprintf+4
  2532  0E6B  0839               	movf	sendMessage@ldr2+1,w
  2533  0E6C  00AB               	movwf	?_sprintf+7
  2534  0E6D  0838               	movf	sendMessage@ldr2,w
  2535  0E6E  00AA               	movwf	?_sprintf+6
  2536  0E6F  120A  158A  26E5  120A  158A  	fcall	_sprintf
  2537                           
  2538                           ;../../Lab2/AQC1.X/main.c: 200:     while(c[i]){
  2539  0E74  2E93               	goto	l1765
  2540  0E75                     l1759:
  2541                           
  2542                           ;../../Lab2/AQC1.X/main.c: 202:         sendUART(c[i++]);
  2543  0E75  0866               	movf	sendMessage@i^(0+128),w
  2544  0E76  3EA0               	addlw	(low (sendMessage@c| 0))& (0+255)
  2545  0E77  0084               	movwf	4
  2546  0E78  0800               	movf	0,w
  2547  0E79  120A  158A  24A8  120A  158A  	fcall	_sendUART
  2548  0E7E                     l1761:
  2549  0E7E  3001               	movlw	1
  2550  0E7F  1683               	bsf	3,5	;RP0=1, select bank1
  2551  0E80  1303               	bcf	3,6	;RP1=0, select bank1
  2552  0E81  07E6               	addwf	sendMessage@i^(0+128),f
  2553  0E82  1803               	skipnc
  2554  0E83  0AE7               	incf	(sendMessage@i+1)^(0+128),f
  2555  0E84  3000               	movlw	0
  2556  0E85  07E7               	addwf	(sendMessage@i+1)^(0+128),f
  2557  0E86                     l1763:
  2558                           
  2559                           ;../../Lab2/AQC1.X/main.c: 203:         delay(200);
  2560  0E86  3000               	movlw	0
  2561  0E87  00F5               	movwf	delay@n+3
  2562  0E88  3000               	movlw	0
  2563  0E89  00F4               	movwf	delay@n+2
  2564  0E8A  3000               	movlw	0
  2565  0E8B  00F3               	movwf	delay@n+1
  2566  0E8C  30C8               	movlw	200
  2567  0E8D  00F2               	movwf	delay@n
  2568  0E8E  120A  158A  2579  120A  158A  	fcall	_delay
  2569  0E93                     l1765:
  2570                           
  2571                           ;../../Lab2/AQC1.X/main.c: 200:     while(c[i]){
  2572  0E93  1683               	bsf	3,5	;RP0=1, select bank1
  2573  0E94  1303               	bcf	3,6	;RP1=0, select bank1
  2574  0E95  0866               	movf	sendMessage@i^(0+128),w
  2575  0E96  3EA0               	addlw	(low (sendMessage@c| 0))& (0+255)
  2576  0E97  0084               	movwf	4
  2577  0E98  1383               	bcf	3,7	;select IRP bank1
  2578  0E99  0800               	movf	0,w
  2579  0E9A  1D03               	btfss	3,2
  2580  0E9B  2E9D               	goto	u1231
  2581  0E9C  2E9E               	goto	u1230
  2582  0E9D                     u1231:
  2583  0E9D  2E75               	goto	l1759
  2584  0E9E                     u1230:
  2585  0E9E                     l122:
  2586  0E9E  0008               	return
  2587  0E9F                     __end_of_sendMessage:
  2588                           
  2589                           	psect	text6
  2590  0CB2                     __ptext6:	
  2591 ;; *************** function _receiveUART *****************
  2592 ;; Defined at:
  2593 ;;		line 185 in file "../../Lab2/AQC1.X/main.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  c               1    3[COMMON] unsigned char 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      unsigned char 
  2600 ;; Registers used:
  2601 ;;		wreg
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2607 ;;      Params:         0       0       0       0       0
  2608 ;;      Locals:         1       0       0       0       0
  2609 ;;      Temps:          1       0       0       0       0
  2610 ;;      Totals:         2       0       0       0       0
  2611 ;;Total ram usage:        2 bytes
  2612 ;; Hardware stack levels used: 1
  2613 ;; Hardware stack levels required when called: 1
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		_main
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           
  2622                           ;psect for function _receiveUART
  2623  0CB2                     _receiveUART:
  2624  0CB2                     l1749:	
  2625                           ;incstack = 0
  2626                           ; Regs used in _receiveUART: [wreg]
  2627                           
  2628  0CB2                     l113:	
  2629                           ;../../Lab2/AQC1.X/main.c: 187:     while(!PIR1bits.RCIF);
  2630                           
  2631  0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  2632  0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  2633  0CB4  1E8C               	btfss	12,5	;volatile
  2634  0CB5  2CB7               	goto	u1221
  2635  0CB6  2CB8               	goto	u1220
  2636  0CB7                     u1221:
  2637  0CB7  2CB2               	goto	l113
  2638  0CB8                     u1220:
  2639  0CB8                     l1751:
  2640                           
  2641                           ;../../Lab2/AQC1.X/main.c: 189:     char c = RCREG;
  2642  0CB8  081A               	movf	26,w	;volatile
  2643  0CB9  00F2               	movwf	??_receiveUART
  2644  0CBA  0872               	movf	??_receiveUART,w
  2645  0CBB  00F3               	movwf	receiveUART@c
  2646                           
  2647                           ;../../Lab2/AQC1.X/main.c: 191:     return c;
  2648  0CBC  0873               	movf	receiveUART@c,w
  2649  0CBD                     l116:
  2650  0CBD  0008               	return
  2651  0CBE                     __end_of_receiveUART:
  2652                           
  2653                           	psect	text7
  2654  0DA4                     __ptext7:	
  2655 ;; *************** function _printACK *****************
  2656 ;; Defined at:
  2657 ;;		line 414 in file "../../Lab2/AQC1.X/main.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  value           2   22[BANK0 ] int 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  frase          65    0[BANK1 ] unsigned char [65]
  2662 ;;  i               2   65[BANK1 ] int 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2672 ;;      Params:         0       2       0       0       0
  2673 ;;      Locals:         0       0      67       0       0
  2674 ;;      Temps:          0       0       0       0       0
  2675 ;;      Totals:         0       2      67       0       0
  2676 ;;Total ram usage:       69 bytes
  2677 ;; Hardware stack levels used: 1
  2678 ;; Hardware stack levels required when called: 3
  2679 ;; This function calls:
  2680 ;;		_sendUART
  2681 ;;		_sprintf
  2682 ;; This function is called by:
  2683 ;;		_main
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           
  2688                           ;psect for function _printACK
  2689  0DA4                     _printACK:
  2690  0DA4                     l1921:	
  2691                           ;incstack = 0
  2692                           ; Regs used in _printACK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2693                           
  2694                           
  2695                           ;../../Lab2/AQC1.X/main.c: 415:  int i = 0;
  2696  0DA4  1683               	bsf	3,5	;RP0=1, select bank1
  2697  0DA5  1303               	bcf	3,6	;RP1=0, select bank1
  2698  0DA6  01E1               	clrf	printACK@i^(0+128)
  2699  0DA7  01E2               	clrf	(printACK@i+1)^(0+128)
  2700  0DA8                     l1923:
  2701                           
  2702                           ;../../Lab2/AQC1.X/main.c: 417:  char frase[65];;../../Lab2/AQC1.X/main.c: 418:  sprintf
      +                          (frase,"\n<ACK>\n\t<C>%c</C>\n</ACK>", value);
  2703  0DA8  30A0               	movlw	(low (printACK@frase| 0))& (0+255)
  2704  0DA9  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0DAA  1303               	bcf	3,6	;RP1=0, select bank0
  2706  0DAB  00A4               	movwf	sprintf@sp
  2707  0DAC  3000               	movlw	0
  2708  0DAD  00A5               	movwf	sprintf@sp+1
  2709  0DAE  3004               	movlw	low (STR_10| (0+32768))
  2710  0DAF  00A6               	movwf	sprintf@f
  2711  0DB0  3086               	movlw	high (STR_10| (0+32768))
  2712  0DB1  00A7               	movwf	sprintf@f+1
  2713  0DB2  0837               	movf	printACK@value+1,w
  2714  0DB3  00A9               	movwf	?_sprintf+5
  2715  0DB4  0836               	movf	printACK@value,w
  2716  0DB5  00A8               	movwf	?_sprintf+4
  2717  0DB6  120A  158A  26E5  120A  158A  	fcall	_sprintf
  2718                           
  2719                           ;../../Lab2/AQC1.X/main.c: 421:  while (frase[i]) {
  2720  0DBB  2DCD               	goto	l1929
  2721  0DBC                     l1925:
  2722                           
  2723                           ;../../Lab2/AQC1.X/main.c: 422:   sendUART(frase[i++]);
  2724  0DBC  0861               	movf	printACK@i^(0+128),w
  2725  0DBD  3EA0               	addlw	(low (printACK@frase| 0))& (0+255)
  2726  0DBE  0084               	movwf	4
  2727  0DBF  0800               	movf	0,w
  2728  0DC0  120A  158A  24A8  120A  158A  	fcall	_sendUART
  2729  0DC5                     l1927:
  2730  0DC5  3001               	movlw	1
  2731  0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  2732  0DC7  1303               	bcf	3,6	;RP1=0, select bank1
  2733  0DC8  07E1               	addwf	printACK@i^(0+128),f
  2734  0DC9  1803               	skipnc
  2735  0DCA  0AE2               	incf	(printACK@i+1)^(0+128),f
  2736  0DCB  3000               	movlw	0
  2737  0DCC  07E2               	addwf	(printACK@i+1)^(0+128),f
  2738  0DCD                     l1929:
  2739                           
  2740                           ;../../Lab2/AQC1.X/main.c: 421:  while (frase[i]) {
  2741  0DCD  1683               	bsf	3,5	;RP0=1, select bank1
  2742  0DCE  1303               	bcf	3,6	;RP1=0, select bank1
  2743  0DCF  0861               	movf	printACK@i^(0+128),w
  2744  0DD0  3EA0               	addlw	(low (printACK@frase| 0))& (0+255)
  2745  0DD1  0084               	movwf	4
  2746  0DD2  1383               	bcf	3,7	;select IRP bank1
  2747  0DD3  0800               	movf	0,w
  2748  0DD4  1D03               	btfss	3,2
  2749  0DD5  2DD7               	goto	u1571
  2750  0DD6  2DD8               	goto	u1570
  2751  0DD7                     u1571:
  2752  0DD7  2DBC               	goto	l1925
  2753  0DD8                     u1570:
  2754  0DD8                     l213:
  2755  0DD8  0008               	return
  2756  0DD9                     __end_of_printACK:
  2757                           
  2758                           	psect	text8
  2759  0CD8                     __ptext8:	
  2760 ;; *************** function _isResOn *****************
  2761 ;; Defined at:
  2762 ;;		line 297 in file "../../Lab2/AQC1.X/main.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  2    2[COMMON] int 
  2769 ;; Registers used:
  2770 ;;		wreg, status,2
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2776 ;;      Params:         2       0       0       0       0
  2777 ;;      Locals:         0       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0
  2779 ;;      Totals:         2       0       0       0       0
  2780 ;;Total ram usage:        2 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 1
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_main
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           
  2791                           ;psect for function _isResOn
  2792  0CD8                     _isResOn:
  2793  0CD8                     l1791:	
  2794                           ;incstack = 0
  2795                           ; Regs used in _isResOn: [wreg+status,2]
  2796                           
  2797                           
  2798                           ;../../Lab2/AQC1.X/main.c: 298:     if(PORTCbits.RC5)
  2799  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  2800  0CD9  1303               	bcf	3,6	;RP1=0, select bank0
  2801  0CDA  1E87               	btfss	7,5	;volatile
  2802  0CDB  2CDD               	goto	u1271
  2803  0CDC  2CDE               	goto	u1270
  2804  0CDD                     u1271:
  2805  0CDD  2CE3               	goto	l1797
  2806  0CDE                     u1270:
  2807  0CDE                     l1793:
  2808                           
  2809                           ;../../Lab2/AQC1.X/main.c: 299:         return 1;
  2810  0CDE  3001               	movlw	1
  2811  0CDF  00F2               	movwf	?_isResOn
  2812  0CE0  3000               	movlw	0
  2813  0CE1  00F3               	movwf	?_isResOn+1
  2814  0CE2  2CE5               	goto	l161
  2815  0CE3                     l1797:
  2816                           
  2817                           ;../../Lab2/AQC1.X/main.c: 300:     return 0;
  2818  0CE3  01F2               	clrf	?_isResOn
  2819  0CE4  01F3               	clrf	?_isResOn+1
  2820  0CE5                     l161:
  2821  0CE5  0008               	return
  2822  0CE6                     __end_of_isResOn:
  2823                           
  2824                           	psect	text9
  2825  061D                     __ptext9:	
  2826 ;; *************** function _checkLeds *****************
  2827 ;; Defined at:
  2828 ;;		line 318 in file "../../Lab2/AQC1.X/main.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;		None
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  c               2    0        int 
  2833 ;;  lux_value       2   27[BANK0 ] int 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2843 ;;      Params:         0       0       0       0       0
  2844 ;;      Locals:         0       2       0       0       0
  2845 ;;      Temps:          0       3       0       0       0
  2846 ;;      Totals:         0       5       0       0       0
  2847 ;;Total ram usage:        5 bytes
  2848 ;; Hardware stack levels used: 1
  2849 ;; Hardware stack levels required when called: 4
  2850 ;; This function calls:
  2851 ;;		_abs
  2852 ;;		_convertADC_0
  2853 ;;		_convertADC_1
  2854 ;;		_heatAlarm
  2855 ;;		_sendInfo
  2856 ;;		_sendUART
  2857 ;;		_setADC
  2858 ;;		_setADCRes
  2859 ;; This function is called by:
  2860 ;;		_main
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           
  2865                           ;psect for function _checkLeds
  2866  061D                     _checkLeds:
  2867  061D                     l1803:	
  2868                           ;incstack = 0
  2869                           ; Regs used in _checkLeds: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2870                           
  2871                           
  2872                           ;../../Lab2/AQC1.X/main.c: 320:     setADCRes();
  2873  061D  120A  158A  24CB  120A  118A  	fcall	_setADCRes
  2874  0622                     l1805:
  2875                           
  2876                           ;../../Lab2/AQC1.X/main.c: 321:     alarm = heatAlarm(50);
  2877  0622  3032               	movlw	50
  2878  0623  00F4               	movwf	heatAlarm@max_temp
  2879  0624  3000               	movlw	0
  2880  0625  00F5               	movwf	heatAlarm@max_temp+1
  2881  0626  120A  158A  2557  120A  118A  	fcall	_heatAlarm
  2882  062B  0875               	movf	?_heatAlarm+1,w
  2883  062C  1283               	bcf	3,5	;RP0=0, select bank0
  2884  062D  1303               	bcf	3,6	;RP1=0, select bank0
  2885  062E  00C7               	movwf	_alarm+1
  2886  062F  0874               	movf	?_heatAlarm,w
  2887  0630  00C6               	movwf	_alarm
  2888  0631                     l1807:
  2889                           
  2890                           ;../../Lab2/AQC1.X/main.c: 322:     setADC();
  2891  0631  120A  158A  24BE  120A  118A  	fcall	_setADC
  2892  0636                     l1809:
  2893                           
  2894                           ;../../Lab2/AQC1.X/main.c: 325:     if(!alarm){
  2895  0636  1283               	bcf	3,5	;RP0=0, select bank0
  2896  0637  1303               	bcf	3,6	;RP1=0, select bank0
  2897  0638  0846               	movf	_alarm,w
  2898  0639  0447               	iorwf	_alarm+1,w
  2899  063A  1D03               	btfss	3,2
  2900  063B  2E3D               	goto	u1281
  2901  063C  2E3E               	goto	u1280
  2902  063D                     u1281:
  2903  063D  2E3F               	goto	l1813
  2904  063E                     u1280:
  2905  063E                     l1811:
  2906                           
  2907                           ;../../Lab2/AQC1.X/main.c: 326:         PORTBbits.RB1 = 0;
  2908  063E  1086               	bcf	6,1	;volatile
  2909  063F                     l1813:
  2910                           
  2911                           ;../../Lab2/AQC1.X/main.c: 328:     if(!standby){
  2912  063F  0848               	movf	_standby,w
  2913  0640  0449               	iorwf	_standby+1,w
  2914  0641  1D03               	btfss	3,2
  2915  0642  2E44               	goto	u1291
  2916  0643  2E45               	goto	u1290
  2917  0644                     u1291:
  2918  0644  2E46               	goto	l1817
  2919  0645                     u1290:
  2920  0645                     l1815:
  2921                           
  2922                           ;../../Lab2/AQC1.X/main.c: 329:         PORTBbits.RB2 = 0;
  2923  0645  1106               	bcf	6,2	;volatile
  2924  0646                     l1817:
  2925                           
  2926                           ;../../Lab2/AQC1.X/main.c: 333:     int lux_value = abs(convertADC_0() - convertADC_1())
      +                          ;
  2927  0646  120A  158A  2507  120A  118A  	fcall	_convertADC_0
  2928  064B  0872               	movf	?_convertADC_0,w
  2929  064C  1283               	bcf	3,5	;RP0=0, select bank0
  2930  064D  1303               	bcf	3,6	;RP1=0, select bank0
  2931  064E  00B8               	movwf	??_checkLeds
  2932  064F  0873               	movf	?_convertADC_0+1,w
  2933  0650  00B9               	movwf	??_checkLeds+1
  2934  0651  120A  158A  2518  120A  118A  	fcall	_convertADC_1
  2935  0656  0872               	movf	?_convertADC_1,w
  2936  0657  1283               	bcf	3,5	;RP0=0, select bank0
  2937  0658  1303               	bcf	3,6	;RP1=0, select bank0
  2938  0659  0238               	subwf	??_checkLeds,w
  2939  065A  00F4               	movwf	abs@a
  2940  065B  0873               	movf	?_convertADC_1+1,w
  2941  065C  1C03               	skipc
  2942  065D  0A73               	incf	?_convertADC_1+1,w
  2943  065E  0239               	subwf	??_checkLeds+1,w
  2944  065F  00F5               	movwf	abs@a+1
  2945  0660  120A  158A  24F6  120A  118A  	fcall	_abs
  2946  0665  0875               	movf	?_abs+1,w
  2947  0666  1283               	bcf	3,5	;RP0=0, select bank0
  2948  0667  1303               	bcf	3,6	;RP1=0, select bank0
  2949  0668  00BC               	movwf	checkLeds@lux_value+1
  2950  0669  0874               	movf	?_abs,w
  2951  066A  00BB               	movwf	checkLeds@lux_value
  2952  066B                     l1819:
  2953                           
  2954                           ;../../Lab2/AQC1.X/main.c: 335:     if(!standby && !alarm){
  2955  066B  0848               	movf	_standby,w
  2956  066C  0449               	iorwf	_standby+1,w
  2957  066D  1D03               	btfss	3,2
  2958  066E  2E70               	goto	u1301
  2959  066F  2E71               	goto	u1300
  2960  0670                     u1301:
  2961  0670  2F7C               	goto	l176
  2962  0671                     u1300:
  2963  0671                     l1821:
  2964  0671  0846               	movf	_alarm,w
  2965  0672  0447               	iorwf	_alarm+1,w
  2966  0673  1D03               	btfss	3,2
  2967  0674  2E76               	goto	u1311
  2968  0675  2E77               	goto	u1310
  2969  0676                     u1311:
  2970  0676  2F7C               	goto	l176
  2971  0677                     u1310:
  2972  0677                     l1823:
  2973                           
  2974                           ;../../Lab2/AQC1.X/main.c: 337:         if(convertADC_0() > low_light_value || convertAD
      +                          C_1() > low_light_value )
  2975  0677  120A  158A  2507  120A  118A  	fcall	_convertADC_0
  2976  067C  0873               	movf	?_convertADC_0+1,w
  2977  067D  1283               	bcf	3,5	;RP0=0, select bank0
  2978  067E  1303               	bcf	3,6	;RP1=0, select bank0
  2979  067F  0240               	subwf	_low_light_value+1,w
  2980  0680  1D03               	skipz
  2981  0681  2E84               	goto	u1325
  2982  0682  0872               	movf	?_convertADC_0,w
  2983  0683  023F               	subwf	_low_light_value,w
  2984  0684                     u1325:
  2985  0684  1C03               	skipc
  2986  0685  2E87               	goto	u1321
  2987  0686  2E88               	goto	u1320
  2988  0687                     u1321:
  2989  0687  2E99               	goto	l1827
  2990  0688                     u1320:
  2991  0688                     l1825:
  2992  0688  120A  158A  2518  120A  118A  	fcall	_convertADC_1
  2993  068D  0873               	movf	?_convertADC_1+1,w
  2994  068E  1283               	bcf	3,5	;RP0=0, select bank0
  2995  068F  1303               	bcf	3,6	;RP1=0, select bank0
  2996  0690  0240               	subwf	_low_light_value+1,w
  2997  0691  1D03               	skipz
  2998  0692  2E95               	goto	u1335
  2999  0693  0872               	movf	?_convertADC_1,w
  3000  0694  023F               	subwf	_low_light_value,w
  3001  0695                     u1335:
  3002  0695  1803               	skipnc
  3003  0696  2E98               	goto	u1331
  3004  0697  2E99               	goto	u1330
  3005  0698                     u1331:
  3006  0698  2F56               	goto	l177
  3007  0699                     u1330:
  3008  0699                     l1827:
  3009                           
  3010                           ;../../Lab2/AQC1.X/main.c: 338:         {;../../Lab2/AQC1.X/main.c: 339:             if(
      +                           lux_value < lux_value_cfg){
  3011  0699  0842               	movf	_lux_value_cfg+1,w
  3012  069A  023C               	subwf	checkLeds@lux_value+1,w
  3013  069B  1D03               	skipz
  3014  069C  2E9F               	goto	u1345
  3015  069D  0841               	movf	_lux_value_cfg,w
  3016  069E  023B               	subwf	checkLeds@lux_value,w
  3017  069F                     u1345:
  3018  069F  1803               	skipnc
  3019  06A0  2EA2               	goto	u1341
  3020  06A1  2EA3               	goto	u1340
  3021  06A2                     u1341:
  3022  06A2  2EC8               	goto	l1843
  3023  06A3                     u1340:
  3024  06A3                     l1829:
  3025                           
  3026                           ;../../Lab2/AQC1.X/main.c: 341:                 PORTBbits.RB6 = 0;
  3027  06A3  1306               	bcf	6,6	;volatile
  3028                           
  3029                           ;../../Lab2/AQC1.X/main.c: 342:                 PORTBbits.RB7 = 0;
  3030  06A4  1386               	bcf	6,7	;volatile
  3031  06A5                     l1831:
  3032                           
  3033                           ;../../Lab2/AQC1.X/main.c: 343:               if(monitoring && (motion == 'E' || motion 
      +                          == 'D')){
  3034  06A5  0843               	movf	_monitoring,w
  3035  06A6  0444               	iorwf	_monitoring+1,w
  3036  06A7  1903               	btfsc	3,2
  3037  06A8  2EAA               	goto	u1351
  3038  06A9  2EAB               	goto	u1350
  3039  06AA                     u1351:
  3040  06AA  2FD6               	goto	l207
  3041  06AB                     u1350:
  3042  06AB                     l1833:
  3043  06AB  3045               	movlw	69
  3044  06AC  0645               	xorwf	_motion,w
  3045  06AD  1903               	btfsc	3,2
  3046  06AE  2EB0               	goto	u1361
  3047  06AF  2EB1               	goto	u1360
  3048  06B0                     u1361:
  3049  06B0  2EB7               	goto	l1837
  3050  06B1                     u1360:
  3051  06B1                     l1835:
  3052  06B1  3044               	movlw	68
  3053  06B2  0645               	xorwf	_motion,w
  3054  06B3  1D03               	btfss	3,2
  3055  06B4  2EB6               	goto	u1371
  3056  06B5  2EB7               	goto	u1370
  3057  06B6                     u1371:
  3058  06B6  2FD6               	goto	l207
  3059  06B7                     u1370:
  3060  06B7                     l1837:
  3061                           
  3062                           ;../../Lab2/AQC1.X/main.c: 344:                 motion = 'P';
  3063  06B7  3050               	movlw	80
  3064  06B8  00B8               	movwf	??_checkLeds
  3065  06B9  0838               	movf	??_checkLeds,w
  3066  06BA  00C5               	movwf	_motion
  3067  06BB                     l1839:
  3068                           
  3069                           ;../../Lab2/AQC1.X/main.c: 345:                 sendInfo(motion);
  3070  06BB  0845               	movf	_motion,w
  3071  06BC  120A  118A  232D  120A  118A  	fcall	_sendInfo
  3072  06C1                     l1841:
  3073                           
  3074                           ;../../Lab2/AQC1.X/main.c: 346:                 sendUART('\n');
  3075  06C1  300A               	movlw	10
  3076  06C2  120A  158A  24A8  120A  118A  	fcall	_sendUART
  3077  06C7  2FD6               	goto	l207
  3078  06C8                     l1843:
  3079  06C8  120A  158A  2518  120A  118A  	fcall	_convertADC_1
  3080  06CD  0872               	movf	?_convertADC_1,w
  3081  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  3082  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  3083  06D0  00B8               	movwf	??_checkLeds
  3084  06D1  0873               	movf	?_convertADC_1+1,w
  3085  06D2  00B9               	movwf	??_checkLeds+1
  3086  06D3  120A  158A  2507  120A  118A  	fcall	_convertADC_0
  3087  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  3088  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  3089  06DA  0839               	movf	??_checkLeds+1,w
  3090  06DB  3A80               	xorlw	128
  3091  06DC  00BA               	movwf	??_checkLeds+2
  3092  06DD  0873               	movf	?_convertADC_0+1,w
  3093  06DE  3A80               	xorlw	128
  3094  06DF  023A               	subwf	??_checkLeds+2,w
  3095  06E0  1D03               	skipz
  3096  06E1  2EE4               	goto	u1385
  3097  06E2  0872               	movf	?_convertADC_0,w
  3098  06E3  0238               	subwf	??_checkLeds,w
  3099  06E4                     u1385:
  3100  06E4  1803               	skipnc
  3101  06E5  2EE7               	goto	u1381
  3102  06E6  2EE8               	goto	u1380
  3103  06E7                     u1381:
  3104  06E7  2F0F               	goto	l1859
  3105  06E8                     u1380:
  3106  06E8                     l1845:
  3107                           
  3108                           ;../../Lab2/AQC1.X/main.c: 351:                 PORTBbits.RB6 = 1;
  3109  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  3110  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  3111  06EA  1706               	bsf	6,6	;volatile
  3112                           
  3113                           ;../../Lab2/AQC1.X/main.c: 352:                 PORTBbits.RB7 = 0;
  3114  06EB  1386               	bcf	6,7	;volatile
  3115  06EC                     l1847:
  3116                           
  3117                           ;../../Lab2/AQC1.X/main.c: 354:               if(monitoring && (motion == 'P' || motion 
      +                          == 'D')){
  3118  06EC  0843               	movf	_monitoring,w
  3119  06ED  0444               	iorwf	_monitoring+1,w
  3120  06EE  1903               	btfsc	3,2
  3121  06EF  2EF1               	goto	u1391
  3122  06F0  2EF2               	goto	u1390
  3123  06F1                     u1391:
  3124  06F1  2FD6               	goto	l207
  3125  06F2                     u1390:
  3126  06F2                     l1849:
  3127  06F2  3050               	movlw	80
  3128  06F3  0645               	xorwf	_motion,w
  3129  06F4  1903               	btfsc	3,2
  3130  06F5  2EF7               	goto	u1401
  3131  06F6  2EF8               	goto	u1400
  3132  06F7                     u1401:
  3133  06F7  2EFE               	goto	l1853
  3134  06F8                     u1400:
  3135  06F8                     l1851:
  3136  06F8  3044               	movlw	68
  3137  06F9  0645               	xorwf	_motion,w
  3138  06FA  1D03               	btfss	3,2
  3139  06FB  2EFD               	goto	u1411
  3140  06FC  2EFE               	goto	u1410
  3141  06FD                     u1411:
  3142  06FD  2FD6               	goto	l207
  3143  06FE                     u1410:
  3144  06FE                     l1853:
  3145                           
  3146                           ;../../Lab2/AQC1.X/main.c: 355:                 motion = 'E';
  3147  06FE  3045               	movlw	69
  3148  06FF  00B8               	movwf	??_checkLeds
  3149  0700  0838               	movf	??_checkLeds,w
  3150  0701  00C5               	movwf	_motion
  3151  0702                     l1855:
  3152                           
  3153                           ;../../Lab2/AQC1.X/main.c: 356:                 sendInfo(motion);
  3154  0702  0845               	movf	_motion,w
  3155  0703  120A  118A  232D  120A  118A  	fcall	_sendInfo
  3156  0708                     l1857:
  3157                           
  3158                           ;../../Lab2/AQC1.X/main.c: 357:                 sendUART('\n');
  3159  0708  300A               	movlw	10
  3160  0709  120A  158A  24A8  120A  118A  	fcall	_sendUART
  3161  070E  2FD6               	goto	l207
  3162  070F                     l1859:
  3163  070F  120A  158A  2507  120A  118A  	fcall	_convertADC_0
  3164  0714  0872               	movf	?_convertADC_0,w
  3165  0715  1283               	bcf	3,5	;RP0=0, select bank0
  3166  0716  1303               	bcf	3,6	;RP1=0, select bank0
  3167  0717  00B8               	movwf	??_checkLeds
  3168  0718  0873               	movf	?_convertADC_0+1,w
  3169  0719  00B9               	movwf	??_checkLeds+1
  3170  071A  120A  158A  2518  120A  118A  	fcall	_convertADC_1
  3171  071F  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0720  1303               	bcf	3,6	;RP1=0, select bank0
  3173  0721  0839               	movf	??_checkLeds+1,w
  3174  0722  3A80               	xorlw	128
  3175  0723  00BA               	movwf	??_checkLeds+2
  3176  0724  0873               	movf	?_convertADC_1+1,w
  3177  0725  3A80               	xorlw	128
  3178  0726  023A               	subwf	??_checkLeds+2,w
  3179  0727  1D03               	skipz
  3180  0728  2F2B               	goto	u1425
  3181  0729  0872               	movf	?_convertADC_1,w
  3182  072A  0238               	subwf	??_checkLeds,w
  3183  072B                     u1425:
  3184  072B  1803               	skipnc
  3185  072C  2F2E               	goto	u1421
  3186  072D  2F2F               	goto	u1420
  3187  072E                     u1421:
  3188  072E  2F7B               	goto	l194
  3189  072F                     u1420:
  3190  072F                     l1861:
  3191                           
  3192                           ;../../Lab2/AQC1.X/main.c: 363:                 PORTBbits.RB6 = 0;
  3193  072F  1283               	bcf	3,5	;RP0=0, select bank0
  3194  0730  1303               	bcf	3,6	;RP1=0, select bank0
  3195  0731  1306               	bcf	6,6	;volatile
  3196                           
  3197                           ;../../Lab2/AQC1.X/main.c: 364:                 PORTBbits.RB7 = 1;
  3198  0732  1786               	bsf	6,7	;volatile
  3199  0733                     l1863:
  3200                           
  3201                           ;../../Lab2/AQC1.X/main.c: 365:                   if(monitoring && (motion == 'E' || mot
      +                          ion == 'P')){
  3202  0733  0843               	movf	_monitoring,w
  3203  0734  0444               	iorwf	_monitoring+1,w
  3204  0735  1903               	btfsc	3,2
  3205  0736  2F38               	goto	u1431
  3206  0737  2F39               	goto	u1430
  3207  0738                     u1431:
  3208  0738  2F7B               	goto	l194
  3209  0739                     u1430:
  3210  0739                     l1865:
  3211  0739  3045               	movlw	69
  3212  073A  0645               	xorwf	_motion,w
  3213  073B  1903               	btfsc	3,2
  3214  073C  2F3E               	goto	u1441
  3215  073D  2F3F               	goto	u1440
  3216  073E                     u1441:
  3217  073E  2F45               	goto	l1869
  3218  073F                     u1440:
  3219  073F                     l1867:
  3220  073F  3050               	movlw	80
  3221  0740  0645               	xorwf	_motion,w
  3222  0741  1D03               	btfss	3,2
  3223  0742  2F44               	goto	u1451
  3224  0743  2F45               	goto	u1450
  3225  0744                     u1451:
  3226  0744  2F7B               	goto	l194
  3227  0745                     u1450:
  3228  0745                     l1869:
  3229                           
  3230                           ;../../Lab2/AQC1.X/main.c: 366:                     motion = 'D';
  3231  0745  3044               	movlw	68
  3232  0746  00B8               	movwf	??_checkLeds
  3233  0747  0838               	movf	??_checkLeds,w
  3234  0748  00C5               	movwf	_motion
  3235  0749                     l1871:
  3236                           
  3237                           ;../../Lab2/AQC1.X/main.c: 367:                     sendInfo(motion);
  3238  0749  0845               	movf	_motion,w
  3239  074A  120A  118A  232D  120A  118A  	fcall	_sendInfo
  3240  074F                     l1873:
  3241                           
  3242                           ;../../Lab2/AQC1.X/main.c: 368:                     sendUART('\n');
  3243  074F  300A               	movlw	10
  3244  0750  120A  158A  24A8  120A  118A  	fcall	_sendUART
  3245  0755  2FD6               	goto	l207
  3246  0756                     l177:	
  3247                           ;../../Lab2/AQC1.X/main.c: 373:         else{
  3248                           
  3249                           
  3250                           ;../../Lab2/AQC1.X/main.c: 374:             PORTBbits.RB6 = 0;
  3251  0756  1306               	bcf	6,6	;volatile
  3252                           
  3253                           ;../../Lab2/AQC1.X/main.c: 375:             PORTBbits.RB7 = 0;
  3254  0757  1386               	bcf	6,7	;volatile
  3255  0758                     l1875:
  3256                           
  3257                           ;../../Lab2/AQC1.X/main.c: 377:             if(monitoring && (motion == 'E' || motion ==
      +                           'D')){
  3258  0758  0843               	movf	_monitoring,w
  3259  0759  0444               	iorwf	_monitoring+1,w
  3260  075A  1903               	btfsc	3,2
  3261  075B  2F5D               	goto	u1461
  3262  075C  2F5E               	goto	u1460
  3263  075D                     u1461:
  3264  075D  2FD6               	goto	l207
  3265  075E                     u1460:
  3266  075E                     l1877:
  3267  075E  3045               	movlw	69
  3268  075F  0645               	xorwf	_motion,w
  3269  0760  1903               	btfsc	3,2
  3270  0761  2F63               	goto	u1471
  3271  0762  2F64               	goto	u1470
  3272  0763                     u1471:
  3273  0763  2F6A               	goto	l1881
  3274  0764                     u1470:
  3275  0764                     l1879:
  3276  0764  3044               	movlw	68
  3277  0765  0645               	xorwf	_motion,w
  3278  0766  1D03               	btfss	3,2
  3279  0767  2F69               	goto	u1481
  3280  0768  2F6A               	goto	u1480
  3281  0769                     u1481:
  3282  0769  2FD6               	goto	l207
  3283  076A                     u1480:
  3284  076A                     l1881:
  3285                           
  3286                           ;../../Lab2/AQC1.X/main.c: 378:                 motion = 'P';
  3287  076A  3050               	movlw	80
  3288  076B  00B8               	movwf	??_checkLeds
  3289  076C  0838               	movf	??_checkLeds,w
  3290  076D  00C5               	movwf	_motion
  3291  076E                     l1883:
  3292                           
  3293                           ;../../Lab2/AQC1.X/main.c: 379:                 sendInfo('N');
  3294  076E  304E               	movlw	78
  3295  076F  120A  118A  232D  120A  118A  	fcall	_sendInfo
  3296  0774                     l1885:
  3297                           
  3298                           ;../../Lab2/AQC1.X/main.c: 380:                 sendUART('\n');
  3299  0774  300A               	movlw	10
  3300  0775  120A  158A  24A8  120A  118A  	fcall	_sendUART
  3301  077A  2FD6               	goto	l207
  3302  077B                     l194:	
  3303                           ;../../Lab2/AQC1.X/main.c: 382:         }
  3304                           
  3305                           
  3306                           ;../../Lab2/AQC1.X/main.c: 385:     }
  3307  077B  2FD6               	goto	l207
  3308  077C                     l176:	
  3309                           ;../../Lab2/AQC1.X/main.c: 386:     else{
  3310                           
  3311                           
  3312                           ;../../Lab2/AQC1.X/main.c: 387:         PORTBbits.RB6 = 0;
  3313  077C  1306               	bcf	6,6	;volatile
  3314                           
  3315                           ;../../Lab2/AQC1.X/main.c: 388:         PORTBbits.RB7 = 0;
  3316  077D  1386               	bcf	6,7	;volatile
  3317  077E                     l1887:
  3318                           
  3319                           ;../../Lab2/AQC1.X/main.c: 390:         if(standby){
  3320  077E  0848               	movf	_standby,w
  3321  077F  0449               	iorwf	_standby+1,w
  3322  0780  1903               	btfsc	3,2
  3323  0781  2F83               	goto	u1491
  3324  0782  2F84               	goto	u1490
  3325  0783                     u1491:
  3326  0783  2FA7               	goto	l1903
  3327  0784                     u1490:
  3328  0784                     l1889:
  3329                           
  3330                           ;../../Lab2/AQC1.X/main.c: 391:             int c;;../../Lab2/AQC1.X/main.c: 393:       
      +                                PORTBbits.RB2 = 1;
  3331  0784  1506               	bsf	6,2	;volatile
  3332  0785                     l1891:
  3333                           
  3334                           ;../../Lab2/AQC1.X/main.c: 395:            if(monitoring && (motion == 'E' || motion == 
      +                          'D')){
  3335  0785  0843               	movf	_monitoring,w
  3336  0786  0444               	iorwf	_monitoring+1,w
  3337  0787  1903               	btfsc	3,2
  3338  0788  2F8A               	goto	u1501
  3339  0789  2F8B               	goto	u1500
  3340  078A                     u1501:
  3341  078A  2FA7               	goto	l1903
  3342  078B                     u1500:
  3343  078B                     l1893:
  3344  078B  3045               	movlw	69
  3345  078C  0645               	xorwf	_motion,w
  3346  078D  1903               	btfsc	3,2
  3347  078E  2F90               	goto	u1511
  3348  078F  2F91               	goto	u1510
  3349  0790                     u1511:
  3350  0790  2F97               	goto	l1897
  3351  0791                     u1510:
  3352  0791                     l1895:
  3353  0791  3044               	movlw	68
  3354  0792  0645               	xorwf	_motion,w
  3355  0793  1D03               	btfss	3,2
  3356  0794  2F96               	goto	u1521
  3357  0795  2F97               	goto	u1520
  3358  0796                     u1521:
  3359  0796  2FA7               	goto	l1903
  3360  0797                     u1520:
  3361  0797                     l1897:
  3362                           
  3363                           ;../../Lab2/AQC1.X/main.c: 396:                 motion = 'P';
  3364  0797  3050               	movlw	80
  3365  0798  00B8               	movwf	??_checkLeds
  3366  0799  0838               	movf	??_checkLeds,w
  3367  079A  00C5               	movwf	_motion
  3368  079B                     l1899:
  3369                           
  3370                           ;../../Lab2/AQC1.X/main.c: 397:                 sendInfo('S');
  3371  079B  3053               	movlw	83
  3372  079C  120A  118A  232D  120A  118A  	fcall	_sendInfo
  3373  07A1                     l1901:
  3374                           
  3375                           ;../../Lab2/AQC1.X/main.c: 398:                 sendUART('\n');
  3376  07A1  300A               	movlw	10
  3377  07A2  120A  158A  24A8  120A  118A  	fcall	_sendUART
  3378  07A7                     l1903:
  3379                           
  3380                           ;../../Lab2/AQC1.X/main.c: 401:         if(alarm){
  3381  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  3382  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  3383  07A9  0846               	movf	_alarm,w
  3384  07AA  0447               	iorwf	_alarm+1,w
  3385  07AB  1903               	btfsc	3,2
  3386  07AC  2FAE               	goto	u1531
  3387  07AD  2FAF               	goto	u1530
  3388  07AE                     u1531:
  3389  07AE  2FD6               	goto	l207
  3390  07AF                     u1530:
  3391  07AF                     l1905:
  3392                           
  3393                           ;../../Lab2/AQC1.X/main.c: 403:             PORTBbits.RB1 = 1;
  3394  07AF  1486               	bsf	6,1	;volatile
  3395  07B0                     l1907:
  3396                           
  3397                           ;../../Lab2/AQC1.X/main.c: 404:             standby = 1;
  3398  07B0  3001               	movlw	1
  3399  07B1  00C8               	movwf	_standby
  3400  07B2  3000               	movlw	0
  3401  07B3  00C9               	movwf	_standby+1
  3402  07B4                     l1909:
  3403                           
  3404                           ;../../Lab2/AQC1.X/main.c: 405:             if(monitoring && (motion == 'E' || motion ==
      +                           'D')){
  3405  07B4  0843               	movf	_monitoring,w
  3406  07B5  0444               	iorwf	_monitoring+1,w
  3407  07B6  1903               	btfsc	3,2
  3408  07B7  2FB9               	goto	u1541
  3409  07B8  2FBA               	goto	u1540
  3410  07B9                     u1541:
  3411  07B9  2FD6               	goto	l207
  3412  07BA                     u1540:
  3413  07BA                     l1911:
  3414  07BA  3045               	movlw	69
  3415  07BB  0645               	xorwf	_motion,w
  3416  07BC  1903               	btfsc	3,2
  3417  07BD  2FBF               	goto	u1551
  3418  07BE  2FC0               	goto	u1550
  3419  07BF                     u1551:
  3420  07BF  2FC6               	goto	l1915
  3421  07C0                     u1550:
  3422  07C0                     l1913:
  3423  07C0  3044               	movlw	68
  3424  07C1  0645               	xorwf	_motion,w
  3425  07C2  1D03               	btfss	3,2
  3426  07C3  2FC5               	goto	u1561
  3427  07C4  2FC6               	goto	u1560
  3428  07C5                     u1561:
  3429  07C5  2FD6               	goto	l207
  3430  07C6                     u1560:
  3431  07C6                     l1915:
  3432                           
  3433                           ;../../Lab2/AQC1.X/main.c: 406:                 motion = 'P';
  3434  07C6  3050               	movlw	80
  3435  07C7  00B8               	movwf	??_checkLeds
  3436  07C8  0838               	movf	??_checkLeds,w
  3437  07C9  00C5               	movwf	_motion
  3438  07CA                     l1917:
  3439                           
  3440                           ;../../Lab2/AQC1.X/main.c: 407:                 sendInfo('A');
  3441  07CA  3041               	movlw	65
  3442  07CB  120A  118A  232D  120A  118A  	fcall	_sendInfo
  3443  07D0                     l1919:
  3444                           
  3445                           ;../../Lab2/AQC1.X/main.c: 408:                 sendUART('\n');
  3446  07D0  300A               	movlw	10
  3447  07D1  120A  158A  24A8  120A  118A  	fcall	_sendUART
  3448  07D6                     l207:
  3449  07D6  0008               	return
  3450  07D7                     __end_of_checkLeds:
  3451                           
  3452                           	psect	text10
  3453  0CCB                     __ptext10:	
  3454 ;; *************** function _setADCRes *****************
  3455 ;; Defined at:
  3456 ;;		line 127 in file "../../Lab2/AQC1.X/main.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;		None
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;		None
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  1    wreg      void 
  3463 ;; Registers used:
  3464 ;;		None
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3470 ;;      Params:         0       0       0       0       0
  3471 ;;      Locals:         0       0       0       0       0
  3472 ;;      Temps:          0       0       0       0       0
  3473 ;;      Totals:         0       0       0       0       0
  3474 ;;Total ram usage:        0 bytes
  3475 ;; Hardware stack levels used: 1
  3476 ;; Hardware stack levels required when called: 1
  3477 ;; This function calls:
  3478 ;;		Nothing
  3479 ;; This function is called by:
  3480 ;;		_checkLeds
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           
  3485                           ;psect for function _setADCRes
  3486  0CCB                     _setADCRes:
  3487  0CCB                     l1683:	
  3488                           ;incstack = 0
  3489                           ; Regs used in _setADCRes: []
  3490                           
  3491                           
  3492                           ;../../Lab2/AQC1.X/main.c: 128:     ADCON1bits.PCFG3 = 0;
  3493  0CCB  1683               	bsf	3,5	;RP0=1, select bank1
  3494  0CCC  1303               	bcf	3,6	;RP1=0, select bank1
  3495  0CCD  119F               	bcf	31,3	;volatile
  3496                           
  3497                           ;../../Lab2/AQC1.X/main.c: 129:     ADCON1bits.PCFG2 = 0;
  3498  0CCE  111F               	bcf	31,2	;volatile
  3499                           
  3500                           ;../../Lab2/AQC1.X/main.c: 130:     ADCON1bits.PCFG1 = 0;
  3501  0CCF  109F               	bcf	31,1	;volatile
  3502                           
  3503                           ;../../Lab2/AQC1.X/main.c: 131:     ADCON1bits.PCFG0 = 0;
  3504  0CD0  101F               	bcf	31,0	;volatile
  3505                           
  3506                           ;../../Lab2/AQC1.X/main.c: 132:     ADCON1bits.ADFM = 1;
  3507  0CD1  179F               	bsf	31,7	;volatile
  3508                           
  3509                           ;../../Lab2/AQC1.X/main.c: 133:     ADCON0bits.ADCS0 = 0;
  3510  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  3511  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  3512  0CD4  131F               	bcf	31,6	;volatile
  3513                           
  3514                           ;../../Lab2/AQC1.X/main.c: 134:     ADCON0bits.ADCS1 = 0;
  3515  0CD5  139F               	bcf	31,7	;volatile
  3516                           
  3517                           ;../../Lab2/AQC1.X/main.c: 135:     ADCON0bits.ADON = 1;
  3518  0CD6  141F               	bsf	31,0	;volatile
  3519  0CD7                     l86:
  3520  0CD7  0008               	return
  3521  0CD8                     __end_of_setADCRes:
  3522                           
  3523                           	psect	text11
  3524  0CBE                     __ptext11:	
  3525 ;; *************** function _setADC *****************
  3526 ;; Defined at:
  3527 ;;		line 115 in file "../../Lab2/AQC1.X/main.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;		None
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;		None
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  1    wreg      void 
  3534 ;; Registers used:
  3535 ;;		None
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3541 ;;      Params:         0       0       0       0       0
  3542 ;;      Locals:         0       0       0       0       0
  3543 ;;      Temps:          0       0       0       0       0
  3544 ;;      Totals:         0       0       0       0       0
  3545 ;;Total ram usage:        0 bytes
  3546 ;; Hardware stack levels used: 1
  3547 ;; Hardware stack levels required when called: 1
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		_checkLeds
  3552 ;;		_main
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           
  3557                           ;psect for function _setADC
  3558  0CBE                     _setADC:
  3559  0CBE                     l1681:	
  3560                           ;incstack = 0
  3561                           ; Regs used in _setADC: []
  3562                           
  3563                           
  3564                           ;../../Lab2/AQC1.X/main.c: 117:     ADCON1bits.PCFG3 = 0;
  3565  0CBE  1683               	bsf	3,5	;RP0=1, select bank1
  3566  0CBF  1303               	bcf	3,6	;RP1=0, select bank1
  3567  0CC0  119F               	bcf	31,3	;volatile
  3568                           
  3569                           ;../../Lab2/AQC1.X/main.c: 118:     ADCON1bits.PCFG2 = 1;
  3570  0CC1  151F               	bsf	31,2	;volatile
  3571                           
  3572                           ;../../Lab2/AQC1.X/main.c: 119:     ADCON1bits.PCFG1 = 0;
  3573  0CC2  109F               	bcf	31,1	;volatile
  3574                           
  3575                           ;../../Lab2/AQC1.X/main.c: 120:     ADCON1bits.PCFG0 = 0;
  3576  0CC3  101F               	bcf	31,0	;volatile
  3577                           
  3578                           ;../../Lab2/AQC1.X/main.c: 121:     ADCON1bits.ADFM = 1;
  3579  0CC4  179F               	bsf	31,7	;volatile
  3580                           
  3581                           ;../../Lab2/AQC1.X/main.c: 122:     ADCON0bits.ADCS0 = 0;
  3582  0CC5  1283               	bcf	3,5	;RP0=0, select bank0
  3583  0CC6  1303               	bcf	3,6	;RP1=0, select bank0
  3584  0CC7  131F               	bcf	31,6	;volatile
  3585                           
  3586                           ;../../Lab2/AQC1.X/main.c: 123:     ADCON0bits.ADCS1 = 0;
  3587  0CC8  139F               	bcf	31,7	;volatile
  3588                           
  3589                           ;../../Lab2/AQC1.X/main.c: 124:     ADCON0bits.ADON = 1;
  3590  0CC9  141F               	bsf	31,0	;volatile
  3591  0CCA                     l83:
  3592  0CCA  0008               	return
  3593  0CCB                     __end_of_setADC:
  3594                           
  3595                           	psect	text12
  3596  032D                     __ptext12:	
  3597 ;; *************** function _sendInfo *****************
  3598 ;; Defined at:
  3599 ;;		line 219 in file "../../Lab2/AQC1.X/main.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  info            1    wreg     unsigned char 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  info            1   60[BANK1 ] unsigned char 
  3604 ;;  c              60    0[BANK1 ] unsigned char [60]
  3605 ;;  i               2   61[BANK1 ] int 
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1    wreg      void 
  3608 ;; Registers used:
  3609 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3615 ;;      Params:         0       0       0       0       0
  3616 ;;      Locals:         0       0      63       0       0
  3617 ;;      Temps:          0       2       0       0       0
  3618 ;;      Totals:         0       2      63       0       0
  3619 ;;Total ram usage:       65 bytes
  3620 ;; Hardware stack levels used: 1
  3621 ;; Hardware stack levels required when called: 3
  3622 ;; This function calls:
  3623 ;;		_delay
  3624 ;;		_sendUART
  3625 ;;		_sprintf
  3626 ;; This function is called by:
  3627 ;;		_checkLeds
  3628 ;;		_main
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           
  3633                           ;psect for function _sendInfo
  3634  032D                     _sendInfo:
  3635                           
  3636                           ;incstack = 0
  3637                           ; Regs used in _sendInfo: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3638                           ;sendInfo@info stored from wreg
  3639  032D  1683               	bsf	3,5	;RP0=1, select bank1
  3640  032E  1303               	bcf	3,6	;RP1=0, select bank1
  3641  032F  00DC               	movwf	sendInfo@info^(0+128)
  3642  0330                     l1697:
  3643                           
  3644                           ;../../Lab2/AQC1.X/main.c: 220:     char c[60];;../../Lab2/AQC1.X/main.c: 221:     int i
      +                           = 0;
  3645  0330  01DD               	clrf	sendInfo@i^(0+128)
  3646  0331  01DE               	clrf	(sendInfo@i+1)^(0+128)
  3647                           
  3648                           ;../../Lab2/AQC1.X/main.c: 223:     switch (info){
  3649  0332  2B95               	goto	l1715
  3650  0333                     l1699:
  3651                           
  3652                           ;../../Lab2/AQC1.X/main.c: 225:             sprintf(c,"\n<info>\n\t<state><error><\\stat
      +                          e>\n<\\info>");break;
  3653  0333  30A0               	movlw	(low (sendInfo@c| 0))& (0+255)
  3654  0334  00A4               	movwf	sprintf@sp
  3655  0335  3000               	movlw	0
  3656  0336  00A5               	movwf	sprintf@sp+1
  3657  0337  30DC               	movlw	low (STR_3| (0+32768))
  3658  0338  00A6               	movwf	sprintf@f
  3659  0339  3085               	movlw	high (STR_3| (0+32768))
  3660  033A  00A7               	movwf	sprintf@f+1
  3661  033B  120A  158A  26E5  120A  118A  	fcall	_sprintf
  3662  0340  2BD4               	goto	l1723
  3663  0341                     l1701:
  3664                           
  3665                           ;../../Lab2/AQC1.X/main.c: 228:             sprintf(c,"\n<info>\n\t<state><Motor has sto
      +                          pped><\\state>\n<\\info>");break;
  3666  0341  30A0               	movlw	(low (sendInfo@c| 0))& (0+255)
  3667  0342  00A4               	movwf	sprintf@sp
  3668  0343  3000               	movlw	0
  3669  0344  00A5               	movwf	sprintf@sp+1
  3670  0345  3017               	movlw	low (STR_4| (0+32768))
  3671  0346  00A6               	movwf	sprintf@f
  3672  0347  3085               	movlw	high (STR_4| (0+32768))
  3673  0348  00A7               	movwf	sprintf@f+1
  3674  0349  120A  158A  26E5  120A  118A  	fcall	_sprintf
  3675  034E  2BD4               	goto	l1723
  3676  034F                     l1703:
  3677                           
  3678                           ;../../Lab2/AQC1.X/main.c: 231:             sprintf(c,"\n<info>\n\t<state><Motion to the
      +                           left><\\state>\n<\\info>");break;
  3679  034F  30A0               	movlw	(low (sendInfo@c| 0))& (0+255)
  3680  0350  00A4               	movwf	sprintf@sp
  3681  0351  3000               	movlw	0
  3682  0352  00A5               	movwf	sprintf@sp+1
  3683  0353  30E2               	movlw	low (STR_5| (0+32768))
  3684  0354  00A6               	movwf	sprintf@f
  3685  0355  3084               	movlw	high (STR_5| (0+32768))
  3686  0356  00A7               	movwf	sprintf@f+1
  3687  0357  120A  158A  26E5  120A  118A  	fcall	_sprintf
  3688  035C  2BD4               	goto	l1723
  3689  035D                     l1705:
  3690                           
  3691                           ;../../Lab2/AQC1.X/main.c: 234:             sprintf(c,"\n<info>\n\t<state><Motion to the
      +                           right><\\state>\n<\\info>");break;
  3692  035D  30A0               	movlw	(low (sendInfo@c| 0))& (0+255)
  3693  035E  00A4               	movwf	sprintf@sp
  3694  035F  3000               	movlw	0
  3695  0360  00A5               	movwf	sprintf@sp+1
  3696  0361  30AC               	movlw	low (STR_6| (0+32768))
  3697  0362  00A6               	movwf	sprintf@f
  3698  0363  3084               	movlw	high (STR_6| (0+32768))
  3699  0364  00A7               	movwf	sprintf@f+1
  3700  0365  120A  158A  26E5  120A  118A  	fcall	_sprintf
  3701  036A  2BD4               	goto	l1723
  3702  036B                     l1707:
  3703                           
  3704                           ;../../Lab2/AQC1.X/main.c: 237:             sprintf(c,"\n<info>\n\t<state><StandBy><\\st
      +                          ate>\n<\\info>");break;
  3705  036B  30A0               	movlw	(low (sendInfo@c| 0))& (0+255)
  3706  036C  00A4               	movwf	sprintf@sp
  3707  036D  3000               	movlw	0
  3708  036E  00A5               	movwf	sprintf@sp+1
  3709  036F  30B2               	movlw	low (STR_7| (0+32768))
  3710  0370  00A6               	movwf	sprintf@f
  3711  0371  3085               	movlw	high (STR_7| (0+32768))
  3712  0372  00A7               	movwf	sprintf@f+1
  3713  0373  120A  158A  26E5  120A  118A  	fcall	_sprintf
  3714  0378  2BD4               	goto	l1723
  3715  0379                     l1709:
  3716                           
  3717                           ;../../Lab2/AQC1.X/main.c: 240:             sprintf(c,"\n<info>\n\t<state><Motor over-he
      +                          ated><\\state>\n<\\info>");break;
  3718  0379  30A0               	movlw	(low (sendInfo@c| 0))& (0+255)
  3719  037A  00A4               	movwf	sprintf@sp
  3720  037B  3000               	movlw	0
  3721  037C  00A5               	movwf	sprintf@sp+1
  3722  037D  304B               	movlw	low (STR_8| (0+32768))
  3723  037E  00A6               	movwf	sprintf@f
  3724  037F  3085               	movlw	high (STR_8| (0+32768))
  3725  0380  00A7               	movwf	sprintf@f+1
  3726  0381  120A  158A  26E5  120A  118A  	fcall	_sprintf
  3727  0386  2BD4               	goto	l1723
  3728  0387                     l1711:
  3729                           
  3730                           ;../../Lab2/AQC1.X/main.c: 243:             sprintf(c,"\n<info>\n\t<state><Light is too 
      +                          low><\\state>\n<\\info>");break;
  3731  0387  30A0               	movlw	(low (sendInfo@c| 0))& (0+255)
  3732  0388  00A4               	movwf	sprintf@sp
  3733  0389  3000               	movlw	0
  3734  038A  00A5               	movwf	sprintf@sp+1
  3735  038B  307F               	movlw	low (STR_9| (0+32768))
  3736  038C  00A6               	movwf	sprintf@f
  3737  038D  3085               	movlw	high (STR_9| (0+32768))
  3738  038E  00A7               	movwf	sprintf@f+1
  3739  038F  120A  158A  26E5  120A  118A  	fcall	_sprintf
  3740  0394  2BD4               	goto	l1723
  3741  0395                     l1715:
  3742  0395  085C               	movf	sendInfo@info^(0+128),w
  3743  0396  1283               	bcf	3,5	;RP0=0, select bank0
  3744  0397  1303               	bcf	3,6	;RP1=0, select bank0
  3745  0398  00B6               	movwf	??_sendInfo
  3746  0399  01B7               	clrf	??_sendInfo+1
  3747                           
  3748                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3749                           ; Switch size 1, requested type "simple"
  3750                           ; Number of cases is 1, Range of values is 0 to 0
  3751                           ; switch strategies available:
  3752                           ; Name         Instructions Cycles
  3753                           ; simple_byte            4     3 (average)
  3754                           ; direct_byte           11     8 (fixed)
  3755                           ; jumptable            260     6 (fixed)
  3756                           ;	Chosen strategy is simple_byte
  3757  039A  0837               	movf	??_sendInfo+1,w
  3758  039B  3A00               	xorlw	0	; case 0
  3759  039C  1903               	skipnz
  3760  039D  2B9F               	goto	l2207
  3761  039E  2BD4               	goto	l1723
  3762  039F                     l2207:
  3763                           
  3764                           ; Switch size 1, requested type "simple"
  3765                           ; Number of cases is 7, Range of values is 65 to 101
  3766                           ; switch strategies available:
  3767                           ; Name         Instructions Cycles
  3768                           ; simple_byte           22    12 (average)
  3769                           ; direct_byte          122    11 (fixed)
  3770                           ; jumptable            263     9 (fixed)
  3771                           ;	Chosen strategy is simple_byte
  3772  039F  0836               	movf	??_sendInfo,w
  3773  03A0  3A41               	xorlw	65	; case 65
  3774  03A1  1903               	skipnz
  3775  03A2  2B79               	goto	l1709
  3776  03A3  3A05               	xorlw	5	; case 68
  3777  03A4  1903               	skipnz
  3778  03A5  2B5D               	goto	l1705
  3779  03A6  3A01               	xorlw	1	; case 69
  3780  03A7  1903               	skipnz
  3781  03A8  2B4F               	goto	l1703
  3782  03A9  3A0B               	xorlw	11	; case 78
  3783  03AA  1903               	skipnz
  3784  03AB  2B87               	goto	l1711
  3785  03AC  3A1E               	xorlw	30	; case 80
  3786  03AD  1903               	skipnz
  3787  03AE  2B41               	goto	l1701
  3788  03AF  3A03               	xorlw	3	; case 83
  3789  03B0  1903               	skipnz
  3790  03B1  2B6B               	goto	l1707
  3791  03B2  3A36               	xorlw	54	; case 101
  3792  03B3  1903               	skipnz
  3793  03B4  2B33               	goto	l1699
  3794  03B5  2BD4               	goto	l1723
  3795  03B6                     l1717:
  3796                           
  3797                           ;../../Lab2/AQC1.X/main.c: 248:         sendUART(c[i++]);
  3798  03B6  085D               	movf	sendInfo@i^(0+128),w
  3799  03B7  3EA0               	addlw	(low (sendInfo@c| 0))& (0+255)
  3800  03B8  0084               	movwf	4
  3801  03B9  0800               	movf	0,w
  3802  03BA  120A  158A  24A8  120A  118A  	fcall	_sendUART
  3803  03BF                     l1719:
  3804  03BF  3001               	movlw	1
  3805  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  3806  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  3807  03C2  07DD               	addwf	sendInfo@i^(0+128),f
  3808  03C3  1803               	skipnc
  3809  03C4  0ADE               	incf	(sendInfo@i+1)^(0+128),f
  3810  03C5  3000               	movlw	0
  3811  03C6  07DE               	addwf	(sendInfo@i+1)^(0+128),f
  3812  03C7                     l1721:
  3813                           
  3814                           ;../../Lab2/AQC1.X/main.c: 249:         delay(20);
  3815  03C7  3000               	movlw	0
  3816  03C8  00F5               	movwf	delay@n+3
  3817  03C9  3000               	movlw	0
  3818  03CA  00F4               	movwf	delay@n+2
  3819  03CB  3000               	movlw	0
  3820  03CC  00F3               	movwf	delay@n+1
  3821  03CD  3014               	movlw	20
  3822  03CE  00F2               	movwf	delay@n
  3823  03CF  120A  158A  2579  120A  118A  	fcall	_delay
  3824  03D4                     l1723:
  3825                           
  3826                           ;../../Lab2/AQC1.X/main.c: 246:     while(c[i]){
  3827  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  3828  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  3829  03D6  085D               	movf	sendInfo@i^(0+128),w
  3830  03D7  3EA0               	addlw	(low (sendInfo@c| 0))& (0+255)
  3831  03D8  0084               	movwf	4
  3832  03D9  1383               	bcf	3,7	;select IRP bank1
  3833  03DA  0800               	movf	0,w
  3834  03DB  1D03               	btfss	3,2
  3835  03DC  2BDE               	goto	u1191
  3836  03DD  2BDF               	goto	u1190
  3837  03DE                     u1191:
  3838  03DE  2BB6               	goto	l1717
  3839  03DF                     u1190:
  3840  03DF                     l1725:
  3841                           
  3842                           ;../../Lab2/AQC1.X/main.c: 251:     sendUART('\n');
  3843  03DF  300A               	movlw	10
  3844  03E0  120A  158A  24A8  120A  118A  	fcall	_sendUART
  3845  03E5                     l143:
  3846  03E5  0008               	return
  3847  03E6                     __end_of_sendInfo:
  3848                           
  3849                           	psect	text13
  3850  0EE5                     __ptext13:	
  3851 ;; *************** function _sprintf *****************
  3852 ;; Defined at:
  3853 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  sp              2    4[BANK0 ] PTR unsigned char 
  3856 ;;		 -> printACK@frase(65), sendInfo@c(60), sendParameters_message@c(90), sendMessage@c(70), 
  3857 ;;  f               2    6[BANK0 ] PTR const unsigned char 
  3858 ;;		 -> STR_10(25), STR_9(51), STR_8(52), STR_7(42), 
  3859 ;;		 -> STR_6(54), STR_5(53), STR_4(52), STR_3(40), 
  3860 ;;		 -> STR_2(79), STR_1(65), 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  tmpval          4    0        struct .
  3863 ;;  val             2   19[BANK0 ] unsigned int 
  3864 ;;  cp              2    0        PTR const unsigned char 
  3865 ;;  len             2    0        unsigned int 
  3866 ;;  c               1   21[BANK0 ] unsigned char 
  3867 ;;  ap              1   18[BANK0 ] PTR void [1]
  3868 ;;		 -> ?_sprintf(2), 
  3869 ;;  prec            1   17[BANK0 ] char 
  3870 ;;  flag            1   16[BANK0 ] unsigned char 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  2    4[BANK0 ] int 
  3873 ;; Registers used:
  3874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3880 ;;      Params:         0       8       0       0       0
  3881 ;;      Locals:         0       6       0       0       0
  3882 ;;      Temps:          0       4       0       0       0
  3883 ;;      Totals:         0      18       0       0       0
  3884 ;;Total ram usage:       18 bytes
  3885 ;; Hardware stack levels used: 1
  3886 ;; Hardware stack levels required when called: 2
  3887 ;; This function calls:
  3888 ;;		___lwdiv
  3889 ;;		___lwmod
  3890 ;; This function is called by:
  3891 ;;		_sendMessage
  3892 ;;		_sendParameters_message
  3893 ;;		_sendInfo
  3894 ;;		_printACK
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           
  3899                           ;psect for function _sprintf
  3900  0EE5                     _sprintf:
  3901  0EE5                     l1611:	
  3902                           ;incstack = 0
  3903                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3904                           
  3905                           
  3906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  3907  0EE5  3028               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  3908  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3909  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3910  0EE8  00AC               	movwf	??_sprintf
  3911  0EE9  082C               	movf	??_sprintf,w
  3912  0EEA  00B2               	movwf	sprintf@ap
  3913                           
  3914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3915  0EEB  2FE1               	goto	l1671
  3916  0EEC                     l1613:
  3917                           
  3918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3919  0EEC  3025               	movlw	37
  3920  0EED  0635               	xorwf	sprintf@c,w
  3921  0EEE  1903               	btfsc	3,2
  3922  0EEF  2EF1               	goto	u1101
  3923  0EF0  2EF2               	goto	u1100
  3924  0EF1                     u1101:
  3925  0EF1  2F02               	goto	l1619
  3926  0EF2                     u1100:
  3927  0EF2                     l1615:
  3928                           
  3929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3930  0EF2  0835               	movf	sprintf@c,w
  3931  0EF3  00AC               	movwf	??_sprintf
  3932  0EF4  0824               	movf	sprintf@sp,w
  3933  0EF5  0084               	movwf	4
  3934  0EF6  1783               	bsf	3,7
  3935  0EF7  1C25               	btfss	sprintf@sp+1,0
  3936  0EF8  1383               	bcf	3,7
  3937  0EF9  082C               	movf	??_sprintf,w
  3938  0EFA  0080               	movwf	0
  3939  0EFB                     l1617:
  3940  0EFB  3001               	movlw	1
  3941  0EFC  07A4               	addwf	sprintf@sp,f
  3942  0EFD  1803               	skipnc
  3943  0EFE  0AA5               	incf	sprintf@sp+1,f
  3944  0EFF  3000               	movlw	0
  3945  0F00  07A5               	addwf	sprintf@sp+1,f
  3946                           
  3947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  3948  0F01  2FE1               	goto	l1671
  3949  0F02                     l1619:
  3950                           
  3951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3952  0F02  01B0               	clrf	sprintf@flag
  3953                           
  3954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3955  0F03  2F10               	goto	l1631
  3956  0F04                     l1621:
  3957                           
  3958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 825:    c = (char
      +                          )(*(int *)__va_arg((*(int **)ap), (int)0));
  3959  0F04  0832               	movf	sprintf@ap,w
  3960  0F05  0084               	movwf	4
  3961  0F06  1383               	bcf	3,7	;select IRP bank0
  3962  0F07  0800               	movf	0,w
  3963  0F08  00AC               	movwf	??_sprintf
  3964  0F09  082C               	movf	??_sprintf,w
  3965  0F0A  00B5               	movwf	sprintf@c
  3966  0F0B                     l1623:
  3967  0F0B  3002               	movlw	2
  3968  0F0C  00AC               	movwf	??_sprintf
  3969  0F0D  082C               	movf	??_sprintf,w
  3970  0F0E  07B2               	addwf	sprintf@ap,f
  3971  0F0F  2EF2               	goto	l1615
  3972  0F10                     l1631:
  3973  0F10  0827               	movf	sprintf@f+1,w
  3974  0F11  00AD               	movwf	??_sprintf+1
  3975  0F12  0826               	movf	sprintf@f,w
  3976  0F13  00AC               	movwf	??_sprintf
  3977  0F14  0AA6               	incf	sprintf@f,f
  3978  0F15  1903               	skipnz
  3979  0F16  0AA7               	incf	sprintf@f+1,f
  3980  0F17  082D               	movf	??_sprintf+1,w
  3981  0F18  00FF               	movwf	btemp+1
  3982  0F19  082C               	movf	??_sprintf,w
  3983  0F1A  0084               	movwf	4
  3984  0F1B  120A  118A  2400  120A  158A  	fcall	stringtab
  3985  0F20  00B5               	movwf	sprintf@c
  3986  0F21  00AE               	movwf	??_sprintf+2
  3987  0F22  01AF               	clrf	??_sprintf+3
  3988                           
  3989                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3990                           ; Switch size 1, requested type "simple"
  3991                           ; Number of cases is 1, Range of values is 0 to 0
  3992                           ; switch strategies available:
  3993                           ; Name         Instructions Cycles
  3994                           ; simple_byte            4     3 (average)
  3995                           ; direct_byte           11     8 (fixed)
  3996                           ; jumptable            260     6 (fixed)
  3997                           ;	Chosen strategy is simple_byte
  3998  0F23  082F               	movf	??_sprintf+3,w
  3999  0F24  3A00               	xorlw	0	; case 0
  4000  0F25  1903               	skipnz
  4001  0F26  2F28               	goto	l2209
  4002  0F27  2EF2               	goto	l1615
  4003  0F28                     l2209:
  4004                           
  4005                           ; Switch size 1, requested type "simple"
  4006                           ; Number of cases is 4, Range of values is 0 to 105
  4007                           ; switch strategies available:
  4008                           ; Name         Instructions Cycles
  4009                           ; simple_byte           13     7 (average)
  4010                           ; jumptable            260     6 (fixed)
  4011                           ;	Chosen strategy is simple_byte
  4012  0F28  082E               	movf	??_sprintf+2,w
  4013  0F29  3A00               	xorlw	0	; case 0
  4014  0F2A  1903               	skipnz
  4015  0F2B  2FF9               	goto	l1673
  4016  0F2C  3A63               	xorlw	99	; case 99
  4017  0F2D  1903               	skipnz
  4018  0F2E  2F04               	goto	l1621
  4019  0F2F  3A07               	xorlw	7	; case 100
  4020  0F30  1903               	skipnz
  4021  0F31  2F36               	goto	l1633
  4022  0F32  3A0D               	xorlw	13	; case 105
  4023  0F33  1903               	skipnz
  4024  0F34  2F36               	goto	l1633
  4025  0F35  2EF2               	goto	l1615
  4026  0F36                     l1633:
  4027                           
  4028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4029  0F36  0832               	movf	sprintf@ap,w
  4030  0F37  0084               	movwf	4
  4031  0F38  1383               	bcf	3,7	;select IRP bank0
  4032  0F39  0800               	movf	0,w
  4033  0F3A  00B3               	movwf	sprintf@val
  4034  0F3B  0A84               	incf	4,f
  4035  0F3C  0800               	movf	0,w
  4036  0F3D  00B4               	movwf	sprintf@val+1
  4037  0F3E                     l1635:
  4038  0F3E  3002               	movlw	2
  4039  0F3F  00AC               	movwf	??_sprintf
  4040  0F40  082C               	movf	??_sprintf,w
  4041  0F41  07B2               	addwf	sprintf@ap,f
  4042  0F42                     l1637:
  4043                           
  4044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  4045  0F42  1FB4               	btfss	sprintf@val+1,7
  4046  0F43  2F45               	goto	u1111
  4047  0F44  2F46               	goto	u1110
  4048  0F45                     u1111:
  4049  0F45  2F4F               	goto	l1643
  4050  0F46                     u1110:
  4051  0F46                     l1639:
  4052                           
  4053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  4054  0F46  3003               	movlw	3
  4055  0F47  00AC               	movwf	??_sprintf
  4056  0F48  082C               	movf	??_sprintf,w
  4057  0F49  04B0               	iorwf	sprintf@flag,f
  4058  0F4A                     l1641:
  4059                           
  4060                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  4061  0F4A  09B3               	comf	sprintf@val,f
  4062  0F4B  09B4               	comf	sprintf@val+1,f
  4063  0F4C  0AB3               	incf	sprintf@val,f
  4064  0F4D  1903               	skipnz
  4065  0F4E  0AB4               	incf	sprintf@val+1,f
  4066  0F4F                     l1643:
  4067                           
  4068                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  4069  0F4F  01B5               	clrf	sprintf@c
  4070  0F50  0AB5               	incf	sprintf@c,f
  4071  0F51                     l1649:
  4072                           
  4073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  4074  0F51  0835               	movf	sprintf@c,w
  4075  0F52  00AC               	movwf	??_sprintf
  4076  0F53  072C               	addwf	??_sprintf,w
  4077  0F54  3E12               	addlw	low (_dpowers| (0+32768))
  4078  0F55  0084               	movwf	4
  4079  0F56  3084               	movlw	high (_dpowers| (0+32768))
  4080  0F57  1803               	skipnc
  4081  0F58  3E01               	addlw	1
  4082  0F59  00FF               	movwf	btemp+1
  4083  0F5A  120A  118A  2400  120A  158A  	fcall	stringtab
  4084  0F5F  00AD               	movwf	??_sprintf+1
  4085  0F60  120A  118A  2400  120A  158A  	fcall	stringtab
  4086  0F65  00AE               	movwf	??_sprintf+2
  4087  0F66  082E               	movf	??_sprintf+2,w
  4088  0F67  0234               	subwf	sprintf@val+1,w
  4089  0F68  1D03               	skipz
  4090  0F69  2F6C               	goto	u1125
  4091  0F6A  082D               	movf	??_sprintf+1,w
  4092  0F6B  0233               	subwf	sprintf@val,w
  4093  0F6C                     u1125:
  4094  0F6C  1803               	skipnc
  4095  0F6D  2F6F               	goto	u1121
  4096  0F6E  2F70               	goto	u1120
  4097  0F6F                     u1121:
  4098  0F6F  2F71               	goto	l1653
  4099  0F70                     u1120:
  4100  0F70  2F7B               	goto	l1655
  4101  0F71                     l1653:
  4102  0F71  3001               	movlw	1
  4103  0F72  00AC               	movwf	??_sprintf
  4104  0F73  082C               	movf	??_sprintf,w
  4105  0F74  07B5               	addwf	sprintf@c,f
  4106  0F75  3005               	movlw	5
  4107  0F76  0635               	xorwf	sprintf@c,w
  4108  0F77  1D03               	btfss	3,2
  4109  0F78  2F7A               	goto	u1131
  4110  0F79  2F7B               	goto	u1130
  4111  0F7A                     u1131:
  4112  0F7A  2F51               	goto	l1649
  4113  0F7B                     u1130:
  4114  0F7B                     l1655:
  4115                           
  4116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  4117  0F7B  0830               	movf	sprintf@flag,w
  4118  0F7C  3903               	andlw	3
  4119  0F7D  1903               	btfsc	3,2
  4120  0F7E  2F80               	goto	u1141
  4121  0F7F  2F81               	goto	u1140
  4122  0F80                     u1141:
  4123  0F80  2F90               	goto	l1661
  4124  0F81                     u1140:
  4125  0F81                     l1657:
  4126                           
  4127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4128  0F81  302D               	movlw	45
  4129  0F82  00AC               	movwf	??_sprintf
  4130  0F83  0824               	movf	sprintf@sp,w
  4131  0F84  0084               	movwf	4
  4132  0F85  1783               	bsf	3,7
  4133  0F86  1C25               	btfss	sprintf@sp+1,0
  4134  0F87  1383               	bcf	3,7
  4135  0F88  082C               	movf	??_sprintf,w
  4136  0F89  0080               	movwf	0
  4137  0F8A                     l1659:
  4138  0F8A  3001               	movlw	1
  4139  0F8B  07A4               	addwf	sprintf@sp,f
  4140  0F8C  1803               	skipnc
  4141  0F8D  0AA5               	incf	sprintf@sp+1,f
  4142  0F8E  3000               	movlw	0
  4143  0F8F  07A5               	addwf	sprintf@sp+1,f
  4144  0F90                     l1661:
  4145                           
  4146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  4147  0F90  0835               	movf	sprintf@c,w
  4148  0F91  00AC               	movwf	??_sprintf
  4149  0F92  082C               	movf	??_sprintf,w
  4150  0F93  00B1               	movwf	sprintf@prec
  4151                           
  4152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4153  0F94  2FD8               	goto	l1669
  4154  0F95                     l1663:
  4155                           
  4156                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  4157  0F95  300A               	movlw	10
  4158  0F96  00A0               	movwf	___lwmod@divisor
  4159  0F97  3000               	movlw	0
  4160  0F98  00A1               	movwf	___lwmod@divisor+1
  4161  0F99  0831               	movf	sprintf@prec,w
  4162  0F9A  00AC               	movwf	??_sprintf
  4163  0F9B  072C               	addwf	??_sprintf,w
  4164  0F9C  3E12               	addlw	low (_dpowers| (0+32768))
  4165  0F9D  0084               	movwf	4
  4166  0F9E  3084               	movlw	high (_dpowers| (0+32768))
  4167  0F9F  1803               	skipnc
  4168  0FA0  3E01               	addlw	1
  4169  0FA1  00FF               	movwf	btemp+1
  4170  0FA2  120A  118A  2400  120A  158A  	fcall	stringtab
  4171  0FA7  00F2               	movwf	___lwdiv@divisor
  4172  0FA8  120A  118A  2400  120A  158A  	fcall	stringtab
  4173  0FAD  00F3               	movwf	___lwdiv@divisor+1
  4174  0FAE  0834               	movf	sprintf@val+1,w
  4175  0FAF  00F5               	movwf	___lwdiv@dividend+1
  4176  0FB0  0833               	movf	sprintf@val,w
  4177  0FB1  00F4               	movwf	___lwdiv@dividend
  4178  0FB2  120A  158A  2615  120A  158A  	fcall	___lwdiv
  4179  0FB7  0873               	movf	?___lwdiv+1,w
  4180  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  4181  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  4182  0FBA  00A3               	movwf	___lwmod@dividend+1
  4183  0FBB  0872               	movf	?___lwdiv,w
  4184  0FBC  00A2               	movwf	___lwmod@dividend
  4185  0FBD  120A  158A  25D9  120A  158A  	fcall	___lwmod
  4186  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  4187  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  4188  0FC4  0820               	movf	?___lwmod,w
  4189  0FC5  3E30               	addlw	48
  4190  0FC6  00AD               	movwf	??_sprintf+1
  4191  0FC7  082D               	movf	??_sprintf+1,w
  4192  0FC8  00B5               	movwf	sprintf@c
  4193  0FC9                     l1665:
  4194                           
  4195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  4196  0FC9  0835               	movf	sprintf@c,w
  4197  0FCA  00AC               	movwf	??_sprintf
  4198  0FCB  0824               	movf	sprintf@sp,w
  4199  0FCC  0084               	movwf	4
  4200  0FCD  1783               	bsf	3,7
  4201  0FCE  1C25               	btfss	sprintf@sp+1,0
  4202  0FCF  1383               	bcf	3,7
  4203  0FD0  082C               	movf	??_sprintf,w
  4204  0FD1  0080               	movwf	0
  4205  0FD2                     l1667:
  4206  0FD2  3001               	movlw	1
  4207  0FD3  07A4               	addwf	sprintf@sp,f
  4208  0FD4  1803               	skipnc
  4209  0FD5  0AA5               	incf	sprintf@sp+1,f
  4210  0FD6  3000               	movlw	0
  4211  0FD7  07A5               	addwf	sprintf@sp+1,f
  4212  0FD8                     l1669:
  4213                           
  4214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4215  0FD8  30FF               	movlw	255
  4216  0FD9  00AC               	movwf	??_sprintf
  4217  0FDA  082C               	movf	??_sprintf,w
  4218  0FDB  07B1               	addwf	sprintf@prec,f
  4219  0FDC  0A31               	incf	sprintf@prec,w
  4220  0FDD  1D03               	btfss	3,2
  4221  0FDE  2FE0               	goto	u1151
  4222  0FDF  2FE1               	goto	u1150
  4223  0FE0                     u1151:
  4224  0FE0  2F95               	goto	l1663
  4225  0FE1                     u1150:
  4226  0FE1                     l1671:
  4227                           
  4228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4229  0FE1  0827               	movf	sprintf@f+1,w
  4230  0FE2  00AD               	movwf	??_sprintf+1
  4231  0FE3  0826               	movf	sprintf@f,w
  4232  0FE4  00AC               	movwf	??_sprintf
  4233  0FE5  0AA6               	incf	sprintf@f,f
  4234  0FE6  1903               	skipnz
  4235  0FE7  0AA7               	incf	sprintf@f+1,f
  4236  0FE8  082D               	movf	??_sprintf+1,w
  4237  0FE9  00FF               	movwf	btemp+1
  4238  0FEA  082C               	movf	??_sprintf,w
  4239  0FEB  0084               	movwf	4
  4240  0FEC  120A  118A  2400  120A  158A  	fcall	stringtab
  4241  0FF1  00AE               	movwf	??_sprintf+2
  4242  0FF2  082E               	movf	??_sprintf+2,w
  4243  0FF3  00B5               	movwf	sprintf@c
  4244  0FF4  0835               	movf	sprintf@c,w
  4245  0FF5  1D03               	btfss	3,2
  4246  0FF6  2FF8               	goto	u1161
  4247  0FF7  2FF9               	goto	u1160
  4248  0FF8                     u1161:
  4249  0FF8  2EEC               	goto	l1613
  4250  0FF9                     u1160:
  4251  0FF9                     l1673:
  4252                           
  4253                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4254  0FF9  0824               	movf	sprintf@sp,w
  4255  0FFA  0084               	movwf	4
  4256  0FFB  1783               	bsf	3,7
  4257  0FFC  1C25               	btfss	sprintf@sp+1,0
  4258  0FFD  1383               	bcf	3,7
  4259  0FFE  0180               	clrf	0
  4260  0FFF                     l375:
  4261  0FFF  0008               	return
  4262  1000                     __end_of_sprintf:
  4263                           
  4264                           	psect	text14
  4265  0DD9                     __ptext14:	
  4266 ;; *************** function ___lwmod *****************
  4267 ;; Defined at:
  4268 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  divisor         2    0[BANK0 ] unsigned int 
  4271 ;;  dividend        2    2[BANK0 ] unsigned int 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  counter         1   11[COMMON] unsigned char 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  2    0[BANK0 ] unsigned int 
  4276 ;; Registers used:
  4277 ;;		wreg, status,2, status,0
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4283 ;;      Params:         0       4       0       0       0
  4284 ;;      Locals:         1       0       0       0       0
  4285 ;;      Temps:          1       0       0       0       0
  4286 ;;      Totals:         2       4       0       0       0
  4287 ;;Total ram usage:        6 bytes
  4288 ;; Hardware stack levels used: 1
  4289 ;; Hardware stack levels required when called: 1
  4290 ;; This function calls:
  4291 ;;		Nothing
  4292 ;; This function is called by:
  4293 ;;		_sprintf
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           
  4298                           ;psect for function ___lwmod
  4299  0DD9                     ___lwmod:
  4300  0DD9                     l1573:	
  4301                           ;incstack = 0
  4302                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4303                           
  4304  0DD9  1283               	bcf	3,5	;RP0=0, select bank0
  4305  0DDA  1303               	bcf	3,6	;RP1=0, select bank0
  4306  0DDB  0820               	movf	___lwmod@divisor,w
  4307  0DDC  0421               	iorwf	___lwmod@divisor+1,w
  4308  0DDD  1903               	btfsc	3,2
  4309  0DDE  2DE0               	goto	u1011
  4310  0DDF  2DE1               	goto	u1010
  4311  0DE0                     u1011:
  4312  0DE0  2E10               	goto	l1591
  4313  0DE1                     u1010:
  4314  0DE1                     l1575:
  4315  0DE1  01FB               	clrf	___lwmod@counter
  4316  0DE2  0AFB               	incf	___lwmod@counter,f
  4317  0DE3  2DEF               	goto	l1581
  4318  0DE4                     l1577:
  4319  0DE4  3001               	movlw	1
  4320  0DE5                     u1025:
  4321  0DE5  1003               	clrc
  4322  0DE6  0DA0               	rlf	___lwmod@divisor,f
  4323  0DE7  0DA1               	rlf	___lwmod@divisor+1,f
  4324  0DE8  3EFF               	addlw	-1
  4325  0DE9  1D03               	skipz
  4326  0DEA  2DE5               	goto	u1025
  4327  0DEB                     l1579:
  4328  0DEB  3001               	movlw	1
  4329  0DEC  00FA               	movwf	??___lwmod
  4330  0DED  087A               	movf	??___lwmod,w
  4331  0DEE  07FB               	addwf	___lwmod@counter,f
  4332  0DEF                     l1581:
  4333  0DEF  1FA1               	btfss	___lwmod@divisor+1,7
  4334  0DF0  2DF2               	goto	u1031
  4335  0DF1  2DF3               	goto	u1030
  4336  0DF2                     u1031:
  4337  0DF2  2DE4               	goto	l1577
  4338  0DF3                     u1030:
  4339  0DF3                     l1583:
  4340  0DF3  0821               	movf	___lwmod@divisor+1,w
  4341  0DF4  0223               	subwf	___lwmod@dividend+1,w
  4342  0DF5  1D03               	skipz
  4343  0DF6  2DF9               	goto	u1045
  4344  0DF7  0820               	movf	___lwmod@divisor,w
  4345  0DF8  0222               	subwf	___lwmod@dividend,w
  4346  0DF9                     u1045:
  4347  0DF9  1C03               	skipc
  4348  0DFA  2DFC               	goto	u1041
  4349  0DFB  2DFD               	goto	u1040
  4350  0DFC                     u1041:
  4351  0DFC  2E03               	goto	l1587
  4352  0DFD                     u1040:
  4353  0DFD                     l1585:
  4354  0DFD  0820               	movf	___lwmod@divisor,w
  4355  0DFE  02A2               	subwf	___lwmod@dividend,f
  4356  0DFF  0821               	movf	___lwmod@divisor+1,w
  4357  0E00  1C03               	skipc
  4358  0E01  03A3               	decf	___lwmod@dividend+1,f
  4359  0E02  02A3               	subwf	___lwmod@dividend+1,f
  4360  0E03                     l1587:
  4361  0E03  3001               	movlw	1
  4362  0E04                     u1055:
  4363  0E04  1003               	clrc
  4364  0E05  0CA1               	rrf	___lwmod@divisor+1,f
  4365  0E06  0CA0               	rrf	___lwmod@divisor,f
  4366  0E07  3EFF               	addlw	-1
  4367  0E08  1D03               	skipz
  4368  0E09  2E04               	goto	u1055
  4369  0E0A                     l1589:
  4370  0E0A  3001               	movlw	1
  4371  0E0B  02FB               	subwf	___lwmod@counter,f
  4372  0E0C  1D03               	btfss	3,2
  4373  0E0D  2E0F               	goto	u1061
  4374  0E0E  2E10               	goto	u1060
  4375  0E0F                     u1061:
  4376  0E0F  2DF3               	goto	l1583
  4377  0E10                     u1060:
  4378  0E10                     l1591:
  4379  0E10  0823               	movf	___lwmod@dividend+1,w
  4380  0E11  00A1               	movwf	?___lwmod+1
  4381  0E12  0822               	movf	___lwmod@dividend,w
  4382  0E13  00A0               	movwf	?___lwmod
  4383  0E14                     l661:
  4384  0E14  0008               	return
  4385  0E15                     __end_of___lwmod:
  4386                           
  4387                           	psect	text15
  4388  0E15                     __ptext15:	
  4389 ;; *************** function ___lwdiv *****************
  4390 ;; Defined at:
  4391 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  divisor         2    2[COMMON] unsigned int 
  4394 ;;  dividend        2    4[COMMON] unsigned int 
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;  quotient        2    7[COMMON] unsigned int 
  4397 ;;  counter         1    9[COMMON] unsigned char 
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  2    2[COMMON] unsigned int 
  4400 ;; Registers used:
  4401 ;;		wreg, status,2, status,0
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4407 ;;      Params:         4       0       0       0       0
  4408 ;;      Locals:         3       0       0       0       0
  4409 ;;      Temps:          1       0       0       0       0
  4410 ;;      Totals:         8       0       0       0       0
  4411 ;;Total ram usage:        8 bytes
  4412 ;; Hardware stack levels used: 1
  4413 ;; Hardware stack levels required when called: 1
  4414 ;; This function calls:
  4415 ;;		Nothing
  4416 ;; This function is called by:
  4417 ;;		_sprintf
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           
  4422                           ;psect for function ___lwdiv
  4423  0E15                     ___lwdiv:
  4424  0E15                     l1547:	
  4425                           ;incstack = 0
  4426                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4427                           
  4428  0E15  01F7               	clrf	___lwdiv@quotient
  4429  0E16  01F8               	clrf	___lwdiv@quotient+1
  4430  0E17                     l1549:
  4431  0E17  0872               	movf	___lwdiv@divisor,w
  4432  0E18  0473               	iorwf	___lwdiv@divisor+1,w
  4433  0E19  1903               	btfsc	3,2
  4434  0E1A  2E1C               	goto	u941
  4435  0E1B  2E1D               	goto	u940
  4436  0E1C                     u941:
  4437  0E1C  2E54               	goto	l1569
  4438  0E1D                     u940:
  4439  0E1D                     l1551:
  4440  0E1D  01F9               	clrf	___lwdiv@counter
  4441  0E1E  0AF9               	incf	___lwdiv@counter,f
  4442  0E1F  2E2B               	goto	l1557
  4443  0E20                     l1553:
  4444  0E20  3001               	movlw	1
  4445  0E21                     u955:
  4446  0E21  1003               	clrc
  4447  0E22  0DF2               	rlf	___lwdiv@divisor,f
  4448  0E23  0DF3               	rlf	___lwdiv@divisor+1,f
  4449  0E24  3EFF               	addlw	-1
  4450  0E25  1D03               	skipz
  4451  0E26  2E21               	goto	u955
  4452  0E27                     l1555:
  4453  0E27  3001               	movlw	1
  4454  0E28  00F6               	movwf	??___lwdiv
  4455  0E29  0876               	movf	??___lwdiv,w
  4456  0E2A  07F9               	addwf	___lwdiv@counter,f
  4457  0E2B                     l1557:
  4458  0E2B  1FF3               	btfss	___lwdiv@divisor+1,7
  4459  0E2C  2E2E               	goto	u961
  4460  0E2D  2E2F               	goto	u960
  4461  0E2E                     u961:
  4462  0E2E  2E20               	goto	l1553
  4463  0E2F                     u960:
  4464  0E2F                     l1559:
  4465  0E2F  3001               	movlw	1
  4466  0E30                     u975:
  4467  0E30  1003               	clrc
  4468  0E31  0DF7               	rlf	___lwdiv@quotient,f
  4469  0E32  0DF8               	rlf	___lwdiv@quotient+1,f
  4470  0E33  3EFF               	addlw	-1
  4471  0E34  1D03               	skipz
  4472  0E35  2E30               	goto	u975
  4473  0E36  0873               	movf	___lwdiv@divisor+1,w
  4474  0E37  0275               	subwf	___lwdiv@dividend+1,w
  4475  0E38  1D03               	skipz
  4476  0E39  2E3C               	goto	u985
  4477  0E3A  0872               	movf	___lwdiv@divisor,w
  4478  0E3B  0274               	subwf	___lwdiv@dividend,w
  4479  0E3C                     u985:
  4480  0E3C  1C03               	skipc
  4481  0E3D  2E3F               	goto	u981
  4482  0E3E  2E40               	goto	u980
  4483  0E3F                     u981:
  4484  0E3F  2E47               	goto	l1565
  4485  0E40                     u980:
  4486  0E40                     l1561:
  4487  0E40  0872               	movf	___lwdiv@divisor,w
  4488  0E41  02F4               	subwf	___lwdiv@dividend,f
  4489  0E42  0873               	movf	___lwdiv@divisor+1,w
  4490  0E43  1C03               	skipc
  4491  0E44  03F5               	decf	___lwdiv@dividend+1,f
  4492  0E45  02F5               	subwf	___lwdiv@dividend+1,f
  4493  0E46                     l1563:
  4494  0E46  1477               	bsf	___lwdiv@quotient,0
  4495  0E47                     l1565:
  4496  0E47  3001               	movlw	1
  4497  0E48                     u995:
  4498  0E48  1003               	clrc
  4499  0E49  0CF3               	rrf	___lwdiv@divisor+1,f
  4500  0E4A  0CF2               	rrf	___lwdiv@divisor,f
  4501  0E4B  3EFF               	addlw	-1
  4502  0E4C  1D03               	skipz
  4503  0E4D  2E48               	goto	u995
  4504  0E4E                     l1567:
  4505  0E4E  3001               	movlw	1
  4506  0E4F  02F9               	subwf	___lwdiv@counter,f
  4507  0E50  1D03               	btfss	3,2
  4508  0E51  2E53               	goto	u1001
  4509  0E52  2E54               	goto	u1000
  4510  0E53                     u1001:
  4511  0E53  2E2F               	goto	l1559
  4512  0E54                     u1000:
  4513  0E54                     l1569:
  4514  0E54  0878               	movf	___lwdiv@quotient+1,w
  4515  0E55  00F3               	movwf	?___lwdiv+1
  4516  0E56  0877               	movf	___lwdiv@quotient,w
  4517  0E57  00F2               	movwf	?___lwdiv
  4518  0E58                     l651:
  4519  0E58  0008               	return
  4520  0E59                     __end_of___lwdiv:
  4521                           
  4522                           	psect	text16
  4523  0CA8                     __ptext16:	
  4524 ;; *************** function _sendUART *****************
  4525 ;; Defined at:
  4526 ;;		line 176 in file "../../Lab2/AQC1.X/main.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  data            1    wreg     unsigned char 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  data            1    2[COMMON] unsigned char 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  1    wreg      void 
  4533 ;; Registers used:
  4534 ;;		wreg
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4540 ;;      Params:         0       0       0       0       0
  4541 ;;      Locals:         1       0       0       0       0
  4542 ;;      Temps:          0       0       0       0       0
  4543 ;;      Totals:         1       0       0       0       0
  4544 ;;Total ram usage:        1 bytes
  4545 ;; Hardware stack levels used: 1
  4546 ;; Hardware stack levels required when called: 1
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		_sendMessage
  4551 ;;		_sendParameters_message
  4552 ;;		_sendInfo
  4553 ;;		_checkLeds
  4554 ;;		_printACK
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           
  4559                           ;psect for function _sendUART
  4560  0CA8                     _sendUART:
  4561                           
  4562                           ;incstack = 0
  4563                           ; Regs used in _sendUART: [wreg]
  4564                           ;sendUART@data stored from wreg
  4565  0CA8  00F2               	movwf	sendUART@data
  4566  0CA9                     l1607:
  4567  0CA9                     l107:	
  4568                           ;../../Lab2/AQC1.X/main.c: 178:     while(!PIR1bits.TXIF)
  4569                           
  4570                           
  4571                           ;../../Lab2/AQC1.X/main.c: 178:     while(!PIR1bits.TXIF)
  4572  0CA9  1283               	bcf	3,5	;RP0=0, select bank0
  4573  0CAA  1303               	bcf	3,6	;RP1=0, select bank0
  4574  0CAB  1E0C               	btfss	12,4	;volatile
  4575  0CAC  2CAE               	goto	u1091
  4576  0CAD  2CAF               	goto	u1090
  4577  0CAE                     u1091:
  4578  0CAE  2CA9               	goto	l107
  4579  0CAF                     u1090:
  4580  0CAF                     l1609:
  4581                           
  4582                           ;../../Lab2/AQC1.X/main.c: 181:     TXREG = data;
  4583  0CAF  0872               	movf	sendUART@data,w
  4584  0CB0  0099               	movwf	25	;volatile
  4585  0CB1                     l110:
  4586  0CB1  0008               	return
  4587  0CB2                     __end_of_sendUART:
  4588                           
  4589                           	psect	text17
  4590  0D79                     __ptext17:	
  4591 ;; *************** function _delay *****************
  4592 ;; Defined at:
  4593 ;;		line 37 in file "../../Lab2/AQC1.X/main.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  n               4    2[COMMON] long 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  i               2   10[COMMON] int 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  1    wreg      void 
  4600 ;; Registers used:
  4601 ;;		wreg, status,2, btemp+1
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4607 ;;      Params:         4       0       0       0       0
  4608 ;;      Locals:         2       0       0       0       0
  4609 ;;      Temps:          4       0       0       0       0
  4610 ;;      Totals:        10       0       0       0       0
  4611 ;;Total ram usage:       10 bytes
  4612 ;; Hardware stack levels used: 1
  4613 ;; Hardware stack levels required when called: 1
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		_sendMessage
  4618 ;;		_sendParameters_message
  4619 ;;		_sendInfo
  4620 ;;		_main
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           
  4625                           ;psect for function _delay
  4626  0D79                     _delay:
  4627  0D79                     l1595:	
  4628                           ;incstack = 0
  4629                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  4630                           
  4631                           
  4632                           ;../../Lab2/AQC1.X/main.c: 38:     int i=0;
  4633  0D79  01FA               	clrf	delay@i
  4634  0D7A  01FB               	clrf	delay@i+1
  4635                           
  4636                           ;../../Lab2/AQC1.X/main.c: 39:     for (i=0;i<n;i++)
  4637  0D7B  01FA               	clrf	delay@i
  4638  0D7C  01FB               	clrf	delay@i+1
  4639  0D7D  2D84               	goto	l1599
  4640  0D7E                     l1597:
  4641  0D7E  3001               	movlw	1
  4642  0D7F  07FA               	addwf	delay@i,f
  4643  0D80  1803               	skipnc
  4644  0D81  0AFB               	incf	delay@i+1,f
  4645  0D82  3000               	movlw	0
  4646  0D83  07FB               	addwf	delay@i+1,f
  4647  0D84                     l1599:
  4648  0D84  087A               	movf	delay@i,w
  4649  0D85  00F6               	movwf	??_delay
  4650  0D86  087B               	movf	delay@i+1,w
  4651  0D87  00F7               	movwf	??_delay+1
  4652  0D88  3000               	movlw	0
  4653  0D89  1BF7               	btfsc	??_delay+1,7
  4654  0D8A  30FF               	movlw	255
  4655  0D8B  00F8               	movwf	??_delay+2
  4656  0D8C  00F9               	movwf	??_delay+3
  4657  0D8D  0879               	movf	??_delay+3,w
  4658  0D8E  3A80               	xorlw	128
  4659  0D8F  00FF               	movwf	btemp+1
  4660  0D90  0875               	movf	delay@n+3,w
  4661  0D91  3A80               	xorlw	128
  4662  0D92  027F               	subwf	btemp+1,w
  4663  0D93  1D03               	skipz
  4664  0D94  2D9F               	goto	u1073
  4665  0D95  0874               	movf	delay@n+2,w
  4666  0D96  0278               	subwf	??_delay+2,w
  4667  0D97  1D03               	skipz
  4668  0D98  2D9F               	goto	u1073
  4669  0D99  0873               	movf	delay@n+1,w
  4670  0D9A  0277               	subwf	??_delay+1,w
  4671  0D9B  1D03               	skipz
  4672  0D9C  2D9F               	goto	u1073
  4673  0D9D  0872               	movf	delay@n,w
  4674  0D9E  0276               	subwf	??_delay,w
  4675  0D9F                     u1073:
  4676  0D9F  1C03               	skipc
  4677  0DA0  2DA2               	goto	u1071
  4678  0DA1  2DA3               	goto	u1070
  4679  0DA2                     u1071:
  4680  0DA2  2D7E               	goto	l1597
  4681  0DA3                     u1070:
  4682  0DA3                     l71:
  4683  0DA3  0008               	return
  4684  0DA4                     __end_of_delay:
  4685                           
  4686                           	psect	text18
  4687  0D57                     __ptext18:	
  4688 ;; *************** function _heatAlarm *****************
  4689 ;; Defined at:
  4690 ;;		line 275 in file "../../Lab2/AQC1.X/main.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;  max_temp        2    4[COMMON] int 
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;		None
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  2    4[COMMON] int 
  4697 ;; Registers used:
  4698 ;;		wreg, status,2, status,0, pclath, cstack
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4704 ;;      Params:         2       0       0       0       0
  4705 ;;      Locals:         0       0       0       0       0
  4706 ;;      Temps:          3       0       0       0       0
  4707 ;;      Totals:         5       0       0       0       0
  4708 ;;Total ram usage:        5 bytes
  4709 ;; Hardware stack levels used: 1
  4710 ;; Hardware stack levels required when called: 2
  4711 ;; This function calls:
  4712 ;;		_convertADC_heat
  4713 ;; This function is called by:
  4714 ;;		_checkLeds
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           
  4719                           ;psect for function _heatAlarm
  4720  0D57                     _heatAlarm:
  4721  0D57                     l1733:	
  4722                           ;incstack = 0
  4723                           ; Regs used in _heatAlarm: [wreg+status,2+status,0+pclath+cstack]
  4724                           
  4725                           
  4726                           ;../../Lab2/AQC1.X/main.c: 276:     if(convertADC_heat() > 2*max_temp)
  4727  0D57  120A  158A  2529  120A  158A  	fcall	_convertADC_heat
  4728  0D5C  0875               	movf	heatAlarm@max_temp+1,w
  4729  0D5D  00F7               	movwf	??_heatAlarm+1
  4730  0D5E  0874               	movf	heatAlarm@max_temp,w
  4731  0D5F  00F6               	movwf	??_heatAlarm
  4732  0D60  1003               	clrc
  4733  0D61  0DF6               	rlf	??_heatAlarm,f
  4734  0D62  0DF7               	rlf	??_heatAlarm+1,f
  4735  0D63  0877               	movf	??_heatAlarm+1,w
  4736  0D64  3A80               	xorlw	128
  4737  0D65  00F8               	movwf	??_heatAlarm+2
  4738  0D66  0873               	movf	?_convertADC_heat+1,w
  4739  0D67  3A80               	xorlw	128
  4740  0D68  0278               	subwf	??_heatAlarm+2,w
  4741  0D69  1D03               	skipz
  4742  0D6A  2D6D               	goto	u1205
  4743  0D6B  0872               	movf	?_convertADC_heat,w
  4744  0D6C  0276               	subwf	??_heatAlarm,w
  4745  0D6D                     u1205:
  4746  0D6D  1803               	skipnc
  4747  0D6E  2D70               	goto	u1201
  4748  0D6F  2D71               	goto	u1200
  4749  0D70                     u1201:
  4750  0D70  2D76               	goto	l1739
  4751  0D71                     u1200:
  4752  0D71                     l1735:
  4753                           
  4754                           ;../../Lab2/AQC1.X/main.c: 277:         return 1;
  4755  0D71  3001               	movlw	1
  4756  0D72  00F4               	movwf	?_heatAlarm
  4757  0D73  3000               	movlw	0
  4758  0D74  00F5               	movwf	?_heatAlarm+1
  4759  0D75  2D78               	goto	l152
  4760  0D76                     l1739:
  4761                           
  4762                           ;../../Lab2/AQC1.X/main.c: 278:     return 0;
  4763  0D76  01F4               	clrf	?_heatAlarm
  4764  0D77  01F5               	clrf	?_heatAlarm+1
  4765  0D78                     l152:
  4766  0D78  0008               	return
  4767  0D79                     __end_of_heatAlarm:
  4768                           
  4769                           	psect	text19
  4770  0D29                     __ptext19:	
  4771 ;; *************** function _convertADC_heat *****************
  4772 ;; Defined at:
  4773 ;;		line 158 in file "../../Lab2/AQC1.X/main.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;		None
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;		None
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  2    2[COMMON] int 
  4780 ;; Registers used:
  4781 ;;		wreg
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4787 ;;      Params:         2       0       0       0       0
  4788 ;;      Locals:         0       0       0       0       0
  4789 ;;      Temps:          0       0       0       0       0
  4790 ;;      Totals:         2       0       0       0       0
  4791 ;;Total ram usage:        2 bytes
  4792 ;; Hardware stack levels used: 1
  4793 ;; Hardware stack levels required when called: 1
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_heatAlarm
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           
  4802                           ;psect for function _convertADC_heat
  4803  0D29                     _convertADC_heat:
  4804  0D29                     l1601:	
  4805                           ;incstack = 0
  4806                           ; Regs used in _convertADC_heat: [wreg]
  4807                           
  4808                           
  4809                           ;../../Lab2/AQC1.X/main.c: 159:     ADCON0bits.GO_nDONE = 1;
  4810  0D29  1283               	bcf	3,5	;RP0=0, select bank0
  4811  0D2A  1303               	bcf	3,6	;RP1=0, select bank0
  4812  0D2B  151F               	bsf	31,2	;volatile
  4813                           
  4814                           ;../../Lab2/AQC1.X/main.c: 160:     ADCON0bits.CHS2 = 0;
  4815  0D2C  129F               	bcf	31,5	;volatile
  4816                           
  4817                           ;../../Lab2/AQC1.X/main.c: 161:     ADCON0bits.CHS1 = 1;
  4818  0D2D  161F               	bsf	31,4	;volatile
  4819                           
  4820                           ;../../Lab2/AQC1.X/main.c: 162:     ADCON0bits.CHS0 = 0;
  4821  0D2E  119F               	bcf	31,3	;volatile
  4822  0D2F                     l101:	
  4823                           ;../../Lab2/AQC1.X/main.c: 163:     while(ADCON0bits.GO_nDONE == 1)
  4824                           
  4825                           
  4826                           ;../../Lab2/AQC1.X/main.c: 163:     while(ADCON0bits.GO_nDONE == 1)
  4827  0D2F  191F               	btfsc	31,2	;volatile
  4828  0D30  2D32               	goto	u1081
  4829  0D31  2D33               	goto	u1080
  4830  0D32                     u1081:
  4831  0D32  2D2F               	goto	l101
  4832  0D33                     u1080:
  4833  0D33                     l1603:
  4834                           
  4835                           ;../../Lab2/AQC1.X/main.c: 165:     return (ADRESH << 8)+ADRESL;
  4836  0D33  081E               	movf	30,w	;volatile
  4837  0D34  00F3               	movwf	?_convertADC_heat+1
  4838  0D35  1683               	bsf	3,5	;RP0=1, select bank1
  4839  0D36  1303               	bcf	3,6	;RP1=0, select bank1
  4840  0D37  081E               	movf	30,w	;volatile
  4841  0D38  00F2               	movwf	?_convertADC_heat
  4842  0D39                     l104:
  4843  0D39  0008               	return
  4844  0D3A                     __end_of_convertADC_heat:
  4845                           
  4846                           	psect	text20
  4847  0D18                     __ptext20:	
  4848 ;; *************** function _convertADC_1 *****************
  4849 ;; Defined at:
  4850 ;;		line 148 in file "../../Lab2/AQC1.X/main.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;		None
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;		None
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  2    2[COMMON] int 
  4857 ;; Registers used:
  4858 ;;		wreg
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4864 ;;      Params:         2       0       0       0       0
  4865 ;;      Locals:         0       0       0       0       0
  4866 ;;      Temps:          0       0       0       0       0
  4867 ;;      Totals:         2       0       0       0       0
  4868 ;;Total ram usage:        2 bytes
  4869 ;; Hardware stack levels used: 1
  4870 ;; Hardware stack levels required when called: 1
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		_checkLeds
  4875 ;;		_main
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           
  4880                           ;psect for function _convertADC_1
  4881  0D18                     _convertADC_1:
  4882  0D18                     l1691:	
  4883                           ;incstack = 0
  4884                           ; Regs used in _convertADC_1: [wreg]
  4885                           
  4886                           
  4887                           ;../../Lab2/AQC1.X/main.c: 149:     ADCON0bits.GO_nDONE = 1;
  4888  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  4889  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  4890  0D1A  151F               	bsf	31,2	;volatile
  4891                           
  4892                           ;../../Lab2/AQC1.X/main.c: 150:     ADCON0bits.CHS2 = 0;
  4893  0D1B  129F               	bcf	31,5	;volatile
  4894                           
  4895                           ;../../Lab2/AQC1.X/main.c: 151:     ADCON0bits.CHS1 = 0;
  4896  0D1C  121F               	bcf	31,4	;volatile
  4897                           
  4898                           ;../../Lab2/AQC1.X/main.c: 152:     ADCON0bits.CHS0 = 1;
  4899  0D1D  159F               	bsf	31,3	;volatile
  4900  0D1E                     l95:	
  4901                           ;../../Lab2/AQC1.X/main.c: 153:     while(ADCON0bits.GO_nDONE == 1)
  4902                           
  4903                           
  4904                           ;../../Lab2/AQC1.X/main.c: 153:     while(ADCON0bits.GO_nDONE == 1)
  4905  0D1E  191F               	btfsc	31,2	;volatile
  4906  0D1F  2D21               	goto	u1181
  4907  0D20  2D22               	goto	u1180
  4908  0D21                     u1181:
  4909  0D21  2D1E               	goto	l95
  4910  0D22                     u1180:
  4911  0D22                     l1693:
  4912                           
  4913                           ;../../Lab2/AQC1.X/main.c: 155:     return (ADRESH << 8)+ADRESL;
  4914  0D22  081E               	movf	30,w	;volatile
  4915  0D23  00F3               	movwf	?_convertADC_1+1
  4916  0D24  1683               	bsf	3,5	;RP0=1, select bank1
  4917  0D25  1303               	bcf	3,6	;RP1=0, select bank1
  4918  0D26  081E               	movf	30,w	;volatile
  4919  0D27  00F2               	movwf	?_convertADC_1
  4920  0D28                     l98:
  4921  0D28  0008               	return
  4922  0D29                     __end_of_convertADC_1:
  4923                           
  4924                           	psect	text21
  4925  0D07                     __ptext21:	
  4926 ;; *************** function _convertADC_0 *****************
  4927 ;; Defined at:
  4928 ;;		line 138 in file "../../Lab2/AQC1.X/main.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;		None
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;		None
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  2    2[COMMON] int 
  4935 ;; Registers used:
  4936 ;;		wreg
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4942 ;;      Params:         2       0       0       0       0
  4943 ;;      Locals:         0       0       0       0       0
  4944 ;;      Temps:          0       0       0       0       0
  4945 ;;      Totals:         2       0       0       0       0
  4946 ;;Total ram usage:        2 bytes
  4947 ;; Hardware stack levels used: 1
  4948 ;; Hardware stack levels required when called: 1
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_checkLeds
  4953 ;;		_main
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           
  4958                           ;psect for function _convertADC_0
  4959  0D07                     _convertADC_0:
  4960  0D07                     l1685:	
  4961                           ;incstack = 0
  4962                           ; Regs used in _convertADC_0: [wreg]
  4963                           
  4964                           
  4965                           ;../../Lab2/AQC1.X/main.c: 139:     ADCON0bits.GO_nDONE = 1;
  4966  0D07  1283               	bcf	3,5	;RP0=0, select bank0
  4967  0D08  1303               	bcf	3,6	;RP1=0, select bank0
  4968  0D09  151F               	bsf	31,2	;volatile
  4969                           
  4970                           ;../../Lab2/AQC1.X/main.c: 140:     ADCON0bits.CHS2 = 0;
  4971  0D0A  129F               	bcf	31,5	;volatile
  4972                           
  4973                           ;../../Lab2/AQC1.X/main.c: 141:     ADCON0bits.CHS1 = 0;
  4974  0D0B  121F               	bcf	31,4	;volatile
  4975                           
  4976                           ;../../Lab2/AQC1.X/main.c: 142:     ADCON0bits.CHS0 = 0;
  4977  0D0C  119F               	bcf	31,3	;volatile
  4978  0D0D                     l89:	
  4979                           ;../../Lab2/AQC1.X/main.c: 143:     while(ADCON0bits.GO_nDONE == 1)
  4980                           
  4981                           
  4982                           ;../../Lab2/AQC1.X/main.c: 143:     while(ADCON0bits.GO_nDONE == 1)
  4983  0D0D  191F               	btfsc	31,2	;volatile
  4984  0D0E  2D10               	goto	u1171
  4985  0D0F  2D11               	goto	u1170
  4986  0D10                     u1171:
  4987  0D10  2D0D               	goto	l89
  4988  0D11                     u1170:
  4989  0D11                     l1687:
  4990                           
  4991                           ;../../Lab2/AQC1.X/main.c: 145:     return (ADRESH << 8)+ADRESL;
  4992  0D11  081E               	movf	30,w	;volatile
  4993  0D12  00F3               	movwf	?_convertADC_0+1
  4994  0D13  1683               	bsf	3,5	;RP0=1, select bank1
  4995  0D14  1303               	bcf	3,6	;RP1=0, select bank1
  4996  0D15  081E               	movf	30,w	;volatile
  4997  0D16  00F2               	movwf	?_convertADC_0
  4998  0D17                     l92:
  4999  0D17  0008               	return
  5000  0D18                     __end_of_convertADC_0:
  5001                           
  5002                           	psect	text22
  5003  0CF6                     __ptext22:	
  5004 ;; *************** function _abs *****************
  5005 ;; Defined at:
  5006 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\abs.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  a               2    4[COMMON] int 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;		None
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  2    4[COMMON] int 
  5013 ;; Registers used:
  5014 ;;		wreg, status,2, status,0
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5020 ;;      Params:         2       0       0       0       0
  5021 ;;      Locals:         0       0       0       0       0
  5022 ;;      Temps:          2       0       0       0       0
  5023 ;;      Totals:         4       0       0       0       0
  5024 ;;Total ram usage:        4 bytes
  5025 ;; Hardware stack levels used: 1
  5026 ;; Hardware stack levels required when called: 1
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_checkLeds
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           
  5035                           ;psect for function _abs
  5036  0CF6                     _abs:
  5037  0CF6                     l1743:	
  5038                           ;incstack = 0
  5039                           ; Regs used in _abs: [wreg+status,2+status,0]
  5040                           
  5041  0CF6  1FF5               	btfss	abs@a+1,7
  5042  0CF7  2CF9               	goto	u1211
  5043  0CF8  2CFA               	goto	u1210
  5044  0CF9                     u1211:
  5045  0CF9  2D06               	goto	l830
  5046  0CFA                     u1210:
  5047  0CFA                     l1745:
  5048  0CFA  0974               	comf	abs@a,w
  5049  0CFB  00F6               	movwf	??_abs
  5050  0CFC  0975               	comf	abs@a+1,w
  5051  0CFD  00F7               	movwf	??_abs+1
  5052  0CFE  0AF6               	incf	??_abs,f
  5053  0CFF  1903               	skipnz
  5054  0D00  0AF7               	incf	??_abs+1,f
  5055  0D01  0876               	movf	??_abs,w
  5056  0D02  00F4               	movwf	?_abs
  5057  0D03  0877               	movf	??_abs+1,w
  5058  0D04  00F5               	movwf	?_abs+1
  5059  0D05  2D06               	goto	l831
  5060  0D06                     l830:
  5061  0D06                     l831:
  5062  0D06  0008               	return
  5063  0D07                     __end_of_abs:
  5064                           
  5065                           	psect	text23
  5066  07D7                     __ptext23:	
  5067 ;; *************** function ___wmul *****************
  5068 ;; Defined at:
  5069 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  multiplier      2    2[COMMON] unsigned int 
  5072 ;;  multiplicand    2    4[COMMON] unsigned int 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;  product         2    6[COMMON] unsigned int 
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  2    2[COMMON] unsigned int 
  5077 ;; Registers used:
  5078 ;;		wreg, status,2, status,0
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5084 ;;      Params:         4       0       0       0       0
  5085 ;;      Locals:         2       0       0       0       0
  5086 ;;      Temps:          0       0       0       0       0
  5087 ;;      Totals:         6       0       0       0       0
  5088 ;;Total ram usage:        6 bytes
  5089 ;; Hardware stack levels used: 1
  5090 ;; Hardware stack levels required when called: 1
  5091 ;; This function calls:
  5092 ;;		Nothing
  5093 ;; This function is called by:
  5094 ;;		_main
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           
  5099                           ;psect for function ___wmul
  5100  07D7                     ___wmul:
  5101  07D7                     l1931:	
  5102                           ;incstack = 0
  5103                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5104                           
  5105  07D7  01F6               	clrf	___wmul@product
  5106  07D8  01F7               	clrf	___wmul@product+1
  5107  07D9                     l1933:
  5108  07D9  1C72               	btfss	___wmul@multiplier,0
  5109  07DA  2FDC               	goto	u1581
  5110  07DB  2FDD               	goto	u1580
  5111  07DC                     u1581:
  5112  07DC  2FE3               	goto	l379
  5113  07DD                     u1580:
  5114  07DD                     l1935:
  5115  07DD  0874               	movf	___wmul@multiplicand,w
  5116  07DE  07F6               	addwf	___wmul@product,f
  5117  07DF  1803               	skipnc
  5118  07E0  0AF7               	incf	___wmul@product+1,f
  5119  07E1  0875               	movf	___wmul@multiplicand+1,w
  5120  07E2  07F7               	addwf	___wmul@product+1,f
  5121  07E3                     l379:
  5122  07E3  3001               	movlw	1
  5123  07E4                     u1595:
  5124  07E4  1003               	clrc
  5125  07E5  0DF4               	rlf	___wmul@multiplicand,f
  5126  07E6  0DF5               	rlf	___wmul@multiplicand+1,f
  5127  07E7  3EFF               	addlw	-1
  5128  07E8  1D03               	skipz
  5129  07E9  2FE4               	goto	u1595
  5130  07EA                     l1937:
  5131  07EA  3001               	movlw	1
  5132  07EB                     u1605:
  5133  07EB  1003               	clrc
  5134  07EC  0CF3               	rrf	___wmul@multiplier+1,f
  5135  07ED  0CF2               	rrf	___wmul@multiplier,f
  5136  07EE  3EFF               	addlw	-1
  5137  07EF  1D03               	skipz
  5138  07F0  2FEB               	goto	u1605
  5139  07F1                     l1939:
  5140  07F1  0872               	movf	___wmul@multiplier,w
  5141  07F2  0473               	iorwf	___wmul@multiplier+1,w
  5142  07F3  1D03               	btfss	3,2
  5143  07F4  2FF6               	goto	u1611
  5144  07F5  2FF7               	goto	u1610
  5145  07F6                     u1611:
  5146  07F6  2FD9               	goto	l1933
  5147  07F7                     u1610:
  5148  07F7                     l1941:
  5149  07F7  0877               	movf	___wmul@product+1,w
  5150  07F8  00F3               	movwf	?___wmul+1
  5151  07F9  0876               	movf	___wmul@product,w
  5152  07FA  00F2               	movwf	?___wmul
  5153  07FB                     l381:
  5154  07FB  0008               	return
  5155  07FC                     __end_of___wmul:
  5156                           
  5157                           	psect	text24
  5158  0D3A                     __ptext24:	
  5159 ;; *************** function _interruptServiceRoutine *****************
  5160 ;; Defined at:
  5161 ;;		line 307 in file "../../Lab2/AQC1.X/main.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;		None
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;		None
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  1    wreg      void 
  5168 ;; Registers used:
  5169 ;;		wreg
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5175 ;;      Params:         0       0       0       0       0
  5176 ;;      Locals:         0       0       0       0       0
  5177 ;;      Temps:          2       0       0       0       0
  5178 ;;      Totals:         2       0       0       0       0
  5179 ;;Total ram usage:        2 bytes
  5180 ;; Hardware stack levels used: 1
  5181 ;; This function calls:
  5182 ;;		Nothing
  5183 ;; This function is called by:
  5184 ;;		Interrupt level 1
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187                           
  5188                           
  5189                           ;psect for function _interruptServiceRoutine
  5190  0D3A                     _interruptServiceRoutine:
  5191  0D3A                     i1l1945:
  5192                           
  5193                           ;../../Lab2/AQC1.X/main.c: 308:     if(INTCONbits.TMR0IF){
  5194  0D3A  1D0B               	btfss	11,2	;volatile
  5195  0D3B  2D3D               	goto	u162_21
  5196  0D3C  2D3E               	goto	u162_20
  5197  0D3D                     u162_21:
  5198  0D3D  2D45               	goto	i1l1951
  5199  0D3E                     u162_20:
  5200  0D3E                     i1l1947:
  5201                           
  5202                           ;../../Lab2/AQC1.X/main.c: 309:         timer = 1;
  5203  0D3E  3001               	movlw	1
  5204  0D3F  1283               	bcf	3,5	;RP0=0, select bank2
  5205  0D40  1703               	bsf	3,6	;RP1=1, select bank2
  5206  0D41  00E0               	movwf	_timer^(0+256)
  5207  0D42  3000               	movlw	0
  5208  0D43  00E1               	movwf	(_timer^(0+256)+1)
  5209  0D44                     i1l1949:
  5210                           
  5211                           ;../../Lab2/AQC1.X/main.c: 310:         INTCONbits.TMR0IF = 0;
  5212  0D44  110B               	bcf	11,2	;volatile
  5213  0D45                     i1l1951:
  5214                           
  5215                           ;../../Lab2/AQC1.X/main.c: 312:     if(INTCONbits.INTF){
  5216  0D45  1C8B               	btfss	11,1	;volatile
  5217  0D46  2D48               	goto	u163_21
  5218  0D47  2D49               	goto	u163_20
  5219  0D48                     u163_21:
  5220  0D48  2D50               	goto	i1l171
  5221  0D49                     u163_20:
  5222  0D49                     i1l1953:
  5223                           
  5224                           ;../../Lab2/AQC1.X/main.c: 313:         standbyINT = 1;
  5225  0D49  3001               	movlw	1
  5226  0D4A  1283               	bcf	3,5	;RP0=0, select bank2
  5227  0D4B  1703               	bsf	3,6	;RP1=1, select bank2
  5228  0D4C  00E2               	movwf	_standbyINT^(0+256)
  5229  0D4D  3000               	movlw	0
  5230  0D4E  00E3               	movwf	(_standbyINT^(0+256)+1)
  5231  0D4F                     i1l1955:
  5232                           
  5233                           ;../../Lab2/AQC1.X/main.c: 314:         INTCONbits.INTF = 0;
  5234  0D4F  108B               	bcf	11,1	;volatile
  5235  0D50                     i1l171:
  5236  0D50  0871               	movf	??_interruptServiceRoutine+1,w
  5237  0D51  008A               	movwf	10
  5238  0D52  0E70               	swapf	??_interruptServiceRoutine,w
  5239  0D53  0083               	movwf	3
  5240  0D54  0EFE               	swapf	btemp,f
  5241  0D55  0E7E               	swapf	btemp,w
  5242  0D56  0009               	retfie
  5243  0D57                     __end_of_interruptServiceRoutine:
  5244  007E                     btemp	set	126	;btemp
  5245  007E                     wtemp0	set	126
  5246                           
  5247                           	psect	intentry
  5248  0004                     __pintentry:	
  5249                           ;incstack = 0
  5250                           ; Regs used in _interruptServiceRoutine: [wreg]
  5251                           
  5252  0004                     interrupt_function:
  5253  007E                     saved_w	set	btemp
  5254  0004  00FE               	movwf	btemp
  5255  0005  0E03               	swapf	3,w
  5256  0006  00F0               	movwf	??_interruptServiceRoutine
  5257  0007  080A               	movf	10,w
  5258  0008  00F1               	movwf	??_interruptServiceRoutine+1
  5259  0009  120A  158A  2D3A   	ljmp	_interruptServiceRoutine
  5260                           
  5261                           	psect	config
  5262                           
  5263                           ;Config register CONFIG @ 0x2007
  5264                           ;	Oscillator Selection bits
  5265                           ;	FOSC = HS, HS oscillator
  5266                           ;	Watchdog Timer Enable bit
  5267                           ;	WDTE = OFF, WDT disabled
  5268                           ;	Power-up Timer Enable bit
  5269                           ;	PWRTE = OFF, PWRT disabled
  5270                           ;	Brown-out Reset Enable bit
  5271                           ;	BOREN = OFF, BOR disabled
  5272                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5273                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5274                           ;	Data EEPROM Memory Code Protection bit
  5275                           ;	CPD = OFF, Data EEPROM code protection off
  5276                           ;	Flash Program Memory Write Enable bits
  5277                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5278                           ;	In-Circuit Debugger Mode bit
  5279                           ;	DEBUG = 0x1, unprogrammed default
  5280                           ;	Flash Program Memory Code Protection bit
  5281                           ;	CP = OFF, Code protection off
  5282  2007                     	org	8199
  5283  2007  3F3A               	dw	16186

Data Sizes:
    Strings     513
    Constant    10
    Data        0
    BSS         10
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     31      42
    BANK1            80     72      72
    BANK3            96     92      92
    BANK2            96     78      84

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_10(CODE[25]), STR_9(CODE[51]), STR_8(CODE[52]), STR_7(CODE[42]), 
		 -> STR_6(CODE[54]), STR_5(CODE[53]), STR_4(CODE[52]), STR_3(CODE[40]), 
		 -> STR_2(CODE[79]), STR_1(CODE[65]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 90
		 -> printACK@frase(BANK1[65]), sendInfo@c(BANK1[60]), sendParameters_message@c(BANK3[90]), sendMessage@c(BANK1[70]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_delay
    _sendParameters_message->_delay
    _sendMessage->_delay
    _sendInfo->_delay
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _heatAlarm->_convertADC_heat
    _abs->_convertADC_0
    _abs->_convertADC_1

Critical Paths under _interruptServiceRoutine in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkLeds
    _sendParameters_message->_sprintf
    _sendMessage->_sprintf
    _printACK->_sprintf
    _checkLeds->_sendInfo
    _sendInfo->_sprintf
    _sprintf->___lwmod

Critical Paths under _interruptServiceRoutine in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sendMessage
    _checkLeds->_sendInfo

Critical Paths under _interruptServiceRoutine in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_sendParameters_message

Critical Paths under _interruptServiceRoutine in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptServiceRoutine in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                80    80      0   19554
                                             29 BANK0      2     2      0
                                              0 BANK2     78    78      0
                             ___wmul
                          _checkLeds
                       _convertADC_0
                       _convertADC_1
                              _delay
                            _isResOn
                           _printACK
                        _receiveUART
                           _sendInfo
                        _sendMessage
             _sendParameters_message
                             _setADC
                         _setupTimer
                     _standby_toggle
                            _turnRes
 ---------------------------------------------------------------------------------
 (1) _turnRes                                              2     0      2     250
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _standby_toggle                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendParameters_message                              96    92      4    3460
                                             22 BANK0      4     0      4
                                              0 BANK3     92    92      0
                              _delay
                           _sendUART
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sendMessage                                         76    72      4    3612
                                             22 BANK0      4     0      4
                                              0 BANK1     72    72      0
                       _convertADC_0 (ARG)
                       _convertADC_1 (ARG)
                              _delay
                           _sendUART
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _receiveUART                                          2     2      0      23
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _printACK                                            69    67      2    3467
                                             22 BANK0      2     0      2
                                              0 BANK1     67    67      0
                           _sendUART
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _isResOn                                              2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _checkLeds                                            7     7      0    3703
                                             24 BANK0      5     5      0
                                _abs
                       _convertADC_0
                       _convertADC_1
                          _heatAlarm
                           _sendInfo
                           _sendUART
                             _setADC
                          _setADCRes
 ---------------------------------------------------------------------------------
 (2) _setADCRes                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setADC                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendInfo                                            65    65      0    3418
                                             22 BANK0      2     2      0
                                              0 BANK1     63    63      0
                              _delay
                           _sendUART
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    18      8    2691
                                              4 BANK0     18    10      8
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                             10 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendUART                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _delay                                               10     6      4     427
                                              2 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (2) _heatAlarm                                            5     3      2      98
                                              4 COMMON     5     3      2
                    _convertADC_heat
 ---------------------------------------------------------------------------------
 (3) _convertADC_heat                                      2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _convertADC_1                                         2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _convertADC_0                                         2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                       _convertADC_0 (ARG)
                       _convertADC_1 (ARG)
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     396
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interruptServiceRoutine                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _checkLeds
     _abs
       _convertADC_0 (ARG)
       _convertADC_1 (ARG)
     _convertADC_0
     _convertADC_1
     _heatAlarm
       _convertADC_heat
     _sendInfo
       _delay
       _sendUART
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _sendUART
     _setADC
     _setADCRes
   _convertADC_0
   _convertADC_1
   _delay
   _isResOn
   _printACK
     _sendUART
     _sprintf
   _receiveUART
   _sendInfo
   _sendMessage
     _convertADC_0 (ARG)
     _convertADC_1 (ARG)
     _delay (ARG)
     _sendUART (ARG)
     _sprintf (ARG)
   _sendParameters_message
     _delay
     _sendUART
     _sprintf
   _setADC
   _setupTimer
   _standby_toggle
   _turnRes

 _interruptServiceRoutine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     12E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      2A       5       52.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     48      48       7       90.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60     5C      5C       9       95.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60     4E      54      11       87.5%
DATA                 0      0     12E      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 22 14:53:28 2021

                               pc 0002                                l71 0DA3                                l83 0CCA  
                              l92 0D17                                l86 0CD7                                l95 0D1E  
                              l89 0D0D                                l98 0D28                                fsr 0004  
             ___wmul@multiplicand 0074                               l101 0D2F                               l110 0CB1  
                             l104 0D39                               l113 0CB2                               l122 0E9E  
                             l107 0CA9                               l116 0CBD                               l220 0078  
                             l213 0DD8                               l143 03E5                               l207 07D6  
                             l152 0D78                               l128 0EE4                               l161 0CE5  
                             l250 02D3                               l226 028A                               l155 03F3  
                             l164 03FB                               l148 0CF5                               l157 03F6  
                             l176 077C                               l177 0756                               l257 02FB  
                             l194 077B                               l381 07FB                               l375 0FFF  
                             l379 07E3                               l651 0E58                               l661 0E14  
                             l830 0D06                               l831 0D06                               u940 0E1D  
                             u941 0E1C                               u960 0E2F                               u961 0E2E  
                             u955 0E21                               u980 0E40                               u981 0E3F  
                             u975 0E30                               u985 0E3C                               u995 0E48  
                             _abs 0CF6                               fsr0 0004                               indf 0000  
                  _standby_toggle 0CE6                       main@command 015C                              l2001 0072  
                            l2011 00B8                              l2003 0080                              ?_abs 0074  
                            l2101 02ED                              l2021 0102                              l2013 00C5  
                            l2005 0092                              l2111 0307                              l2103 02F3  
                            l2031 0157                              l2023 012D                              l2015 00D2  
                            l2007 009F                              l2113 0312                              l2105 02F7  
                            l2041 0190                              l2033 0166                              l2025 013C  
                            l2017 00E3                              l2009 00AB                              l2115 031C  
                            l2107 02FF                              l2051 01BD                              l2043 019B  
                            l2035 016B                              l2027 0141                              l2019 00F2  
                            l2109 0303                              l2117 0324                              l2205 0270  
                            l2061 020F                              l2053 01E3                              l2045 01A4  
                            l2037 017A                              l2029 0150                              l2207 039F  
                            l2063 0218                              l2055 01F2                              l2047 01AD  
                            l2039 0181                              l1601 0D29                              l2209 0F28  
                            l2081 02A7                              l2065 021F                              l2057 01FD  
                            l2049 01B6                              l2073 026B                              l1603 0D33  
                            l1611 0EE5                              l2083 02A9                              l2075 028D  
                            l2067 0245                              l2059 0206                              l1621 0F04  
                            l1613 0EEC                              l1701 0341                              l2093 02D7  
                            l2085 02B0                              l2069 0264                              l2077 0299  
                            l1607 0CA9                              l1551 0E1D                              l1623 0F0B  
                            l1631 0F10                              l1615 0EF2                              l1711 0387  
                            l1703 034F                              l2095 02DC                              l2087 02B2  
                            l2079 02A1                              l1609 0CAF                              l1561 0E40  
                            l1553 0E20                              l1641 0F4A                              l1633 0F36  
                            l1617 0EFB                              l1721 03C7                              l1705 035D  
                            l1801 03F7                              l2097 02E4                              l2089 02CD  
                            l1563 0E46                              l1555 0E27                              l1547 0E15  
                            l1643 0F4F                              l1635 0F3E                              l1619 0F02  
                            l1707 036B                              l1723 03D4                              l1715 0395  
                            l1811 063E                              l1803 061D                              l2099 02E9  
                            l1733 0D57                              l1565 0E47                              l1557 0E2B  
                            l1549 0E17                              l1581 0DEF                              l1573 0DD9  
                            l1661 0F90                              l1653 0F71                              l1637 0F42  
                            l1725 03DF                              l1717 03B6                              l1709 0379  
                            l1901 07A1                              l1821 0671                              l1813 063F  
                            l1805 0622                              l1743 0CF6                              l1735 0D71  
                            l1567 0E4E                              l1559 0E2F                              l1583 0DF3  
                            l1575 0DE1                              l1591 0E10                              l1663 0F95  
                            l1655 0F7B                              l1639 0F46                              l1671 0FE1  
                            l1719 03BF                              l1911 07BA                              l1903 07A7  
                            l1831 06A5                              l1823 0677                              l1815 0645  
                            l1807 0631                              l1751 0CB8                              l1745 0CFA  
                            l1569 0E54                              l1585 0DFD                              l1577 0DE4  
                            l1665 0FC9                              l1657 0F81                              l1649 0F51  
                            l1673 0FF9                              l1681 0CBE                              l1913 07C0  
                            l1905 07AF                              l1841 06C1                              l1833 06AB  
                            l1825 0688                              l1817 0646                              l1809 0636  
                            l1921 0DA4                              l1761 0E7E                              l1931 07D7  
                            l1691 0D18                              l1739 0D76                              l1595 0D79  
                            l1587 0E03                              l1579 0DEB                              l1667 0FD2  
                            l1659 0F8A                              l1683 0CCB                              l1915 07C6  
                            l1907 07B0                              l1851 06F8                              l1835 06B1  
                            l1843 06C8                              l1827 0699                              l1819 066B  
                            l1923 0DA8                              l1763 0E86                              l1755 0E59  
                            l1771 0EBB                              l1941 07F7                              l1933 07D9  
                            l1685 0D07                              l1693 0D22                              l1597 0D7E  
                            l1589 0E0A                              l1669 0FD8                              l1917 07CA  
                            l1909 07B4                              l1861 072F                              l1853 06FE  
                            l1845 06E8                              l1837 06B7                              l1829 06A3  
                            l1925 0DBC                              l1749 0CB2                              l1765 0E93  
                            l1757 0E5D                              l1773 0EC4                              l1781 0CEE  
                            l1935 07DD                              l1687 0D11                              l1599 0D84  
                            l1919 07D0                              l1871 0749                              l1863 0733  
                            l1855 0702                              l1847 06EC                              l1839 06BB  
                            l1791 0CD8                              l1927 0DC5                              l1759 0E75  
                            l1775 0ECC                              l1767 0E9F                              l1783 0CF1  
                            l1937 07EA                              l1697 0330                              l1881 076A  
                            l1873 074F                              l1865 0739                              l1857 0708  
                            l1849 06F2                              l1793 0CDE                              l1929 0DCD  
                            l1777 0ED9                              l1769 0EA3                              l1785 03E6  
                            l1961 0037                              l1939 07F1                              l1699 0333  
                            l1891 0785                              l1883 076E                              l1875 0758  
                            l1867 073F                              l1859 070F                              l1779 0CE6  
                            l1787 03E9                              l1971 004A                              l1963 003B  
                            l1893 078B                              l1885 0774                              l1877 075E  
                            l1869 0745                              l1797 0CE3                              l1789 03EF  
                            l1981 0051                              l1973 004B                              l1965 003F  
                            l1957 0021                              l1895 0791                              l1887 077E  
                            l1879 0764                              l1991 0063                              l1983 0052  
                            l1975 004E                              l1967 0047                              l1959 0031  
                            l1897 0797                              l1889 0784                              l1993 0064  
                            l1985 0055                              l1977 004F                              l1969 0048  
                            l1899 079B                              l1995 0064                              l1987 005A  
                            l1979 0050                              l1997 0064                              l1989 005F  
                            l1999 006C                              STR_1 046B                              STR_2 041C  
                            STR_3 05DC                              STR_4 0517                              STR_5 04E2  
                            STR_6 04AC                              STR_7 05B2                              STR_8 054B  
                            STR_9 057F                              u1000 0E54                              u1001 0E53  
                            u1010 0DE1                              u1011 0DE0                              u1100 0EF2  
                            u1101 0EF1                              u1030 0DF3                              u1110 0F46  
                            u1031 0DF2                              u1111 0F45                              u1200 0D71  
                            u1040 0DFD                              u1120 0F70                              u1201 0D70  
                            u1041 0DFC                              u1025 0DE5                              u1121 0F6F  
                            u1210 0CFA                              u1130 0F7B                              u1211 0CF9  
                            u1131 0F7A                              u1060 0E10                              u1140 0F81  
                            u1300 0671                              u1220 0CB8                              u1205 0D6D  
                            u1061 0E0F                              u1045 0DF9                              u1141 0F80  
                            u1125 0F6C                              u1301 0670                              u1221 0CB7  
                            u1070 0DA3                              u1150 0FE1                              u1310 0677  
                            u1230 0E9E                              u1071 0DA2                              u1055 0E04  
                            u1151 0FE0                              u1311 0676                              u1231 0E9D  
                            u1080 0D33                              u1160 0FF9                              u1400 06F8  
                            u1320 0688                              u1240 0EE4                              u1081 0D32  
                            u1073 0D9F                              u1161 0FF8                              u1401 06F7  
                            u1321 0687                              u1241 0EE3                              u1170 0D11  
                            u1090 0CAF                              u1410 06FE                              u1330 0699  
                            u1250 0CEE                              u1171 0D10                              u1091 0CAE  
                            u1411 06FD                              u1331 0698                              u1251 0CED  
                            u1180 0D22                              u1500 078B                              u1420 072F  
                            u1340 06A3                              u1260 03EF                              u1181 0D21  
                            u1501 078A                              u1421 072E                              u1341 06A2  
                            u1325 0684                              u1261 03EE                              u1190 03DF  
                            u1510 0791                              u1430 0739                              u1350 06AB  
                            u1270 0CDE                              u1191 03DE                              u1511 0790  
                            u1431 0738                              u1351 06AA                              u1335 0695  
                            u1271 0CDD                              u1520 0797                              u1440 073F  
                            u1360 06B1                              u1280 063E                              u1521 0796  
                            u1441 073E                              u1425 072B                              u1361 06B0  
                            u1345 069F                              u1281 063D                              u1610 07F7  
                            u1530 07AF                              u1450 0745                              u1370 06B7  
                            u1290 0645                              u1611 07F6                              u1531 07AE  
                            u1451 0744                              u1371 06B6                              u1291 0644  
                            u1540 07BA                              u1460 075E                              u1380 06E8  
                            u1700 01B6                              u1605 07EB                              u1541 07B9  
                            u1461 075D                              u1381 06E7                              u1701 01B5  
                            u1550 07C0                              u1470 0764                              u1390 06F2  
                            u1710 01FD                              u1551 07BF                              u1471 0763  
                            u1391 06F1                              u1711 01FC                              u1560 07C6  
                            u1480 076A                              u1800 02F3                              u1720 0206  
                            u1640 0072                              u1561 07C5                              u1481 0769  
                            u1385 06E4                              u1801 02F2                              u1721 0205  
                            u1641 0071                              u1490 0784                              u1570 0DD8  
                            u1810 02F7                              u1730 020F                              u1650 00AB  
                            u1491 0783                              u1571 0DD7                              u1811 02F6  
                            u1731 020E                              u1651 00AA                              u1580 07DD  
                            u1820 02FB                              u1740 0218                              u1660 00B8  
                            u1581 07DC                              u1821 02FA                              u1741 0217  
                            u1661 00B7                              u1830 02FF                              u1750 02A1  
                            u1670 019B                              u1831 02FE                              u1751 02A0  
                            u1671 019A                              u1840 0303                              u1760 02B0  
                            u1680 01A4                              u1841 0302                              u1761 02AF  
                            u1681 01A3                              u1665 00B4                              u1850 0307  
                            u1770 02D3                              u1690 01AD                              u1595 07E4  
                            u1851 0306                              u1771 02D2                              u1691 01AC  
                            u1860 0312                              u1780 02D7                              u1861 0311  
                            u1781 02D6                              u1790 02E4                              u1791 02E3  
                            abs@a 0074                              _main 0021                              btemp 007E  
                   ?_convertADC_0 0072                     ?_convertADC_1 0072                              start 000C  
                           ??_abs 0076                             ?_main 0070                             STR_10 0604  
                 __end_of___lwdiv 0E59                             i1l171 0D50                   __end_of___lwmod 0E15  
         sendParameters_message@c 0190                             _RCREG 001A           sendParameters_message@i 01EA  
                           _RCSTA 0018                             _SPBRG 0099                             _TRISB 0086  
                           _TXREG 0019                             _TXSTA 0098            __end_of_standby_toggle 0CF6  
                 __end_of_isResOn 0CE6                             _alarm 0046                             _delay 0D79  
                 __end_of_dpowers 041C                             _count 015E         ??_interruptServiceRoutine 0070  
                           _timer 0160                             main@i 0156                             pclath 000A  
                           status 0003                    ??_convertADC_0 0074                    ??_convertADC_1 0074  
                           wtemp0 007E                   __end_of_sprintf 1000                      ?_receiveUART 0070  
                 __end_of_turnRes 03F7                   __initialization 000F                      __end_of_main 032D  
                          ??_main 003D                      ?_sendMessage 0036                   ?_standby_toggle 0070  
                          ?_delay 0072                            _ADRESH 001E                            _ADRESL 009E  
                          i1l1951 0D45                            i1l1953 0D49                            i1l1945 0D3A  
                          i1l1955 0D4F                            i1l1947 0D3E                            i1l1949 0D44  
                          u162_20 0D3E                            u162_21 0D3D                            u163_20 0D49  
                          u163_21 0D48   sendParameters_message@low_light 0036                            ___wmul 07D7  
 __end_of_interruptServiceRoutine 0D57                         ??___lwdiv 0076                         ??___lwmod 007A  
                 _convertADC_heat 0D29                            _setADC 0CBE                            delay@i 007A  
                          delay@n 0072                            _motion 0045                  __end_of_sendUART 0CB2  
                __end_of_sendInfo 03E6                         ??_isResOn 0074                  __end_of_printACK 0DD9  
                          saved_w 007E                         ??_sprintf 002C                         ??_turnRes 0074  
         __end_of__initialization 001D                    __pcstackCOMMON 0070                __size_of_checkLeds 01BA  
                   __end_of_delay 0DA4                __size_of_heatAlarm 0022              __end_of_convertADC_0 0D18  
            __end_of_convertADC_1 0D29                    _OPTION_REGbits 0081                           ??_delay 0076  
                      __pbssBANK0 0046                        __pbssBANK2 015E                __size_of_setADCRes 000D  
              checkLeds@lux_value 003B           __end_of_convertADC_heat 0D3A              __size_of_receiveUART 000C  
                      __pmaintext 0021                           ?___wmul 0072                        __pintentry 0004  
                         ?_setADC 0070              __size_of_sendMessage 0046                 __end_of_checkLeds 07D7  
                      __stringtab 0400                 __end_of_heatAlarm 0D79                         ?_sendUART 0070  
                       ?_sendInfo 0070          ??_sendParameters_message 007C                         ?_printACK 0036  
                 __size_of___wmul 0025                           ___lwdiv 0E15                           ___lwmod 0DD9  
                 __size_of_setADC 000D                  ??_standby_toggle 0072                           __ptext1 03E6  
                         __ptext2 0CE6                           __ptext3 03F7                           __ptext4 0E9F  
                         __ptext5 0E59                           __ptext6 0CB2                           __ptext7 0DA4  
                         __ptext8 0CD8                           __ptext9 061D                 __end_of_setADCRes 0CD8  
                         _isResOn 0CD8                           _dpowers 0412                      __size_of_abs 0011  
                         _standby 0048                           _sprintf 0EE5                           _turnRes 03E6  
            end_of_initialization 001D                        ??_sendUART 0072                        ??_sendInfo 0036  
                ?_convertADC_heat 0072                        _monitoring 0043                        ??_printACK 007C  
                       _RCSTAbits 0018             __size_of_convertADC_0 0011             __size_of_convertADC_1 0011  
                    __pstringtext 0400                         _PORTAbits 0005                         _PORTBbits 0006  
                       _PORTCbits 0007                        _setupTimer 03F7          ?_interruptServiceRoutine 0070  
                       _TRISAbits 0085                         _TRISCbits 0087                        _standbyINT 0162  
                 sendMessage@ldr1 0036                   sendMessage@ldr2 0038                        main@buffer 0110  
                       _TXSTAbits 0098                      _convertADC_0 0D07                      _convertADC_1 0D18  
 __size_of_sendParameters_message 0046                    __end_of___wmul 07FC                    __end_of_setADC 0CCB  
                    receiveUART@c 0073               start_initialization 000F                       __end_of_abs 0D07  
                    sendUART@data 0072                          ??___wmul 0076                          ??_setADC 0072  
                 _low_light_value 003F                       ?_setupTimer 0070                         ___latbits 0002  
                   __pcstackBANK0 0020                     __pcstackBANK1 00A0                     __pcstackBANK2 0110  
                   __pcstackBANK3 0190            _sendParameters_message 0E9F                       sprintf@flag 0030  
                   ??_receiveUART 0072                       sprintf@prec 0031                         _checkLeds 061D  
                       __pnvBANK0 003F                  ___lwdiv@dividend 0074                         _heatAlarm 0D57  
               __size_of_sendUART 000A                      sendInfo@info 00DC                 __size_of_sendInfo 00B9  
                        ?___lwdiv 0072                          ?___lwmod 0020                 __size_of_printACK 0035  
                   ??_sendMessage 007C                      sendMessage@c 00A0                      sendMessage@i 00E6  
                        ?_isResOn 0072                 heatAlarm@max_temp 0074                         _setADCRes 0CCB  
                ___lwdiv@quotient 0077                    __size_of_delay 002B                          ?_sprintf 0024  
                        ?_turnRes 0072                 interrupt_function 0004                    ___wmul@product 0076  
                      ?_checkLeds 0070               __size_of_setupTimer 0005                          _PIR1bits 000C  
                      ?_heatAlarm 0074               __end_of_receiveUART 0CBE                        _ADCON0bits 001F  
                     __stringbase 0412                        _ADCON1bits 009F                 ___wmul@multiplier 0072  
                       main@value 0158                        ?_setADCRes 0070               __end_of_sendMessage 0E9F  
__size_of_interruptServiceRoutine 001D     sendParameters_message@lux_cfg 0038                  __size_of___lwdiv 0044  
                __size_of___lwmod 003C          __size_of_convertADC_heat 0011                __end_of__stringtab 0412  
                __size_of_isResOn 000E                        sprintf@val 0033                         sendInfo@c 00A0  
                       sendInfo@i 00DD                   ___lwdiv@divisor 0072                   ___lwdiv@counter 0079  
                        __ptext10 0CCB                          __ptext11 0CBE                          __ptext20 0D18  
                        __ptext12 032D                          __ptext21 0D07                          __ptext13 0EE5  
                        __ptext22 0CF6                          __ptext14 0DD9                          __ptext23 07D7  
                        __ptext15 0E15                          __ptext24 0D3A                          __ptext16 0CA8  
                        __ptext17 0D79                          __ptext18 0D57                          __ptext19 0D29  
         __size_of_standby_toggle 0010                  __size_of_sprintf 011B                  __size_of_turnRes 0011  
                   __size_of_main 030C                       ??_checkLeds 0038                       _receiveUART 0CB2  
                        _sendUART 0CA8                          _sendInfo 032D                       ??_heatAlarm 0076  
                       printACK@i 00E1                          _printACK 0DA4                     printACK@frase 00A0  
                   printACK@value 0036                      ??_setupTimer 0072           ?_sendParameters_message 0036  
                     _sendMessage 0E59                        _INTCONbits 000B                       ??_setADCRes 0072  
                   _lux_value_cfg 0041                          intlevel1 0000                         sprintf@ap 0032  
                       sprintf@sp 0024                  ___lwmod@dividend 0022                __end_of_setupTimer 03FC  
                       stringcode 040A    __end_of_sendParameters_message 0EE5                        _OPTION_REG 0081  
                        sprintf@c 0035                          sprintf@f 0026                   ___lwmod@divisor 0020  
                 ___lwmod@counter 007B                          stringtab 0400                          turnRes@s 0072  
               ??_convertADC_heat 0074           _interruptServiceRoutine 0D3A  
